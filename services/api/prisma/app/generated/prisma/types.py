# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from . import _types
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = _types.SortMode
SortOrder = _types.SortOrder

MetricsFormat = _types.MetricsFormat

DatasourceOverride = _types.DatasourceOverride
HttpConfig = _types.HttpConfig


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
        'search': str,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]

class _UserRoleListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.UserRole']]


class _UserRoleListFilterHasInput(TypedDict):
    has: 'enums.UserRole'


class _UserRoleListFilterHasEveryInput(TypedDict):
    has_every: List['enums.UserRole']


class _UserRoleListFilterHasSomeInput(TypedDict):
    has_some: List['enums.UserRole']


class _UserRoleListFilterIsEmptyInput(TypedDict):
    is_empty: bool


UserRoleListFilter = Union[
    _UserRoleListFilterHasInput,
    _UserRoleListFilterEqualsInput,
    _UserRoleListFilterHasSomeInput,
    _UserRoleListFilterIsEmptyInput,
    _UserRoleListFilterHasEveryInput,
]


class _UserRoleListUpdateSet(TypedDict):
    set: List['enums.UserRole']


class _UserRoleListUpdatePush(TypedDict):
    push: List['enums.UserRole']


UserRoleListUpdate = Union[
    List['enums.UserRole'],
    _UserRoleListUpdateSet,
    _UserRoleListUpdatePush,
]

class _AuthProviderListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.AuthProvider']]


class _AuthProviderListFilterHasInput(TypedDict):
    has: 'enums.AuthProvider'


class _AuthProviderListFilterHasEveryInput(TypedDict):
    has_every: List['enums.AuthProvider']


class _AuthProviderListFilterHasSomeInput(TypedDict):
    has_some: List['enums.AuthProvider']


class _AuthProviderListFilterIsEmptyInput(TypedDict):
    is_empty: bool


AuthProviderListFilter = Union[
    _AuthProviderListFilterHasInput,
    _AuthProviderListFilterEqualsInput,
    _AuthProviderListFilterHasSomeInput,
    _AuthProviderListFilterIsEmptyInput,
    _AuthProviderListFilterHasEveryInput,
]


class _AuthProviderListUpdateSet(TypedDict):
    set: List['enums.AuthProvider']


class _AuthProviderListUpdatePush(TypedDict):
    push: List['enums.AuthProvider']


AuthProviderListUpdate = Union[
    List['enums.AuthProvider'],
    _AuthProviderListUpdateSet,
    _AuthProviderListUpdatePush,
]

class _DatasetStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.DatasetStatus']]


class _DatasetStatusListFilterHasInput(TypedDict):
    has: 'enums.DatasetStatus'


class _DatasetStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.DatasetStatus']


class _DatasetStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.DatasetStatus']


class _DatasetStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DatasetStatusListFilter = Union[
    _DatasetStatusListFilterHasInput,
    _DatasetStatusListFilterEqualsInput,
    _DatasetStatusListFilterHasSomeInput,
    _DatasetStatusListFilterIsEmptyInput,
    _DatasetStatusListFilterHasEveryInput,
]


class _DatasetStatusListUpdateSet(TypedDict):
    set: List['enums.DatasetStatus']


class _DatasetStatusListUpdatePush(TypedDict):
    push: List['enums.DatasetStatus']


DatasetStatusListUpdate = Union[
    List['enums.DatasetStatus'],
    _DatasetStatusListUpdateSet,
    _DatasetStatusListUpdatePush,
]

class _WidgetTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.WidgetType']]


class _WidgetTypeListFilterHasInput(TypedDict):
    has: 'enums.WidgetType'


class _WidgetTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.WidgetType']


class _WidgetTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.WidgetType']


class _WidgetTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


WidgetTypeListFilter = Union[
    _WidgetTypeListFilterHasInput,
    _WidgetTypeListFilterEqualsInput,
    _WidgetTypeListFilterHasSomeInput,
    _WidgetTypeListFilterIsEmptyInput,
    _WidgetTypeListFilterHasEveryInput,
]


class _WidgetTypeListUpdateSet(TypedDict):
    set: List['enums.WidgetType']


class _WidgetTypeListUpdatePush(TypedDict):
    push: List['enums.WidgetType']


WidgetTypeListUpdate = Union[
    List['enums.WidgetType'],
    _WidgetTypeListUpdateSet,
    _WidgetTypeListUpdatePush,
]

class _PaymentStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.PaymentStatus']]


class _PaymentStatusListFilterHasInput(TypedDict):
    has: 'enums.PaymentStatus'


class _PaymentStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.PaymentStatus']


class _PaymentStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.PaymentStatus']


class _PaymentStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


PaymentStatusListFilter = Union[
    _PaymentStatusListFilterHasInput,
    _PaymentStatusListFilterEqualsInput,
    _PaymentStatusListFilterHasSomeInput,
    _PaymentStatusListFilterIsEmptyInput,
    _PaymentStatusListFilterHasEveryInput,
]


class _PaymentStatusListUpdateSet(TypedDict):
    set: List['enums.PaymentStatus']


class _PaymentStatusListUpdatePush(TypedDict):
    push: List['enums.PaymentStatus']


PaymentStatusListUpdate = Union[
    List['enums.PaymentStatus'],
    _PaymentStatusListUpdateSet,
    _PaymentStatusListUpdatePush,
]

class _SubscriptionPlanListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.SubscriptionPlan']]


class _SubscriptionPlanListFilterHasInput(TypedDict):
    has: 'enums.SubscriptionPlan'


class _SubscriptionPlanListFilterHasEveryInput(TypedDict):
    has_every: List['enums.SubscriptionPlan']


class _SubscriptionPlanListFilterHasSomeInput(TypedDict):
    has_some: List['enums.SubscriptionPlan']


class _SubscriptionPlanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


SubscriptionPlanListFilter = Union[
    _SubscriptionPlanListFilterHasInput,
    _SubscriptionPlanListFilterEqualsInput,
    _SubscriptionPlanListFilterHasSomeInput,
    _SubscriptionPlanListFilterIsEmptyInput,
    _SubscriptionPlanListFilterHasEveryInput,
]


class _SubscriptionPlanListUpdateSet(TypedDict):
    set: List['enums.SubscriptionPlan']


class _SubscriptionPlanListUpdatePush(TypedDict):
    push: List['enums.SubscriptionPlan']


SubscriptionPlanListUpdate = Union[
    List['enums.SubscriptionPlan'],
    _SubscriptionPlanListUpdateSet,
    _SubscriptionPlanListUpdatePush,
]


# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    id: _int
    email: Optional[_str]
    emailVerified: _bool
    passwordHash: Optional[_str]
    provider: 'enums.AuthProvider'
    providerId: Optional[_str]
    phoneNumber: Optional[_str]
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: Optional[datetime.datetime]
    loginCount: _int
    profilePictureUrl: Optional[_str]
    bio: Optional[_str]
    country: Optional[_str]
    city: Optional[_str]
    socialLinks: Optional['fields.Json']
    skills: List[_str]
    primaryOrganizationId: Optional[_int]
    primaryOrganization: 'OrganizationCreateNestedWithoutRelationsInput'
    ownedOrganization: 'OrganizationCreateNestedWithoutRelationsInput'
    memberships: 'OrganizationMemberCreateManyNestedWithoutRelationsInput'
    sentInvites: 'OrganizationMemberCreateManyNestedWithoutRelationsInput'
    enrollments: 'EnrollmentCreateManyNestedWithoutRelationsInput'
    lessonProgresses: 'LessonProgressCreateManyNestedWithoutRelationsInput'
    certificates: 'CertificateCreateManyNestedWithoutRelationsInput'
    instructedModules: 'ModuleCreateManyNestedWithoutRelationsInput'
    projects: 'ProjectCreateManyNestedWithoutRelationsInput'
    proposals: 'ProposalCreateManyNestedWithoutRelationsInput'
    contractsAsFreelancer: 'ContractCreateManyNestedWithoutRelationsInput'
    contractsAsClient: 'ContractCreateManyNestedWithoutRelationsInput'
    datasets: 'DatasetCreateManyNestedWithoutRelationsInput'
    dashboards: 'DashboardCreateManyNestedWithoutRelationsInput'
    insights: 'InsightCreateManyNestedWithoutRelationsInput'
    mlModels: 'MLModelCreateManyNestedWithoutRelationsInput'
    transactions: 'TransactionCreateManyNestedWithoutRelationsInput'
    subscriptions: 'SubscriptionCreateManyNestedWithoutRelationsInput'
    notifications: 'NotificationCreateManyNestedWithoutRelationsInput'
    files: 'FileCreateManyNestedWithoutRelationsInput'
    authTokens: 'AuthTokenCreateManyNestedWithoutRelationsInput'
    auditLogs: 'AuditLogCreateManyNestedWithoutRelationsInput'
    skillsDetails: 'UserSkillCreateManyNestedWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""
    fullName: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    id: _int
    email: Optional[_str]
    emailVerified: _bool
    passwordHash: Optional[_str]
    provider: 'enums.AuthProvider'
    providerId: Optional[_str]
    phoneNumber: Optional[_str]
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: Optional[datetime.datetime]
    loginCount: _int
    profilePictureUrl: Optional[_str]
    bio: Optional[_str]
    country: Optional[_str]
    city: Optional[_str]
    socialLinks: Optional['fields.Json']
    skills: List[_str]
    primaryOrganizationId: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""
    fullName: _str

class UserConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'UserCreateWithoutRelationsInput'
    where: 'UserWhereUniqueInput'

class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]
    connect_or_create: Union['UserConnectOrCreateWithoutRelationsInput', List['UserConnectOrCreateWithoutRelationsInput']]

_UserWhereUnique_id_Input = TypedDict(
    '_UserWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_UserWhereUnique_email_Input = TypedDict(
    '_UserWhereUnique_email_Input',
    {
        'email': '_str',
    },
    total=True
)

_UserWhereUnique_phoneNumber_Input = TypedDict(
    '_UserWhereUnique_phoneNumber_Input',
    {
        'phoneNumber': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_id_Input',
    '_UserWhereUnique_email_Input',
    '_UserWhereUnique_phoneNumber_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    fullName: _str
    email: Optional[_str]
    emailVerified: _bool
    passwordHash: Optional[_str]
    provider: 'enums.AuthProvider'
    providerId: Optional[_str]
    phoneNumber: Optional[_str]
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: Optional[datetime.datetime]
    loginCount: Union[AtomicIntInput, _int]
    profilePictureUrl: Optional[_str]
    bio: Optional[_str]
    country: Optional[_str]
    city: Optional[_str]
    socialLinks: Optional['fields.Json']
    skills: 'types.StringListUpdate'
    primaryOrganization: 'OrganizationUpdateOneWithoutRelationsInput'
    ownedOrganization: 'OrganizationUpdateOneWithoutRelationsInput'
    memberships: 'OrganizationMemberUpdateManyWithoutRelationsInput'
    sentInvites: 'OrganizationMemberUpdateManyWithoutRelationsInput'
    enrollments: 'EnrollmentUpdateManyWithoutRelationsInput'
    lessonProgresses: 'LessonProgressUpdateManyWithoutRelationsInput'
    certificates: 'CertificateUpdateManyWithoutRelationsInput'
    instructedModules: 'ModuleUpdateManyWithoutRelationsInput'
    projects: 'ProjectUpdateManyWithoutRelationsInput'
    proposals: 'ProposalUpdateManyWithoutRelationsInput'
    contractsAsFreelancer: 'ContractUpdateManyWithoutRelationsInput'
    contractsAsClient: 'ContractUpdateManyWithoutRelationsInput'
    datasets: 'DatasetUpdateManyWithoutRelationsInput'
    dashboards: 'DashboardUpdateManyWithoutRelationsInput'
    insights: 'InsightUpdateManyWithoutRelationsInput'
    mlModels: 'MLModelUpdateManyWithoutRelationsInput'
    transactions: 'TransactionUpdateManyWithoutRelationsInput'
    subscriptions: 'SubscriptionUpdateManyWithoutRelationsInput'
    notifications: 'NotificationUpdateManyWithoutRelationsInput'
    files: 'FileUpdateManyWithoutRelationsInput'
    authTokens: 'AuthTokenUpdateManyWithoutRelationsInput'
    auditLogs: 'AuditLogUpdateManyWithoutRelationsInput'
    skillsDetails: 'UserSkillUpdateManyWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    fullName: _str
    email: Optional[_str]
    emailVerified: _bool
    passwordHash: Optional[_str]
    provider: 'enums.AuthProvider'
    providerId: Optional[_str]
    phoneNumber: Optional[_str]
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: Optional[datetime.datetime]
    loginCount: Union[AtomicIntInput, _int]
    profilePictureUrl: Optional[_str]
    bio: Optional[_str]
    country: Optional[_str]
    city: Optional[_str]
    socialLinks: Optional['fields.Json']
    skills: 'types.StringListUpdate'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    connect_or_create: List['UserConnectOrCreateWithoutRelationsInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_id_OrderByInput = TypedDict(
    '_User_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_User_fullName_OrderByInput = TypedDict(
    '_User_fullName_OrderByInput',
    {
        'fullName': 'SortOrder',
    },
    total=True
)

_User_email_OrderByInput = TypedDict(
    '_User_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_User_emailVerified_OrderByInput = TypedDict(
    '_User_emailVerified_OrderByInput',
    {
        'emailVerified': 'SortOrder',
    },
    total=True
)

_User_passwordHash_OrderByInput = TypedDict(
    '_User_passwordHash_OrderByInput',
    {
        'passwordHash': 'SortOrder',
    },
    total=True
)

_User_provider_OrderByInput = TypedDict(
    '_User_provider_OrderByInput',
    {
        'provider': 'SortOrder',
    },
    total=True
)

_User_providerId_OrderByInput = TypedDict(
    '_User_providerId_OrderByInput',
    {
        'providerId': 'SortOrder',
    },
    total=True
)

_User_phoneNumber_OrderByInput = TypedDict(
    '_User_phoneNumber_OrderByInput',
    {
        'phoneNumber': 'SortOrder',
    },
    total=True
)

_User_phoneVerified_OrderByInput = TypedDict(
    '_User_phoneVerified_OrderByInput',
    {
        'phoneVerified': 'SortOrder',
    },
    total=True
)

_User_role_OrderByInput = TypedDict(
    '_User_role_OrderByInput',
    {
        'role': 'SortOrder',
    },
    total=True
)

_User_acceptedTerms_OrderByInput = TypedDict(
    '_User_acceptedTerms_OrderByInput',
    {
        'acceptedTerms': 'SortOrder',
    },
    total=True
)

_User_subscribeNewsletter_OrderByInput = TypedDict(
    '_User_subscribeNewsletter_OrderByInput',
    {
        'subscribeNewsletter': 'SortOrder',
    },
    total=True
)

_User_isActive_OrderByInput = TypedDict(
    '_User_isActive_OrderByInput',
    {
        'isActive': 'SortOrder',
    },
    total=True
)

_User_lastLoginAt_OrderByInput = TypedDict(
    '_User_lastLoginAt_OrderByInput',
    {
        'lastLoginAt': 'SortOrder',
    },
    total=True
)

_User_loginCount_OrderByInput = TypedDict(
    '_User_loginCount_OrderByInput',
    {
        'loginCount': 'SortOrder',
    },
    total=True
)

_User_profilePictureUrl_OrderByInput = TypedDict(
    '_User_profilePictureUrl_OrderByInput',
    {
        'profilePictureUrl': 'SortOrder',
    },
    total=True
)

_User_bio_OrderByInput = TypedDict(
    '_User_bio_OrderByInput',
    {
        'bio': 'SortOrder',
    },
    total=True
)

_User_country_OrderByInput = TypedDict(
    '_User_country_OrderByInput',
    {
        'country': 'SortOrder',
    },
    total=True
)

_User_city_OrderByInput = TypedDict(
    '_User_city_OrderByInput',
    {
        'city': 'SortOrder',
    },
    total=True
)

_User_socialLinks_OrderByInput = TypedDict(
    '_User_socialLinks_OrderByInput',
    {
        'socialLinks': 'SortOrder',
    },
    total=True
)

_User_skills_OrderByInput = TypedDict(
    '_User_skills_OrderByInput',
    {
        'skills': 'SortOrder',
    },
    total=True
)

_User_primaryOrganizationId_OrderByInput = TypedDict(
    '_User_primaryOrganizationId_OrderByInput',
    {
        'primaryOrganizationId': 'SortOrder',
    },
    total=True
)

_User_createdAt_OrderByInput = TypedDict(
    '_User_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_User_updatedAt_OrderByInput = TypedDict(
    '_User_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_User_deletedAt_OrderByInput = TypedDict(
    '_User_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_User_RelevanceInner = TypedDict(
    '_User_RelevanceInner',
    {
        'fields': 'List[UserScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_User_RelevanceOrderByInput = TypedDict(
    '_User_RelevanceOrderByInput',
    {
        '_relevance': '_User_RelevanceInner',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_id_OrderByInput',
    '_User_fullName_OrderByInput',
    '_User_email_OrderByInput',
    '_User_emailVerified_OrderByInput',
    '_User_passwordHash_OrderByInput',
    '_User_provider_OrderByInput',
    '_User_providerId_OrderByInput',
    '_User_phoneNumber_OrderByInput',
    '_User_phoneVerified_OrderByInput',
    '_User_role_OrderByInput',
    '_User_acceptedTerms_OrderByInput',
    '_User_subscribeNewsletter_OrderByInput',
    '_User_isActive_OrderByInput',
    '_User_lastLoginAt_OrderByInput',
    '_User_loginCount_OrderByInput',
    '_User_profilePictureUrl_OrderByInput',
    '_User_bio_OrderByInput',
    '_User_country_OrderByInput',
    '_User_city_OrderByInput',
    '_User_socialLinks_OrderByInput',
    '_User_skills_OrderByInput',
    '_User_primaryOrganizationId_OrderByInput',
    '_User_createdAt_OrderByInput',
    '_User_updatedAt_OrderByInput',
    '_User_deletedAt_OrderByInput',
    '_User_RelevanceOrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUser']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUser']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUser']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUser']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUser']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUser']
    certificates: Union[bool, 'FindManyCertificateArgsFromUser']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUser']
    projects: Union[bool, 'FindManyProjectArgsFromUser']
    proposals: Union[bool, 'FindManyProposalArgsFromUser']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUser']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUser']
    datasets: Union[bool, 'FindManyDatasetArgsFromUser']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUser']
    insights: Union[bool, 'FindManyInsightArgsFromUser']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUser']
    transactions: Union[bool, 'FindManyTransactionArgsFromUser']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUser']
    notifications: Union[bool, 'FindManyNotificationArgsFromUser']
    files: Union[bool, 'FindManyFileArgsFromUser']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUser']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUser']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUser']


    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserRecursive1']
    files: Union[bool, 'FindManyFileArgsFromUserRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserRecursive1']


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserRecursive2']
    files: Union[bool, 'FindManyFileArgsFromUserRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserRecursive2']


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserRecursive3']
    files: Union[bool, 'FindManyFileArgsFromUserRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserRecursive3']


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserRecursive4']
    files: Union[bool, 'FindManyFileArgsFromUserRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserRecursive4']


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive1']


class OrganizationIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive2']


class OrganizationIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive3']


class OrganizationIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromUserRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserRecursive4']


class OrganizationIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class OrganizationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyOrganizationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    user: Union[bool, 'UserArgsFromUserRecursive1']
    invitedBy: Union[bool, 'UserArgsFromUserRecursive1']


class OrganizationMemberIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    user: Union[bool, 'UserArgsFromUserRecursive2']
    invitedBy: Union[bool, 'UserArgsFromUserRecursive2']


class OrganizationMemberIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    user: Union[bool, 'UserArgsFromUserRecursive3']
    invitedBy: Union[bool, 'UserArgsFromUserRecursive3']


class OrganizationMemberIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    user: Union[bool, 'UserArgsFromUserRecursive4']
    invitedBy: Union[bool, 'UserArgsFromUserRecursive4']


class OrganizationMemberIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class OrganizationMemberArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyOrganizationMemberArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive1']


class PathIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive2']


class PathIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive3']


class PathIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive4']


class PathIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class PathArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyPathArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    instructor: Union[bool, 'UserArgsFromUserRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromUserRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserRecursive1']


class ModuleIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    instructor: Union[bool, 'UserArgsFromUserRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromUserRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserRecursive2']


class ModuleIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    instructor: Union[bool, 'UserArgsFromUserRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromUserRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserRecursive3']


class ModuleIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    instructor: Union[bool, 'UserArgsFromUserRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromUserRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserRecursive4']


class ModuleIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ModuleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyModuleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    path: Union[bool, 'PathArgsFromUserRecursive1']
    module: Union[bool, 'ModuleArgsFromUserRecursive1']


class PathModuleIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    path: Union[bool, 'PathArgsFromUserRecursive2']
    module: Union[bool, 'ModuleArgsFromUserRecursive2']


class PathModuleIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    path: Union[bool, 'PathArgsFromUserRecursive3']
    module: Union[bool, 'ModuleArgsFromUserRecursive3']


class PathModuleIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    path: Union[bool, 'PathArgsFromUserRecursive4']
    module: Union[bool, 'ModuleArgsFromUserRecursive4']


class PathModuleIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class PathModuleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyPathModuleArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    module: Union[bool, 'ModuleArgsFromUserRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive1']


class LessonIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    module: Union[bool, 'ModuleArgsFromUserRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive2']


class LessonIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    module: Union[bool, 'ModuleArgsFromUserRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive3']


class LessonIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    module: Union[bool, 'ModuleArgsFromUserRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserRecursive4']


class LessonIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class LessonArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyLessonArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    module: Union[bool, 'ModuleArgsFromUserRecursive1']
    path: Union[bool, 'PathArgsFromUserRecursive1']


class EnrollmentIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    module: Union[bool, 'ModuleArgsFromUserRecursive2']
    path: Union[bool, 'PathArgsFromUserRecursive2']


class EnrollmentIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    module: Union[bool, 'ModuleArgsFromUserRecursive3']
    path: Union[bool, 'PathArgsFromUserRecursive3']


class EnrollmentIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    module: Union[bool, 'ModuleArgsFromUserRecursive4']
    path: Union[bool, 'PathArgsFromUserRecursive4']


class EnrollmentIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class EnrollmentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyEnrollmentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    lesson: Union[bool, 'LessonArgsFromUserRecursive1']


class LessonProgressIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    lesson: Union[bool, 'LessonArgsFromUserRecursive2']


class LessonProgressIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    lesson: Union[bool, 'LessonArgsFromUserRecursive3']


class LessonProgressIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    lesson: Union[bool, 'LessonArgsFromUserRecursive4']


class LessonProgressIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class LessonProgressArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyLessonProgressArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    module: Union[bool, 'ModuleArgsFromUserRecursive1']


class CertificateIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    module: Union[bool, 'ModuleArgsFromUserRecursive2']


class CertificateIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    module: Union[bool, 'ModuleArgsFromUserRecursive3']


class CertificateIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    module: Union[bool, 'ModuleArgsFromUserRecursive4']


class CertificateIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class CertificateArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyCertificateArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromUserRecursive1']


class ProjectIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromUserRecursive2']


class ProjectIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromUserRecursive3']


class ProjectIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    owner: Union[bool, 'UserArgsFromUserRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromUserRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromUserRecursive4']


class ProjectIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ProjectArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyProjectArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive1']
    freelancer: Union[bool, 'UserArgsFromUserRecursive1']


class ProposalIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive2']
    freelancer: Union[bool, 'UserArgsFromUserRecursive2']


class ProposalIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive3']
    freelancer: Union[bool, 'UserArgsFromUserRecursive3']


class ProposalIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive4']
    freelancer: Union[bool, 'UserArgsFromUserRecursive4']


class ProposalIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ProposalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyProposalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive1']
    freelancer: Union[bool, 'UserArgsFromUserRecursive1']
    client: Union[bool, 'UserArgsFromUserRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserRecursive1']


class ContractIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive2']
    freelancer: Union[bool, 'UserArgsFromUserRecursive2']
    client: Union[bool, 'UserArgsFromUserRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserRecursive2']


class ContractIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive3']
    freelancer: Union[bool, 'UserArgsFromUserRecursive3']
    client: Union[bool, 'UserArgsFromUserRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserRecursive3']


class ContractIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    project: Union[bool, 'ProjectArgsFromUserRecursive4']
    freelancer: Union[bool, 'UserArgsFromUserRecursive4']
    client: Union[bool, 'UserArgsFromUserRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserRecursive4']


class ContractIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ContractArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyContractArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    contract: Union[bool, 'ContractArgsFromUserRecursive1']


class DeliveryIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    contract: Union[bool, 'ContractArgsFromUserRecursive2']


class DeliveryIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    contract: Union[bool, 'ContractArgsFromUserRecursive3']


class DeliveryIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    contract: Union[bool, 'ContractArgsFromUserRecursive4']


class DeliveryIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class DeliveryArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyDeliveryArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class UserSkillIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class UserSkillIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class UserSkillIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class UserSkillIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserSkillArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserSkillArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive1']


class DatasetIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive2']


class DatasetIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive3']


class DatasetIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserRecursive4']


class DatasetIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class DatasetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyDatasetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive1']


class DashboardIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive2']


class DashboardIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive3']


class DashboardIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    ownerUser: Union[bool, 'UserArgsFromUserRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromUserRecursive4']


class DashboardIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class DashboardArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyDashboardArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive1']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive1']


class DashboardDatasetIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive2']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive2']


class DashboardDatasetIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive3']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive3']


class DashboardDatasetIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive4']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive4']


class DashboardDatasetIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class DashboardDatasetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyDashboardDatasetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive1']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive1']


class WidgetIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive2']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive2']


class WidgetIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive3']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive3']


class WidgetIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive4']
    dataset: Union[bool, 'DatasetArgsFromUserRecursive4']


class WidgetIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class WidgetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyWidgetArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive1']
    author: Union[bool, 'UserArgsFromUserRecursive1']


class InsightIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive2']
    author: Union[bool, 'UserArgsFromUserRecursive2']


class InsightIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive3']
    author: Union[bool, 'UserArgsFromUserRecursive3']


class InsightIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    dashboard: Union[bool, 'DashboardArgsFromUserRecursive4']
    author: Union[bool, 'UserArgsFromUserRecursive4']


class InsightIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class InsightArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyInsightArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    dataset: Union[bool, 'DatasetArgsFromUserRecursive1']
    creator: Union[bool, 'UserArgsFromUserRecursive1']


class MLModelIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    dataset: Union[bool, 'DatasetArgsFromUserRecursive2']
    creator: Union[bool, 'UserArgsFromUserRecursive2']


class MLModelIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    dataset: Union[bool, 'DatasetArgsFromUserRecursive3']
    creator: Union[bool, 'UserArgsFromUserRecursive3']


class MLModelIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    dataset: Union[bool, 'DatasetArgsFromUserRecursive4']
    creator: Union[bool, 'UserArgsFromUserRecursive4']


class MLModelIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class MLModelArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyMLModelArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']


class TransactionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']


class TransactionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']


class TransactionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']


class TransactionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class TransactionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyTransactionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive1']


class SubscriptionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive2']


class SubscriptionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive3']


class SubscriptionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserRecursive4']


class SubscriptionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class SubscriptionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManySubscriptionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class NotificationIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class NotificationIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class NotificationIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class NotificationIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class NotificationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyNotificationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class AuthTokenIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class AuthTokenIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class AuthTokenIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class AuthTokenIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AuthTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAuthTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    uploader: Union[bool, 'UserArgsFromUserRecursive1']


class FileIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    uploader: Union[bool, 'UserArgsFromUserRecursive2']


class FileIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    uploader: Union[bool, 'UserArgsFromUserRecursive3']


class FileIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    uploader: Union[bool, 'UserArgsFromUserRecursive4']


class FileIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class FileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyFileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    actor: Union[bool, 'UserArgsFromUserRecursive1']


class AuditLogIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    actor: Union[bool, 'UserArgsFromUserRecursive2']


class AuditLogIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    actor: Union[bool, 'UserArgsFromUserRecursive3']


class AuditLogIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    actor: Union[bool, 'UserArgsFromUserRecursive4']


class AuditLogIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AuditLogArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAuditLogArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    fullName: Union[_str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[_bool, 'types.BooleanFilter']
    passwordHash: Union[None, _str, 'types.StringFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    phoneVerified: Union[_bool, 'types.BooleanFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastLoginAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    loginCount: Union[_int, 'types.IntFilter']
    profilePictureUrl: Union[None, _str, 'types.StringFilter']
    bio: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    city: Union[None, _str, 'types.StringFilter']
    socialLinks: Union[None, 'fields.Json', 'types.JsonFilter']
    skills: 'types.StringListFilter'
    primaryOrganizationId: Union[None, _int, 'types.IntFilter']
    primaryOrganization: 'OrganizationRelationFilter'
    ownedOrganization: 'OrganizationRelationFilter'
    memberships: 'OrganizationMemberListRelationFilter'
    sentInvites: 'OrganizationMemberListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    lessonProgresses: 'LessonProgressListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    instructedModules: 'ModuleListRelationFilter'
    projects: 'ProjectListRelationFilter'
    proposals: 'ProposalListRelationFilter'
    contractsAsFreelancer: 'ContractListRelationFilter'
    contractsAsClient: 'ContractListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    insights: 'InsightListRelationFilter'
    mlModels: 'MLModelListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'
    notifications: 'NotificationListRelationFilter'
    files: 'FileListRelationFilter'
    authTokens: 'AuthTokenListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'
    skillsDetails: 'UserSkillListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    fullName: Union[_str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[_bool, 'types.BooleanFilter']
    passwordHash: Union[None, _str, 'types.StringFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    phoneVerified: Union[_bool, 'types.BooleanFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastLoginAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    loginCount: Union[_int, 'types.IntFilter']
    profilePictureUrl: Union[None, _str, 'types.StringFilter']
    bio: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    city: Union[None, _str, 'types.StringFilter']
    socialLinks: Union[None, 'fields.Json', 'types.JsonFilter']
    skills: 'types.StringListFilter'
    primaryOrganizationId: Union[None, _int, 'types.IntFilter']
    primaryOrganization: 'OrganizationRelationFilter'
    ownedOrganization: 'OrganizationRelationFilter'
    memberships: 'OrganizationMemberListRelationFilter'
    sentInvites: 'OrganizationMemberListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    lessonProgresses: 'LessonProgressListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    instructedModules: 'ModuleListRelationFilter'
    projects: 'ProjectListRelationFilter'
    proposals: 'ProposalListRelationFilter'
    contractsAsFreelancer: 'ContractListRelationFilter'
    contractsAsClient: 'ContractListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    insights: 'InsightListRelationFilter'
    mlModels: 'MLModelListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'
    notifications: 'NotificationListRelationFilter'
    files: 'FileListRelationFilter'
    authTokens: 'AuthTokenListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'
    skillsDetails: 'UserSkillListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    fullName: Union[_str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[_bool, 'types.BooleanFilter']
    passwordHash: Union[None, _str, 'types.StringFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    phoneVerified: Union[_bool, 'types.BooleanFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastLoginAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    loginCount: Union[_int, 'types.IntFilter']
    profilePictureUrl: Union[None, _str, 'types.StringFilter']
    bio: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    city: Union[None, _str, 'types.StringFilter']
    socialLinks: Union[None, 'fields.Json', 'types.JsonFilter']
    skills: 'types.StringListFilter'
    primaryOrganizationId: Union[None, _int, 'types.IntFilter']
    primaryOrganization: 'OrganizationRelationFilter'
    ownedOrganization: 'OrganizationRelationFilter'
    memberships: 'OrganizationMemberListRelationFilter'
    sentInvites: 'OrganizationMemberListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    lessonProgresses: 'LessonProgressListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    instructedModules: 'ModuleListRelationFilter'
    projects: 'ProjectListRelationFilter'
    proposals: 'ProposalListRelationFilter'
    contractsAsFreelancer: 'ContractListRelationFilter'
    contractsAsClient: 'ContractListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    insights: 'InsightListRelationFilter'
    mlModels: 'MLModelListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'
    notifications: 'NotificationListRelationFilter'
    files: 'FileListRelationFilter'
    authTokens: 'AuthTokenListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'
    skillsDetails: 'UserSkillListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    fullName: Union[_str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[_bool, 'types.BooleanFilter']
    passwordHash: Union[None, _str, 'types.StringFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    phoneVerified: Union[_bool, 'types.BooleanFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastLoginAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    loginCount: Union[_int, 'types.IntFilter']
    profilePictureUrl: Union[None, _str, 'types.StringFilter']
    bio: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    city: Union[None, _str, 'types.StringFilter']
    socialLinks: Union[None, 'fields.Json', 'types.JsonFilter']
    skills: 'types.StringListFilter'
    primaryOrganizationId: Union[None, _int, 'types.IntFilter']
    primaryOrganization: 'OrganizationRelationFilter'
    ownedOrganization: 'OrganizationRelationFilter'
    memberships: 'OrganizationMemberListRelationFilter'
    sentInvites: 'OrganizationMemberListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    lessonProgresses: 'LessonProgressListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    instructedModules: 'ModuleListRelationFilter'
    projects: 'ProjectListRelationFilter'
    proposals: 'ProposalListRelationFilter'
    contractsAsFreelancer: 'ContractListRelationFilter'
    contractsAsClient: 'ContractListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    insights: 'InsightListRelationFilter'
    mlModels: 'MLModelListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'
    notifications: 'NotificationListRelationFilter'
    files: 'FileListRelationFilter'
    authTokens: 'AuthTokenListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'
    skillsDetails: 'UserSkillListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    fullName: Union[_str, 'types.StringFilter']
    email: Union[None, _str, 'types.StringFilter']
    emailVerified: Union[_bool, 'types.BooleanFilter']
    passwordHash: Union[None, _str, 'types.StringFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[None, _str, 'types.StringFilter']
    phoneNumber: Union[None, _str, 'types.StringFilter']
    phoneVerified: Union[_bool, 'types.BooleanFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    lastLoginAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    loginCount: Union[_int, 'types.IntFilter']
    profilePictureUrl: Union[None, _str, 'types.StringFilter']
    bio: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    city: Union[None, _str, 'types.StringFilter']
    socialLinks: Union[None, 'fields.Json', 'types.JsonFilter']
    skills: 'types.StringListFilter'
    primaryOrganizationId: Union[None, _int, 'types.IntFilter']
    primaryOrganization: 'OrganizationRelationFilter'
    ownedOrganization: 'OrganizationRelationFilter'
    memberships: 'OrganizationMemberListRelationFilter'
    sentInvites: 'OrganizationMemberListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    lessonProgresses: 'LessonProgressListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    instructedModules: 'ModuleListRelationFilter'
    projects: 'ProjectListRelationFilter'
    proposals: 'ProposalListRelationFilter'
    contractsAsFreelancer: 'ContractListRelationFilter'
    contractsAsClient: 'ContractListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    insights: 'InsightListRelationFilter'
    mlModels: 'MLModelListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'
    notifications: 'NotificationListRelationFilter'
    files: 'FileListRelationFilter'
    authTokens: 'AuthTokenListRelationFilter'
    auditLogs: 'AuditLogListRelationFilter'
    skillsDetails: 'UserSkillListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    fullName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    passwordHash: Union[_str, 'types.StringWithAggregatesFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    phoneVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanWithAggregatesFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastLoginAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    loginCount: Union[_int, 'types.IntWithAggregatesFilter']
    profilePictureUrl: Union[_str, 'types.StringWithAggregatesFilter']
    bio: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    city: Union[_str, 'types.StringWithAggregatesFilter']
    socialLinks: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    primaryOrganizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    fullName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    passwordHash: Union[_str, 'types.StringWithAggregatesFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    phoneVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanWithAggregatesFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastLoginAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    loginCount: Union[_int, 'types.IntWithAggregatesFilter']
    profilePictureUrl: Union[_str, 'types.StringWithAggregatesFilter']
    bio: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    city: Union[_str, 'types.StringWithAggregatesFilter']
    socialLinks: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    primaryOrganizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    fullName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    passwordHash: Union[_str, 'types.StringWithAggregatesFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    phoneVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanWithAggregatesFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastLoginAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    loginCount: Union[_int, 'types.IntWithAggregatesFilter']
    profilePictureUrl: Union[_str, 'types.StringWithAggregatesFilter']
    bio: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    city: Union[_str, 'types.StringWithAggregatesFilter']
    socialLinks: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    primaryOrganizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    fullName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    passwordHash: Union[_str, 'types.StringWithAggregatesFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    phoneVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanWithAggregatesFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastLoginAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    loginCount: Union[_int, 'types.IntWithAggregatesFilter']
    profilePictureUrl: Union[_str, 'types.StringWithAggregatesFilter']
    bio: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    city: Union[_str, 'types.StringWithAggregatesFilter']
    socialLinks: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    primaryOrganizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    fullName: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    passwordHash: Union[_str, 'types.StringWithAggregatesFilter']
    provider: 'enums.AuthProvider'
    providerId: Union[_str, 'types.StringWithAggregatesFilter']
    phoneNumber: Union[_str, 'types.StringWithAggregatesFilter']
    phoneVerified: Union[_bool, 'types.BooleanWithAggregatesFilter']
    role: 'enums.UserRole'
    acceptedTerms: Union[_bool, 'types.BooleanWithAggregatesFilter']
    subscribeNewsletter: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastLoginAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    loginCount: Union[_int, 'types.IntWithAggregatesFilter']
    profilePictureUrl: Union[_str, 'types.StringWithAggregatesFilter']
    bio: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    city: Union[_str, 'types.StringWithAggregatesFilter']
    socialLinks: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    primaryOrganizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    id: _int
    fullName: _str
    email: _str
    emailVerified: _bool
    passwordHash: _str
    provider: 'enums.AuthProvider'
    providerId: _str
    phoneNumber: _str
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: datetime.datetime
    loginCount: _int
    profilePictureUrl: _str
    bio: _str
    country: _str
    city: _str
    socialLinks: 'fields.Json'
    skills: List[_str]
    primaryOrganizationId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""
    id: float
    loginCount: float
    primaryOrganizationId: float


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""
    id: _int
    loginCount: _int
    primaryOrganizationId: _int


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    id: _int
    fullName: _str
    email: _str
    emailVerified: _bool
    passwordHash: _str
    provider: 'enums.AuthProvider'
    providerId: _str
    phoneNumber: _str
    phoneVerified: _bool
    role: 'enums.UserRole'
    acceptedTerms: _bool
    subscribeNewsletter: _bool
    isActive: _bool
    lastLoginAt: datetime.datetime
    loginCount: _int
    profilePictureUrl: _str
    bio: _str
    country: _str
    city: _str
    socialLinks: 'fields.Json'
    skills: List[_str]
    primaryOrganizationId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    id: bool
    fullName: bool
    email: bool
    emailVerified: bool
    passwordHash: bool
    provider: bool
    providerId: bool
    phoneNumber: bool
    phoneVerified: bool
    role: bool
    acceptedTerms: bool
    subscribeNewsletter: bool
    isActive: bool
    lastLoginAt: bool
    loginCount: bool
    profilePictureUrl: bool
    bio: bool
    country: bool
    city: bool
    socialLinks: bool
    skills: bool
    primaryOrganizationId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    id: bool
    fullName: bool
    email: bool
    emailVerified: bool
    passwordHash: bool
    provider: bool
    providerId: bool
    phoneNumber: bool
    phoneVerified: bool
    role: bool
    acceptedTerms: bool
    subscribeNewsletter: bool
    isActive: bool
    lastLoginAt: bool
    loginCount: bool
    profilePictureUrl: bool
    bio: bool
    country: bool
    city: bool
    socialLinks: bool
    skills: bool
    primaryOrganizationId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""
    id: bool
    loginCount: bool
    primaryOrganizationId: bool


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'id': bool,
        'fullName': bool,
        'email': bool,
        'emailVerified': bool,
        'passwordHash': bool,
        'provider': bool,
        'providerId': bool,
        'phoneNumber': bool,
        'phoneVerified': bool,
        'role': bool,
        'acceptedTerms': bool,
        'subscribeNewsletter': bool,
        'isActive': bool,
        'lastLoginAt': bool,
        'loginCount': bool,
        'profilePictureUrl': bool,
        'bio': bool,
        'country': bool,
        'city': bool,
        'socialLinks': bool,
        'skills': bool,
        'primaryOrganizationId': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'id': int,
        'fullName': int,
        'email': int,
        'emailVerified': int,
        'passwordHash': int,
        'provider': int,
        'providerId': int,
        'phoneNumber': int,
        'phoneVerified': int,
        'role': int,
        'acceptedTerms': int,
        'subscribeNewsletter': int,
        'isActive': int,
        'lastLoginAt': int,
        'loginCount': int,
        'profilePictureUrl': int,
        'bio': int,
        'country': int,
        'city': int,
        'socialLinks': int,
        'skills': int,
        'primaryOrganizationId': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'id',
    'fullName',
    'email',
    'emailVerified',
    'passwordHash',
    'provider',
    'providerId',
    'phoneNumber',
    'phoneVerified',
    'role',
    'acceptedTerms',
    'subscribeNewsletter',
    'isActive',
    'lastLoginAt',
    'loginCount',
    'profilePictureUrl',
    'bio',
    'country',
    'city',
    'socialLinks',
    'skills',
    'primaryOrganizationId',
    'primaryOrganization',
    'ownedOrganization',
    'memberships',
    'sentInvites',
    'enrollments',
    'lessonProgresses',
    'certificates',
    'instructedModules',
    'projects',
    'proposals',
    'contractsAsFreelancer',
    'contractsAsClient',
    'datasets',
    'dashboards',
    'insights',
    'mlModels',
    'transactions',
    'subscriptions',
    'notifications',
    'files',
    'authTokens',
    'auditLogs',
    'skillsDetails',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
UserScalarFieldKeys = Literal[
    'id',
    'fullName',
    'email',
    'emailVerified',
    'passwordHash',
    'provider',
    'providerId',
    'phoneNumber',
    'phoneVerified',
    'role',
    'acceptedTerms',
    'subscribeNewsletter',
    'isActive',
    'lastLoginAt',
    'loginCount',
    'profilePictureUrl',
    'bio',
    'country',
    'city',
    'socialLinks',
    'skills',
    'primaryOrganizationId',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = Literal[
        'primaryOrganization',
        'ownedOrganization',
        'memberships',
        'sentInvites',
        'enrollments',
        'lessonProgresses',
        'certificates',
        'instructedModules',
        'projects',
        'proposals',
        'contractsAsFreelancer',
        'contractsAsClient',
        'datasets',
        'dashboards',
        'insights',
        'mlModels',
        'transactions',
        'subscriptions',
        'notifications',
        'files',
        'authTokens',
        'auditLogs',
        'skillsDetails',
    ]

# Organization types

class OrganizationOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Organization create method"""
    id: _int
    description: Optional[_str]
    country: Optional[_str]
    website: Optional[_str]
    industry: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerId: Optional[_int]
    owner: 'UserCreateNestedWithoutRelationsInput'
    primaryUsers: 'UserCreateManyNestedWithoutRelationsInput'
    members: 'OrganizationMemberCreateManyNestedWithoutRelationsInput'
    datasets: 'DatasetCreateManyNestedWithoutRelationsInput'
    dashboards: 'DashboardCreateManyNestedWithoutRelationsInput'
    projects: 'ProjectCreateManyNestedWithoutRelationsInput'
    transactions: 'TransactionCreateManyNestedWithoutRelationsInput'
    subscriptions: 'SubscriptionCreateManyNestedWithoutRelationsInput'


class OrganizationCreateInput(OrganizationOptionalCreateInput):
    """Required arguments to the Organization create method"""
    name: _str
    slug: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class OrganizationOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Organization create method, without relations"""
    id: _int
    description: Optional[_str]
    country: Optional[_str]
    website: Optional[_str]
    industry: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerId: Optional[_int]


class OrganizationCreateWithoutRelationsInput(OrganizationOptionalCreateWithoutRelationsInput):
    """Required arguments to the Organization create method, without relations"""
    name: _str
    slug: _str

class OrganizationConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'OrganizationCreateWithoutRelationsInput'
    where: 'OrganizationWhereUniqueInput'

class OrganizationCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'OrganizationCreateWithoutRelationsInput'
    connect: 'OrganizationWhereUniqueInput'
    connect_or_create: 'OrganizationConnectOrCreateWithoutRelationsInput'


class OrganizationCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['OrganizationCreateWithoutRelationsInput', List['OrganizationCreateWithoutRelationsInput']]
    connect: Union['OrganizationWhereUniqueInput', List['OrganizationWhereUniqueInput']]
    connect_or_create: Union['OrganizationConnectOrCreateWithoutRelationsInput', List['OrganizationConnectOrCreateWithoutRelationsInput']]

_OrganizationWhereUnique_id_Input = TypedDict(
    '_OrganizationWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_OrganizationWhereUnique_slug_Input = TypedDict(
    '_OrganizationWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

_OrganizationWhereUnique_ownerId_Input = TypedDict(
    '_OrganizationWhereUnique_ownerId_Input',
    {
        'ownerId': '_int',
    },
    total=True
)

OrganizationWhereUniqueInput = Union[
    '_OrganizationWhereUnique_id_Input',
    '_OrganizationWhereUnique_slug_Input',
    '_OrganizationWhereUnique_ownerId_Input',
]


class OrganizationUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    name: _str
    slug: _str
    description: Optional[_str]
    country: Optional[_str]
    website: Optional[_str]
    industry: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    owner: 'UserUpdateOneWithoutRelationsInput'
    primaryUsers: 'UserUpdateManyWithoutRelationsInput'
    members: 'OrganizationMemberUpdateManyWithoutRelationsInput'
    datasets: 'DatasetUpdateManyWithoutRelationsInput'
    dashboards: 'DashboardUpdateManyWithoutRelationsInput'
    projects: 'ProjectUpdateManyWithoutRelationsInput'
    transactions: 'TransactionUpdateManyWithoutRelationsInput'
    subscriptions: 'SubscriptionUpdateManyWithoutRelationsInput'


class OrganizationUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    name: _str
    slug: _str
    description: Optional[_str]
    country: Optional[_str]
    website: Optional[_str]
    industry: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class OrganizationUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['OrganizationCreateWithoutRelationsInput']
    connect: List['OrganizationWhereUniqueInput']
    connect_or_create: List['OrganizationConnectOrCreateWithoutRelationsInput']
    set: List['OrganizationWhereUniqueInput']
    disconnect: List['OrganizationWhereUniqueInput']
    delete: List['OrganizationWhereUniqueInput']

    # TODO
    # update: List['OrganizationUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['OrganizationUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['OrganizationScalarWhereInput']
    # upsert: List['OrganizationUpserteWithWhereUniqueWithoutRelationsInput']


class OrganizationUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'OrganizationCreateWithoutRelationsInput'
    connect: 'OrganizationWhereUniqueInput'
    connect_or_create: 'OrganizationConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'OrganizationUpdateInput'
    # upsert: 'OrganizationUpsertWithoutRelationsInput'


class OrganizationUpsertInput(TypedDict):
    create: 'OrganizationCreateInput'
    update: 'OrganizationUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Organization_id_OrderByInput = TypedDict(
    '_Organization_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Organization_name_OrderByInput = TypedDict(
    '_Organization_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Organization_slug_OrderByInput = TypedDict(
    '_Organization_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Organization_description_OrderByInput = TypedDict(
    '_Organization_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Organization_country_OrderByInput = TypedDict(
    '_Organization_country_OrderByInput',
    {
        'country': 'SortOrder',
    },
    total=True
)

_Organization_website_OrderByInput = TypedDict(
    '_Organization_website_OrderByInput',
    {
        'website': 'SortOrder',
    },
    total=True
)

_Organization_industry_OrderByInput = TypedDict(
    '_Organization_industry_OrderByInput',
    {
        'industry': 'SortOrder',
    },
    total=True
)

_Organization_createdAt_OrderByInput = TypedDict(
    '_Organization_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Organization_updatedAt_OrderByInput = TypedDict(
    '_Organization_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Organization_deletedAt_OrderByInput = TypedDict(
    '_Organization_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Organization_ownerId_OrderByInput = TypedDict(
    '_Organization_ownerId_OrderByInput',
    {
        'ownerId': 'SortOrder',
    },
    total=True
)

_Organization_RelevanceInner = TypedDict(
    '_Organization_RelevanceInner',
    {
        'fields': 'List[OrganizationScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Organization_RelevanceOrderByInput = TypedDict(
    '_Organization_RelevanceOrderByInput',
    {
        '_relevance': '_Organization_RelevanceInner',
    },
    total=True
)

OrganizationOrderByInput = Union[
    '_Organization_id_OrderByInput',
    '_Organization_name_OrderByInput',
    '_Organization_slug_OrderByInput',
    '_Organization_description_OrderByInput',
    '_Organization_country_OrderByInput',
    '_Organization_website_OrderByInput',
    '_Organization_industry_OrderByInput',
    '_Organization_createdAt_OrderByInput',
    '_Organization_updatedAt_OrderByInput',
    '_Organization_deletedAt_OrderByInput',
    '_Organization_ownerId_OrderByInput',
    '_Organization_RelevanceOrderByInput',
]



# recursive Organization types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

OrganizationRelationFilter = TypedDict(
    'OrganizationRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class OrganizationListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class OrganizationInclude(TypedDict, total=False):
    """Organization relational arguments"""
    owner: Union[bool, 'UserArgsFromOrganization']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganization']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganization']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganization']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganization']
    projects: Union[bool, 'FindManyProjectArgsFromOrganization']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganization']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganization']


    

class UserIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationRecursive1']
    files: Union[bool, 'FindManyFileArgsFromOrganizationRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationRecursive1']


class UserIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationRecursive2']
    files: Union[bool, 'FindManyFileArgsFromOrganizationRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationRecursive2']


class UserIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationRecursive3']
    files: Union[bool, 'FindManyFileArgsFromOrganizationRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationRecursive3']


class UserIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationRecursive4']
    files: Union[bool, 'FindManyFileArgsFromOrganizationRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationRecursive4']


class UserIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class UserArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyUserArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive1']


class OrganizationIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive2']


class OrganizationIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive3']


class OrganizationIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationRecursive4']


class OrganizationIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class OrganizationArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyOrganizationArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    invitedBy: Union[bool, 'UserArgsFromOrganizationRecursive1']


class OrganizationMemberIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    invitedBy: Union[bool, 'UserArgsFromOrganizationRecursive2']


class OrganizationMemberIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    invitedBy: Union[bool, 'UserArgsFromOrganizationRecursive3']


class OrganizationMemberIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    invitedBy: Union[bool, 'UserArgsFromOrganizationRecursive4']


class OrganizationMemberIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class OrganizationMemberArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyOrganizationMemberArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive1']


class PathIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive2']


class PathIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive3']


class PathIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive4']


class PathIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class PathArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyPathArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    instructor: Union[bool, 'UserArgsFromOrganizationRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive1']


class ModuleIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    instructor: Union[bool, 'UserArgsFromOrganizationRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive2']


class ModuleIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    instructor: Union[bool, 'UserArgsFromOrganizationRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive3']


class ModuleIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    instructor: Union[bool, 'UserArgsFromOrganizationRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationRecursive4']


class ModuleIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class ModuleArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyModuleArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    path: Union[bool, 'PathArgsFromOrganizationRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive1']


class PathModuleIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    path: Union[bool, 'PathArgsFromOrganizationRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive2']


class PathModuleIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    path: Union[bool, 'PathArgsFromOrganizationRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive3']


class PathModuleIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    path: Union[bool, 'PathArgsFromOrganizationRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive4']


class PathModuleIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class PathModuleArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyPathModuleArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive1']


class LessonIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive2']


class LessonIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive3']


class LessonIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationRecursive4']


class LessonIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class LessonArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyLessonArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive1']
    path: Union[bool, 'PathArgsFromOrganizationRecursive1']


class EnrollmentIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive2']
    path: Union[bool, 'PathArgsFromOrganizationRecursive2']


class EnrollmentIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive3']
    path: Union[bool, 'PathArgsFromOrganizationRecursive3']


class EnrollmentIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive4']
    path: Union[bool, 'PathArgsFromOrganizationRecursive4']


class EnrollmentIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class EnrollmentArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyEnrollmentArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    lesson: Union[bool, 'LessonArgsFromOrganizationRecursive1']


class LessonProgressIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    lesson: Union[bool, 'LessonArgsFromOrganizationRecursive2']


class LessonProgressIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    lesson: Union[bool, 'LessonArgsFromOrganizationRecursive3']


class LessonProgressIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    lesson: Union[bool, 'LessonArgsFromOrganizationRecursive4']


class LessonProgressIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class LessonProgressArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyLessonProgressArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive1']


class CertificateIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive2']


class CertificateIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive3']


class CertificateIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationRecursive4']


class CertificateIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class CertificateArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyCertificateArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationRecursive1']


class ProjectIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationRecursive2']


class ProjectIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationRecursive3']


class ProjectIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    owner: Union[bool, 'UserArgsFromOrganizationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationRecursive4']


class ProjectIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class ProjectArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyProjectArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive1']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive1']


class ProposalIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive2']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive2']


class ProposalIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive3']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive3']


class ProposalIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive4']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive4']


class ProposalIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class ProposalArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyProposalArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive1']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive1']
    client: Union[bool, 'UserArgsFromOrganizationRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationRecursive1']


class ContractIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive2']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive2']
    client: Union[bool, 'UserArgsFromOrganizationRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationRecursive2']


class ContractIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive3']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive3']
    client: Union[bool, 'UserArgsFromOrganizationRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationRecursive3']


class ContractIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    project: Union[bool, 'ProjectArgsFromOrganizationRecursive4']
    freelancer: Union[bool, 'UserArgsFromOrganizationRecursive4']
    client: Union[bool, 'UserArgsFromOrganizationRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationRecursive4']


class ContractIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class ContractArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyContractArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    contract: Union[bool, 'ContractArgsFromOrganizationRecursive1']


class DeliveryIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    contract: Union[bool, 'ContractArgsFromOrganizationRecursive2']


class DeliveryIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    contract: Union[bool, 'ContractArgsFromOrganizationRecursive3']


class DeliveryIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    contract: Union[bool, 'ContractArgsFromOrganizationRecursive4']


class DeliveryIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class DeliveryArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyDeliveryArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']


class UserSkillIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']


class UserSkillIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']


class UserSkillIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']


class UserSkillIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class UserSkillArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyUserSkillArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive1']


class DatasetIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive2']


class DatasetIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive3']


class DatasetIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationRecursive4']


class DatasetIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class DatasetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyDatasetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive1']


class DashboardIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive2']


class DashboardIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive3']


class DashboardIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationRecursive4']


class DashboardIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class DashboardArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyDashboardArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive1']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive1']


class DashboardDatasetIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive2']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive2']


class DashboardDatasetIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive3']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive3']


class DashboardDatasetIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive4']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive4']


class DashboardDatasetIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class DashboardDatasetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyDashboardDatasetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive1']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive1']


class WidgetIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive2']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive2']


class WidgetIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive3']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive3']


class WidgetIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive4']
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive4']


class WidgetIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class WidgetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyWidgetArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive1']
    author: Union[bool, 'UserArgsFromOrganizationRecursive1']


class InsightIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive2']
    author: Union[bool, 'UserArgsFromOrganizationRecursive2']


class InsightIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive3']
    author: Union[bool, 'UserArgsFromOrganizationRecursive3']


class InsightIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationRecursive4']
    author: Union[bool, 'UserArgsFromOrganizationRecursive4']


class InsightIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class InsightArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyInsightArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive1']
    creator: Union[bool, 'UserArgsFromOrganizationRecursive1']


class MLModelIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive2']
    creator: Union[bool, 'UserArgsFromOrganizationRecursive2']


class MLModelIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive3']
    creator: Union[bool, 'UserArgsFromOrganizationRecursive3']


class MLModelIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationRecursive4']
    creator: Union[bool, 'UserArgsFromOrganizationRecursive4']


class MLModelIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class MLModelArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyMLModelArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']


class TransactionIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']


class TransactionIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']


class TransactionIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']


class TransactionIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class TransactionArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyTransactionArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive1']


class SubscriptionIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive2']


class SubscriptionIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive3']


class SubscriptionIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationRecursive4']


class SubscriptionIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class SubscriptionArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManySubscriptionArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']


class NotificationIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']


class NotificationIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']


class NotificationIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']


class NotificationIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class NotificationArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyNotificationArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive1']


class AuthTokenIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive2']


class AuthTokenIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive3']


class AuthTokenIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    user: Union[bool, 'UserArgsFromOrganizationRecursive4']


class AuthTokenIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class AuthTokenArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyAuthTokenArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    uploader: Union[bool, 'UserArgsFromOrganizationRecursive1']


class FileIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    uploader: Union[bool, 'UserArgsFromOrganizationRecursive2']


class FileIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    uploader: Union[bool, 'UserArgsFromOrganizationRecursive3']


class FileIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    uploader: Union[bool, 'UserArgsFromOrganizationRecursive4']


class FileIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class FileArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyFileArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromOrganization(TypedDict, total=False):
    """Relational arguments for Organization"""
    actor: Union[bool, 'UserArgsFromOrganizationRecursive1']


class AuditLogIncludeFromOrganizationRecursive1(TypedDict, total=False):
    """Relational arguments for Organization"""
    actor: Union[bool, 'UserArgsFromOrganizationRecursive2']


class AuditLogIncludeFromOrganizationRecursive2(TypedDict, total=False):
    """Relational arguments for Organization"""
    actor: Union[bool, 'UserArgsFromOrganizationRecursive3']


class AuditLogIncludeFromOrganizationRecursive3(TypedDict, total=False):
    """Relational arguments for Organization"""
    actor: Union[bool, 'UserArgsFromOrganizationRecursive4']


class AuditLogIncludeFromOrganizationRecursive4(TypedDict, total=False):
    """Relational arguments for Organization"""

    

class AuditLogArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    
    

class FindManyAuditLogArgsFromOrganization(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromOrganizationRecursive1(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromOrganizationRecursive2(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromOrganizationRecursive3(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromOrganizationRecursive4(TypedDict, total=False):
    """Arguments for Organization"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyOrganizationArgs = FindManyOrganizationArgsFromOrganization
FindFirstOrganizationArgs = FindManyOrganizationArgsFromOrganization


    

class OrganizationWhereInput(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    website: Union[None, _str, 'types.StringFilter']
    industry: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    primaryUsers: 'UserListRelationFilter'
    members: 'OrganizationMemberListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    projects: 'ProjectListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationWhereInputRecursive1', List['OrganizationWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['OrganizationWhereInputRecursive1']
    OR: List['OrganizationWhereInputRecursive1']
    NOT: List['OrganizationWhereInputRecursive1']


class OrganizationWhereInputRecursive1(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    website: Union[None, _str, 'types.StringFilter']
    industry: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    primaryUsers: 'UserListRelationFilter'
    members: 'OrganizationMemberListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    projects: 'ProjectListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationWhereInputRecursive2', List['OrganizationWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['OrganizationWhereInputRecursive2']
    OR: List['OrganizationWhereInputRecursive2']
    NOT: List['OrganizationWhereInputRecursive2']


class OrganizationWhereInputRecursive2(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    website: Union[None, _str, 'types.StringFilter']
    industry: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    primaryUsers: 'UserListRelationFilter'
    members: 'OrganizationMemberListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    projects: 'ProjectListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationWhereInputRecursive3', List['OrganizationWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['OrganizationWhereInputRecursive3']
    OR: List['OrganizationWhereInputRecursive3']
    NOT: List['OrganizationWhereInputRecursive3']


class OrganizationWhereInputRecursive3(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    website: Union[None, _str, 'types.StringFilter']
    industry: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    primaryUsers: 'UserListRelationFilter'
    members: 'OrganizationMemberListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    projects: 'ProjectListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationWhereInputRecursive4', List['OrganizationWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['OrganizationWhereInputRecursive4']
    OR: List['OrganizationWhereInputRecursive4']
    NOT: List['OrganizationWhereInputRecursive4']


class OrganizationWhereInputRecursive4(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    country: Union[None, _str, 'types.StringFilter']
    website: Union[None, _str, 'types.StringFilter']
    industry: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    primaryUsers: 'UserListRelationFilter'
    members: 'OrganizationMemberListRelationFilter'
    datasets: 'DatasetListRelationFilter'
    dashboards: 'DashboardListRelationFilter'
    projects: 'ProjectListRelationFilter'
    transactions: 'TransactionListRelationFilter'
    subscriptions: 'SubscriptionListRelationFilter'



# aggregate Organization types


    

class OrganizationScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    website: Union[_str, 'types.StringWithAggregatesFilter']
    industry: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['OrganizationScalarWhereWithAggregatesInputRecursive1']
    OR: List['OrganizationScalarWhereWithAggregatesInputRecursive1']
    NOT: List['OrganizationScalarWhereWithAggregatesInputRecursive1']


class OrganizationScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    website: Union[_str, 'types.StringWithAggregatesFilter']
    industry: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['OrganizationScalarWhereWithAggregatesInputRecursive2']
    OR: List['OrganizationScalarWhereWithAggregatesInputRecursive2']
    NOT: List['OrganizationScalarWhereWithAggregatesInputRecursive2']


class OrganizationScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    website: Union[_str, 'types.StringWithAggregatesFilter']
    industry: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['OrganizationScalarWhereWithAggregatesInputRecursive3']
    OR: List['OrganizationScalarWhereWithAggregatesInputRecursive3']
    NOT: List['OrganizationScalarWhereWithAggregatesInputRecursive3']


class OrganizationScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    website: Union[_str, 'types.StringWithAggregatesFilter']
    industry: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['OrganizationScalarWhereWithAggregatesInputRecursive4']
    OR: List['OrganizationScalarWhereWithAggregatesInputRecursive4']
    NOT: List['OrganizationScalarWhereWithAggregatesInputRecursive4']


class OrganizationScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Organization arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    website: Union[_str, 'types.StringWithAggregatesFilter']
    industry: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']



class OrganizationGroupByOutput(TypedDict, total=False):
    id: _int
    name: _str
    slug: _str
    description: _str
    country: _str
    website: _str
    industry: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    ownerId: _int
    _sum: 'OrganizationSumAggregateOutput'
    _avg: 'OrganizationAvgAggregateOutput'
    _min: 'OrganizationMinAggregateOutput'
    _max: 'OrganizationMaxAggregateOutput'
    _count: 'OrganizationCountAggregateOutput'


class OrganizationAvgAggregateOutput(TypedDict, total=False):
    """Organization output for aggregating averages"""
    id: float
    ownerId: float


class OrganizationSumAggregateOutput(TypedDict, total=False):
    """Organization output for aggregating sums"""
    id: _int
    ownerId: _int


class OrganizationScalarAggregateOutput(TypedDict, total=False):
    """Organization output including scalar fields"""
    id: _int
    name: _str
    slug: _str
    description: _str
    country: _str
    website: _str
    industry: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    ownerId: _int


OrganizationMinAggregateOutput = OrganizationScalarAggregateOutput
OrganizationMaxAggregateOutput = OrganizationScalarAggregateOutput


class OrganizationMaxAggregateInput(TypedDict, total=False):
    """Organization input for aggregating by max"""
    id: bool
    name: bool
    slug: bool
    description: bool
    country: bool
    website: bool
    industry: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool
    ownerId: bool


class OrganizationMinAggregateInput(TypedDict, total=False):
    """Organization input for aggregating by min"""
    id: bool
    name: bool
    slug: bool
    description: bool
    country: bool
    website: bool
    industry: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool
    ownerId: bool


class OrganizationNumberAggregateInput(TypedDict, total=False):
    """Organization input for aggregating numbers"""
    id: bool
    ownerId: bool


OrganizationAvgAggregateInput = OrganizationNumberAggregateInput
OrganizationSumAggregateInput = OrganizationNumberAggregateInput


OrganizationCountAggregateInput = TypedDict(
    'OrganizationCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'slug': bool,
        'description': bool,
        'country': bool,
        'website': bool,
        'industry': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        'ownerId': bool,
        '_all': bool,
    },
    total=False,
)

OrganizationCountAggregateOutput = TypedDict(
    'OrganizationCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'slug': int,
        'description': int,
        'country': int,
        'website': int,
        'industry': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        'ownerId': int,
        '_all': int,
    },
    total=False,
)


OrganizationKeys = Literal[
    'id',
    'name',
    'slug',
    'description',
    'country',
    'website',
    'industry',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'ownerId',
    'owner',
    'primaryUsers',
    'members',
    'datasets',
    'dashboards',
    'projects',
    'transactions',
    'subscriptions',
]
OrganizationScalarFieldKeys = Literal[
    'id',
    'name',
    'slug',
    'description',
    'country',
    'website',
    'industry',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'ownerId',
]
OrganizationScalarFieldKeysT = TypeVar('OrganizationScalarFieldKeysT', bound=OrganizationScalarFieldKeys)

OrganizationRelationalFieldKeys = Literal[
        'owner',
        'primaryUsers',
        'members',
        'datasets',
        'dashboards',
        'projects',
        'transactions',
        'subscriptions',
    ]

# OrganizationMember types

class OrganizationMemberOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the OrganizationMember create method"""
    id: _int
    organizationId: _int
    userId: _int
    role: Optional[_str]
    invitedById: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    organization: 'OrganizationCreateNestedWithoutRelationsInput'
    user: 'UserCreateNestedWithoutRelationsInput'
    invitedBy: 'UserCreateNestedWithoutRelationsInput'


class OrganizationMemberCreateInput(OrganizationMemberOptionalCreateInput):
    """Required arguments to the OrganizationMember create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class OrganizationMemberOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the OrganizationMember create method, without relations"""
    id: _int
    organizationId: _int
    userId: _int
    role: Optional[_str]
    invitedById: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class OrganizationMemberCreateWithoutRelationsInput(OrganizationMemberOptionalCreateWithoutRelationsInput):
    """Required arguments to the OrganizationMember create method, without relations"""

class OrganizationMemberConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'OrganizationMemberCreateWithoutRelationsInput'
    where: 'OrganizationMemberWhereUniqueInput'

class OrganizationMemberCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'OrganizationMemberCreateWithoutRelationsInput'
    connect: 'OrganizationMemberWhereUniqueInput'
    connect_or_create: 'OrganizationMemberConnectOrCreateWithoutRelationsInput'


class OrganizationMemberCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['OrganizationMemberCreateWithoutRelationsInput', List['OrganizationMemberCreateWithoutRelationsInput']]
    connect: Union['OrganizationMemberWhereUniqueInput', List['OrganizationMemberWhereUniqueInput']]
    connect_or_create: Union['OrganizationMemberConnectOrCreateWithoutRelationsInput', List['OrganizationMemberConnectOrCreateWithoutRelationsInput']]

_OrganizationMemberWhereUnique_id_Input = TypedDict(
    '_OrganizationMemberWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_OrganizationMemberCompoundorganizationId_userIdKeyInner = TypedDict(
    '_OrganizationMemberCompoundorganizationId_userIdKeyInner',
    {
        'organizationId': '_int',
        'userId': '_int',
    },
    total=True
)

_OrganizationMemberCompoundorganizationId_userIdKey = TypedDict(
    '_OrganizationMemberCompoundorganizationId_userIdKey',
    {
        'organizationId_userId': '_OrganizationMemberCompoundorganizationId_userIdKeyInner',
    },
    total=True
)

OrganizationMemberWhereUniqueInput = Union[
    '_OrganizationMemberWhereUnique_id_Input',
    '_OrganizationMemberCompoundorganizationId_userIdKey',
]


class OrganizationMemberUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    role: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    organization: 'OrganizationUpdateOneWithoutRelationsInput'
    user: 'UserUpdateOneWithoutRelationsInput'
    invitedBy: 'UserUpdateOneWithoutRelationsInput'


class OrganizationMemberUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    role: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class OrganizationMemberUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['OrganizationMemberCreateWithoutRelationsInput']
    connect: List['OrganizationMemberWhereUniqueInput']
    connect_or_create: List['OrganizationMemberConnectOrCreateWithoutRelationsInput']
    set: List['OrganizationMemberWhereUniqueInput']
    disconnect: List['OrganizationMemberWhereUniqueInput']
    delete: List['OrganizationMemberWhereUniqueInput']

    # TODO
    # update: List['OrganizationMemberUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['OrganizationMemberUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['OrganizationMemberScalarWhereInput']
    # upsert: List['OrganizationMemberUpserteWithWhereUniqueWithoutRelationsInput']


class OrganizationMemberUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'OrganizationMemberCreateWithoutRelationsInput'
    connect: 'OrganizationMemberWhereUniqueInput'
    connect_or_create: 'OrganizationMemberConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'OrganizationMemberUpdateInput'
    # upsert: 'OrganizationMemberUpsertWithoutRelationsInput'


class OrganizationMemberUpsertInput(TypedDict):
    create: 'OrganizationMemberCreateInput'
    update: 'OrganizationMemberUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_OrganizationMember_id_OrderByInput = TypedDict(
    '_OrganizationMember_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_OrganizationMember_organizationId_OrderByInput = TypedDict(
    '_OrganizationMember_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_OrganizationMember_userId_OrderByInput = TypedDict(
    '_OrganizationMember_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_OrganizationMember_role_OrderByInput = TypedDict(
    '_OrganizationMember_role_OrderByInput',
    {
        'role': 'SortOrder',
    },
    total=True
)

_OrganizationMember_invitedById_OrderByInput = TypedDict(
    '_OrganizationMember_invitedById_OrderByInput',
    {
        'invitedById': 'SortOrder',
    },
    total=True
)

_OrganizationMember_createdAt_OrderByInput = TypedDict(
    '_OrganizationMember_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_OrganizationMember_updatedAt_OrderByInput = TypedDict(
    '_OrganizationMember_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_OrganizationMember_deletedAt_OrderByInput = TypedDict(
    '_OrganizationMember_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_OrganizationMember_RelevanceInner = TypedDict(
    '_OrganizationMember_RelevanceInner',
    {
        'fields': 'List[OrganizationMemberScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_OrganizationMember_RelevanceOrderByInput = TypedDict(
    '_OrganizationMember_RelevanceOrderByInput',
    {
        '_relevance': '_OrganizationMember_RelevanceInner',
    },
    total=True
)

OrganizationMemberOrderByInput = Union[
    '_OrganizationMember_id_OrderByInput',
    '_OrganizationMember_organizationId_OrderByInput',
    '_OrganizationMember_userId_OrderByInput',
    '_OrganizationMember_role_OrderByInput',
    '_OrganizationMember_invitedById_OrderByInput',
    '_OrganizationMember_createdAt_OrderByInput',
    '_OrganizationMember_updatedAt_OrderByInput',
    '_OrganizationMember_deletedAt_OrderByInput',
    '_OrganizationMember_RelevanceOrderByInput',
]



# recursive OrganizationMember types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

OrganizationMemberRelationFilter = TypedDict(
    'OrganizationMemberRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class OrganizationMemberListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class OrganizationMemberInclude(TypedDict, total=False):
    """OrganizationMember relational arguments"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationMember']
    user: Union[bool, 'UserArgsFromOrganizationMember']
    invitedBy: Union[bool, 'UserArgsFromOrganizationMember']


    

class UserIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationMemberRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationMemberRecursive1']
    files: Union[bool, 'FindManyFileArgsFromOrganizationMemberRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationMemberRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationMemberRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationMemberRecursive1']


class UserIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationMemberRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationMemberRecursive2']
    files: Union[bool, 'FindManyFileArgsFromOrganizationMemberRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationMemberRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationMemberRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationMemberRecursive2']


class UserIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationMemberRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationMemberRecursive3']
    files: Union[bool, 'FindManyFileArgsFromOrganizationMemberRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationMemberRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationMemberRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationMemberRecursive3']


class UserIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromOrganizationMemberRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromOrganizationMemberRecursive4']
    files: Union[bool, 'FindManyFileArgsFromOrganizationMemberRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromOrganizationMemberRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromOrganizationMemberRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromOrganizationMemberRecursive4']


class UserIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class UserArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyUserArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationMemberRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive1']


class OrganizationIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationMemberRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive2']


class OrganizationIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationMemberRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive3']


class OrganizationIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromOrganizationMemberRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromOrganizationMemberRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromOrganizationMemberRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromOrganizationMemberRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromOrganizationMemberRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromOrganizationMemberRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromOrganizationMemberRecursive4']


class OrganizationIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class OrganizationArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyOrganizationArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    invitedBy: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class OrganizationMemberIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    invitedBy: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class OrganizationMemberIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    invitedBy: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class OrganizationMemberIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    invitedBy: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class OrganizationMemberIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class OrganizationMemberArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyOrganizationMemberArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive1']


class PathIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive2']


class PathIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive3']


class PathIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    modules: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive4']


class PathIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class PathArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyPathArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    instructor: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationMemberRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive1']


class ModuleIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    instructor: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationMemberRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive2']


class ModuleIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    instructor: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationMemberRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive3']


class ModuleIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    instructor: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromOrganizationMemberRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromOrganizationMemberRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromOrganizationMemberRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromOrganizationMemberRecursive4']


class ModuleIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class ModuleArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyModuleArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive1']


class PathModuleIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive2']


class PathModuleIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive3']


class PathModuleIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive4']


class PathModuleIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class PathModuleArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyPathModuleArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive1']


class LessonIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive2']


class LessonIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive3']


class LessonIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromOrganizationMemberRecursive4']


class LessonIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class LessonArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyLessonArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive1']
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive1']


class EnrollmentIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive2']
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive2']


class EnrollmentIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive3']
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive3']


class EnrollmentIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive4']
    path: Union[bool, 'PathArgsFromOrganizationMemberRecursive4']


class EnrollmentIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class EnrollmentArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyEnrollmentArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    lesson: Union[bool, 'LessonArgsFromOrganizationMemberRecursive1']


class LessonProgressIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    lesson: Union[bool, 'LessonArgsFromOrganizationMemberRecursive2']


class LessonProgressIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    lesson: Union[bool, 'LessonArgsFromOrganizationMemberRecursive3']


class LessonProgressIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    lesson: Union[bool, 'LessonArgsFromOrganizationMemberRecursive4']


class LessonProgressIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class LessonProgressArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyLessonProgressArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive1']


class CertificateIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive2']


class CertificateIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive3']


class CertificateIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    module: Union[bool, 'ModuleArgsFromOrganizationMemberRecursive4']


class CertificateIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class CertificateArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyCertificateArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive1']


class ProjectIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive2']


class ProjectIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive3']


class ProjectIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    owner: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromOrganizationMemberRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromOrganizationMemberRecursive4']


class ProjectIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class ProjectArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyProjectArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive1']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class ProposalIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive2']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class ProposalIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive3']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class ProposalIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive4']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class ProposalIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class ProposalArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyProposalArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive1']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    client: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationMemberRecursive1']


class ContractIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive2']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    client: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationMemberRecursive2']


class ContractIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive3']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    client: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationMemberRecursive3']


class ContractIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    project: Union[bool, 'ProjectArgsFromOrganizationMemberRecursive4']
    freelancer: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    client: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromOrganizationMemberRecursive4']


class ContractIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class ContractArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyContractArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    contract: Union[bool, 'ContractArgsFromOrganizationMemberRecursive1']


class DeliveryIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    contract: Union[bool, 'ContractArgsFromOrganizationMemberRecursive2']


class DeliveryIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    contract: Union[bool, 'ContractArgsFromOrganizationMemberRecursive3']


class DeliveryIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    contract: Union[bool, 'ContractArgsFromOrganizationMemberRecursive4']


class DeliveryIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class DeliveryArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyDeliveryArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class UserSkillIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class UserSkillIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class UserSkillIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class UserSkillIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class UserSkillArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyUserSkillArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive1']


class DatasetIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive2']


class DatasetIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive3']


class DatasetIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromOrganizationMemberRecursive4']


class DatasetIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class DatasetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyDatasetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive1']


class DashboardIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive2']


class DashboardIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive3']


class DashboardIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    ownerUser: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromOrganizationMemberRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromOrganizationMemberRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromOrganizationMemberRecursive4']


class DashboardIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class DashboardArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyDashboardArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive1']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive1']


class DashboardDatasetIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive2']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive2']


class DashboardDatasetIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive3']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive3']


class DashboardDatasetIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive4']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive4']


class DashboardDatasetIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class DashboardDatasetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyDashboardDatasetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive1']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive1']


class WidgetIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive2']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive2']


class WidgetIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive3']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive3']


class WidgetIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive4']
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive4']


class WidgetIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class WidgetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyWidgetArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive1']
    author: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class InsightIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive2']
    author: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class InsightIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive3']
    author: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class InsightIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dashboard: Union[bool, 'DashboardArgsFromOrganizationMemberRecursive4']
    author: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class InsightIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class InsightArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyInsightArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive1']
    creator: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class MLModelIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive2']
    creator: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class MLModelIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive3']
    creator: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class MLModelIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    dataset: Union[bool, 'DatasetArgsFromOrganizationMemberRecursive4']
    creator: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class MLModelIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class MLModelArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyMLModelArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']


class TransactionIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']


class TransactionIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']


class TransactionIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']


class TransactionIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class TransactionArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyTransactionArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive1']


class SubscriptionIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive2']


class SubscriptionIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive3']


class SubscriptionIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']
    organization: Union[bool, 'OrganizationArgsFromOrganizationMemberRecursive4']


class SubscriptionIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class SubscriptionArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManySubscriptionArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class NotificationIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class NotificationIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class NotificationIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class NotificationIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class NotificationArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyNotificationArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class AuthTokenIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class AuthTokenIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class AuthTokenIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    user: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class AuthTokenIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class AuthTokenArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyAuthTokenArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    uploader: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class FileIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    uploader: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class FileIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    uploader: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class FileIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    uploader: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class FileIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class FileArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyFileArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromOrganizationMember(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    actor: Union[bool, 'UserArgsFromOrganizationMemberRecursive1']


class AuditLogIncludeFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    actor: Union[bool, 'UserArgsFromOrganizationMemberRecursive2']


class AuditLogIncludeFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    actor: Union[bool, 'UserArgsFromOrganizationMemberRecursive3']


class AuditLogIncludeFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""
    actor: Union[bool, 'UserArgsFromOrganizationMemberRecursive4']


class AuditLogIncludeFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Relational arguments for OrganizationMember"""

    

class AuditLogArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    
    

class FindManyAuditLogArgsFromOrganizationMember(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromOrganizationMemberRecursive1(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromOrganizationMemberRecursive2(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromOrganizationMemberRecursive3(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromOrganizationMemberRecursive4(TypedDict, total=False):
    """Arguments for OrganizationMember"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyOrganizationMemberArgs = FindManyOrganizationMemberArgsFromOrganizationMember
FindFirstOrganizationMemberArgs = FindManyOrganizationMemberArgsFromOrganizationMember


    

class OrganizationMemberWhereInput(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    organizationId: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    role: Union[None, _str, 'types.StringFilter']
    invitedById: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    organization: 'OrganizationRelationFilter'
    user: 'UserRelationFilter'
    invitedBy: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationMemberWhereInputRecursive1', List['OrganizationMemberWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['OrganizationMemberWhereInputRecursive1']
    OR: List['OrganizationMemberWhereInputRecursive1']
    NOT: List['OrganizationMemberWhereInputRecursive1']


class OrganizationMemberWhereInputRecursive1(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    organizationId: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    role: Union[None, _str, 'types.StringFilter']
    invitedById: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    organization: 'OrganizationRelationFilter'
    user: 'UserRelationFilter'
    invitedBy: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationMemberWhereInputRecursive2', List['OrganizationMemberWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['OrganizationMemberWhereInputRecursive2']
    OR: List['OrganizationMemberWhereInputRecursive2']
    NOT: List['OrganizationMemberWhereInputRecursive2']


class OrganizationMemberWhereInputRecursive2(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    organizationId: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    role: Union[None, _str, 'types.StringFilter']
    invitedById: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    organization: 'OrganizationRelationFilter'
    user: 'UserRelationFilter'
    invitedBy: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationMemberWhereInputRecursive3', List['OrganizationMemberWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['OrganizationMemberWhereInputRecursive3']
    OR: List['OrganizationMemberWhereInputRecursive3']
    NOT: List['OrganizationMemberWhereInputRecursive3']


class OrganizationMemberWhereInputRecursive3(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    organizationId: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    role: Union[None, _str, 'types.StringFilter']
    invitedById: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    organization: 'OrganizationRelationFilter'
    user: 'UserRelationFilter'
    invitedBy: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['OrganizationMemberWhereInputRecursive4', List['OrganizationMemberWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['OrganizationMemberWhereInputRecursive4']
    OR: List['OrganizationMemberWhereInputRecursive4']
    NOT: List['OrganizationMemberWhereInputRecursive4']


class OrganizationMemberWhereInputRecursive4(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    organizationId: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    role: Union[None, _str, 'types.StringFilter']
    invitedById: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    organization: 'OrganizationRelationFilter'
    user: 'UserRelationFilter'
    invitedBy: 'UserRelationFilter'



# aggregate OrganizationMember types


    

class OrganizationMemberScalarWhereWithAggregatesInput(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    invitedById: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive1']
    OR: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive1']
    NOT: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive1']


class OrganizationMemberScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    invitedById: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive2']
    OR: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive2']
    NOT: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive2']


class OrganizationMemberScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    invitedById: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive3']
    OR: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive3']
    NOT: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive3']


class OrganizationMemberScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    invitedById: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive4']
    OR: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive4']
    NOT: List['OrganizationMemberScalarWhereWithAggregatesInputRecursive4']


class OrganizationMemberScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """OrganizationMember arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    invitedById: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class OrganizationMemberGroupByOutput(TypedDict, total=False):
    id: _int
    organizationId: _int
    userId: _int
    role: _str
    invitedById: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'OrganizationMemberSumAggregateOutput'
    _avg: 'OrganizationMemberAvgAggregateOutput'
    _min: 'OrganizationMemberMinAggregateOutput'
    _max: 'OrganizationMemberMaxAggregateOutput'
    _count: 'OrganizationMemberCountAggregateOutput'


class OrganizationMemberAvgAggregateOutput(TypedDict, total=False):
    """OrganizationMember output for aggregating averages"""
    id: float
    organizationId: float
    userId: float
    invitedById: float


class OrganizationMemberSumAggregateOutput(TypedDict, total=False):
    """OrganizationMember output for aggregating sums"""
    id: _int
    organizationId: _int
    userId: _int
    invitedById: _int


class OrganizationMemberScalarAggregateOutput(TypedDict, total=False):
    """OrganizationMember output including scalar fields"""
    id: _int
    organizationId: _int
    userId: _int
    role: _str
    invitedById: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


OrganizationMemberMinAggregateOutput = OrganizationMemberScalarAggregateOutput
OrganizationMemberMaxAggregateOutput = OrganizationMemberScalarAggregateOutput


class OrganizationMemberMaxAggregateInput(TypedDict, total=False):
    """OrganizationMember input for aggregating by max"""
    id: bool
    organizationId: bool
    userId: bool
    role: bool
    invitedById: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class OrganizationMemberMinAggregateInput(TypedDict, total=False):
    """OrganizationMember input for aggregating by min"""
    id: bool
    organizationId: bool
    userId: bool
    role: bool
    invitedById: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class OrganizationMemberNumberAggregateInput(TypedDict, total=False):
    """OrganizationMember input for aggregating numbers"""
    id: bool
    organizationId: bool
    userId: bool
    invitedById: bool


OrganizationMemberAvgAggregateInput = OrganizationMemberNumberAggregateInput
OrganizationMemberSumAggregateInput = OrganizationMemberNumberAggregateInput


OrganizationMemberCountAggregateInput = TypedDict(
    'OrganizationMemberCountAggregateInput',
    {
        'id': bool,
        'organizationId': bool,
        'userId': bool,
        'role': bool,
        'invitedById': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

OrganizationMemberCountAggregateOutput = TypedDict(
    'OrganizationMemberCountAggregateOutput',
    {
        'id': int,
        'organizationId': int,
        'userId': int,
        'role': int,
        'invitedById': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


OrganizationMemberKeys = Literal[
    'id',
    'organizationId',
    'userId',
    'role',
    'invitedById',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'organization',
    'user',
    'invitedBy',
]
OrganizationMemberScalarFieldKeys = Literal[
    'id',
    'organizationId',
    'userId',
    'role',
    'invitedById',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
OrganizationMemberScalarFieldKeysT = TypeVar('OrganizationMemberScalarFieldKeysT', bound=OrganizationMemberScalarFieldKeys)

OrganizationMemberRelationalFieldKeys = Literal[
        'organization',
        'user',
        'invitedBy',
    ]

# Path types

class PathOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Path create method"""
    id: _int
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    modules: 'PathModuleCreateManyNestedWithoutRelationsInput'
    enrollments: 'EnrollmentCreateManyNestedWithoutRelationsInput'


class PathCreateInput(PathOptionalCreateInput):
    """Required arguments to the Path create method"""
    title: _str
    slug: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class PathOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Path create method, without relations"""
    id: _int
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class PathCreateWithoutRelationsInput(PathOptionalCreateWithoutRelationsInput):
    """Required arguments to the Path create method, without relations"""
    title: _str
    slug: _str

class PathConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'PathCreateWithoutRelationsInput'
    where: 'PathWhereUniqueInput'

class PathCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'PathCreateWithoutRelationsInput'
    connect: 'PathWhereUniqueInput'
    connect_or_create: 'PathConnectOrCreateWithoutRelationsInput'


class PathCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['PathCreateWithoutRelationsInput', List['PathCreateWithoutRelationsInput']]
    connect: Union['PathWhereUniqueInput', List['PathWhereUniqueInput']]
    connect_or_create: Union['PathConnectOrCreateWithoutRelationsInput', List['PathConnectOrCreateWithoutRelationsInput']]

_PathWhereUnique_id_Input = TypedDict(
    '_PathWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_PathWhereUnique_slug_Input = TypedDict(
    '_PathWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

PathWhereUniqueInput = Union[
    '_PathWhereUnique_id_Input',
    '_PathWhereUnique_slug_Input',
]


class PathUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    modules: 'PathModuleUpdateManyWithoutRelationsInput'
    enrollments: 'EnrollmentUpdateManyWithoutRelationsInput'


class PathUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class PathUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['PathCreateWithoutRelationsInput']
    connect: List['PathWhereUniqueInput']
    connect_or_create: List['PathConnectOrCreateWithoutRelationsInput']
    set: List['PathWhereUniqueInput']
    disconnect: List['PathWhereUniqueInput']
    delete: List['PathWhereUniqueInput']

    # TODO
    # update: List['PathUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['PathUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['PathScalarWhereInput']
    # upsert: List['PathUpserteWithWhereUniqueWithoutRelationsInput']


class PathUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'PathCreateWithoutRelationsInput'
    connect: 'PathWhereUniqueInput'
    connect_or_create: 'PathConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'PathUpdateInput'
    # upsert: 'PathUpsertWithoutRelationsInput'


class PathUpsertInput(TypedDict):
    create: 'PathCreateInput'
    update: 'PathUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Path_id_OrderByInput = TypedDict(
    '_Path_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Path_title_OrderByInput = TypedDict(
    '_Path_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Path_slug_OrderByInput = TypedDict(
    '_Path_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Path_description_OrderByInput = TypedDict(
    '_Path_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Path_createdAt_OrderByInput = TypedDict(
    '_Path_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Path_updatedAt_OrderByInput = TypedDict(
    '_Path_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Path_deletedAt_OrderByInput = TypedDict(
    '_Path_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Path_RelevanceInner = TypedDict(
    '_Path_RelevanceInner',
    {
        'fields': 'List[PathScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Path_RelevanceOrderByInput = TypedDict(
    '_Path_RelevanceOrderByInput',
    {
        '_relevance': '_Path_RelevanceInner',
    },
    total=True
)

PathOrderByInput = Union[
    '_Path_id_OrderByInput',
    '_Path_title_OrderByInput',
    '_Path_slug_OrderByInput',
    '_Path_description_OrderByInput',
    '_Path_createdAt_OrderByInput',
    '_Path_updatedAt_OrderByInput',
    '_Path_deletedAt_OrderByInput',
    '_Path_RelevanceOrderByInput',
]



# recursive Path types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

PathRelationFilter = TypedDict(
    'PathRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class PathListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class PathInclude(TypedDict, total=False):
    """Path relational arguments"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPath']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPath']


    

class UserIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathRecursive1']
    files: Union[bool, 'FindManyFileArgsFromPathRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathRecursive1']


class UserIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathRecursive2']
    files: Union[bool, 'FindManyFileArgsFromPathRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathRecursive2']


class UserIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathRecursive3']
    files: Union[bool, 'FindManyFileArgsFromPathRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathRecursive3']


class UserIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathRecursive4']
    files: Union[bool, 'FindManyFileArgsFromPathRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathRecursive4']


class UserIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class UserArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyUserArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive1']


class OrganizationIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive2']


class OrganizationIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive3']


class OrganizationIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromPathRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathRecursive4']


class OrganizationIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class OrganizationArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyOrganizationArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    user: Union[bool, 'UserArgsFromPathRecursive1']
    invitedBy: Union[bool, 'UserArgsFromPathRecursive1']


class OrganizationMemberIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    user: Union[bool, 'UserArgsFromPathRecursive2']
    invitedBy: Union[bool, 'UserArgsFromPathRecursive2']


class OrganizationMemberIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    user: Union[bool, 'UserArgsFromPathRecursive3']
    invitedBy: Union[bool, 'UserArgsFromPathRecursive3']


class OrganizationMemberIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    user: Union[bool, 'UserArgsFromPathRecursive4']
    invitedBy: Union[bool, 'UserArgsFromPathRecursive4']


class OrganizationMemberIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class OrganizationMemberArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyOrganizationMemberArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive1']


class PathIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive2']


class PathIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive3']


class PathIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive4']


class PathIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class PathArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyPathArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    instructor: Union[bool, 'UserArgsFromPathRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromPathRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathRecursive1']


class ModuleIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    instructor: Union[bool, 'UserArgsFromPathRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromPathRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathRecursive2']


class ModuleIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    instructor: Union[bool, 'UserArgsFromPathRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromPathRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathRecursive3']


class ModuleIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    instructor: Union[bool, 'UserArgsFromPathRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromPathRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathRecursive4']


class ModuleIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class ModuleArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyModuleArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    path: Union[bool, 'PathArgsFromPathRecursive1']
    module: Union[bool, 'ModuleArgsFromPathRecursive1']


class PathModuleIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    path: Union[bool, 'PathArgsFromPathRecursive2']
    module: Union[bool, 'ModuleArgsFromPathRecursive2']


class PathModuleIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    path: Union[bool, 'PathArgsFromPathRecursive3']
    module: Union[bool, 'ModuleArgsFromPathRecursive3']


class PathModuleIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    path: Union[bool, 'PathArgsFromPathRecursive4']
    module: Union[bool, 'ModuleArgsFromPathRecursive4']


class PathModuleIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class PathModuleArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyPathModuleArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    module: Union[bool, 'ModuleArgsFromPathRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive1']


class LessonIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    module: Union[bool, 'ModuleArgsFromPathRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive2']


class LessonIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    module: Union[bool, 'ModuleArgsFromPathRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive3']


class LessonIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    module: Union[bool, 'ModuleArgsFromPathRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathRecursive4']


class LessonIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class LessonArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyLessonArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']
    module: Union[bool, 'ModuleArgsFromPathRecursive1']
    path: Union[bool, 'PathArgsFromPathRecursive1']


class EnrollmentIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']
    module: Union[bool, 'ModuleArgsFromPathRecursive2']
    path: Union[bool, 'PathArgsFromPathRecursive2']


class EnrollmentIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']
    module: Union[bool, 'ModuleArgsFromPathRecursive3']
    path: Union[bool, 'PathArgsFromPathRecursive3']


class EnrollmentIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']
    module: Union[bool, 'ModuleArgsFromPathRecursive4']
    path: Union[bool, 'PathArgsFromPathRecursive4']


class EnrollmentIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class EnrollmentArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyEnrollmentArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']
    lesson: Union[bool, 'LessonArgsFromPathRecursive1']


class LessonProgressIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']
    lesson: Union[bool, 'LessonArgsFromPathRecursive2']


class LessonProgressIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']
    lesson: Union[bool, 'LessonArgsFromPathRecursive3']


class LessonProgressIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']
    lesson: Union[bool, 'LessonArgsFromPathRecursive4']


class LessonProgressIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class LessonProgressArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyLessonProgressArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']
    module: Union[bool, 'ModuleArgsFromPathRecursive1']


class CertificateIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']
    module: Union[bool, 'ModuleArgsFromPathRecursive2']


class CertificateIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']
    module: Union[bool, 'ModuleArgsFromPathRecursive3']


class CertificateIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']
    module: Union[bool, 'ModuleArgsFromPathRecursive4']


class CertificateIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class CertificateArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyCertificateArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromPathRecursive1']


class ProjectIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromPathRecursive2']


class ProjectIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromPathRecursive3']


class ProjectIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    owner: Union[bool, 'UserArgsFromPathRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromPathRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromPathRecursive4']


class ProjectIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class ProjectArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyProjectArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive1']
    freelancer: Union[bool, 'UserArgsFromPathRecursive1']


class ProposalIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive2']
    freelancer: Union[bool, 'UserArgsFromPathRecursive2']


class ProposalIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive3']
    freelancer: Union[bool, 'UserArgsFromPathRecursive3']


class ProposalIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive4']
    freelancer: Union[bool, 'UserArgsFromPathRecursive4']


class ProposalIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class ProposalArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyProposalArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive1']
    freelancer: Union[bool, 'UserArgsFromPathRecursive1']
    client: Union[bool, 'UserArgsFromPathRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathRecursive1']


class ContractIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive2']
    freelancer: Union[bool, 'UserArgsFromPathRecursive2']
    client: Union[bool, 'UserArgsFromPathRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathRecursive2']


class ContractIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive3']
    freelancer: Union[bool, 'UserArgsFromPathRecursive3']
    client: Union[bool, 'UserArgsFromPathRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathRecursive3']


class ContractIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    project: Union[bool, 'ProjectArgsFromPathRecursive4']
    freelancer: Union[bool, 'UserArgsFromPathRecursive4']
    client: Union[bool, 'UserArgsFromPathRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathRecursive4']


class ContractIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class ContractArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyContractArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    contract: Union[bool, 'ContractArgsFromPathRecursive1']


class DeliveryIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    contract: Union[bool, 'ContractArgsFromPathRecursive2']


class DeliveryIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    contract: Union[bool, 'ContractArgsFromPathRecursive3']


class DeliveryIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    contract: Union[bool, 'ContractArgsFromPathRecursive4']


class DeliveryIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class DeliveryArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyDeliveryArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']


class UserSkillIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']


class UserSkillIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']


class UserSkillIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']


class UserSkillIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class UserSkillArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyUserSkillArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive1']


class DatasetIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive2']


class DatasetIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive3']


class DatasetIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathRecursive4']


class DatasetIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class DatasetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyDatasetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive1']


class DashboardIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive2']


class DashboardIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive3']


class DashboardIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    ownerUser: Union[bool, 'UserArgsFromPathRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromPathRecursive4']


class DashboardIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class DashboardArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyDashboardArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive1']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive1']


class DashboardDatasetIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive2']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive2']


class DashboardDatasetIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive3']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive3']


class DashboardDatasetIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive4']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive4']


class DashboardDatasetIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class DashboardDatasetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyDashboardDatasetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive1']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive1']


class WidgetIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive2']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive2']


class WidgetIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive3']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive3']


class WidgetIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive4']
    dataset: Union[bool, 'DatasetArgsFromPathRecursive4']


class WidgetIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class WidgetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyWidgetArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive1']
    author: Union[bool, 'UserArgsFromPathRecursive1']


class InsightIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive2']
    author: Union[bool, 'UserArgsFromPathRecursive2']


class InsightIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive3']
    author: Union[bool, 'UserArgsFromPathRecursive3']


class InsightIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    dashboard: Union[bool, 'DashboardArgsFromPathRecursive4']
    author: Union[bool, 'UserArgsFromPathRecursive4']


class InsightIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class InsightArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyInsightArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    dataset: Union[bool, 'DatasetArgsFromPathRecursive1']
    creator: Union[bool, 'UserArgsFromPathRecursive1']


class MLModelIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    dataset: Union[bool, 'DatasetArgsFromPathRecursive2']
    creator: Union[bool, 'UserArgsFromPathRecursive2']


class MLModelIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    dataset: Union[bool, 'DatasetArgsFromPathRecursive3']
    creator: Union[bool, 'UserArgsFromPathRecursive3']


class MLModelIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    dataset: Union[bool, 'DatasetArgsFromPathRecursive4']
    creator: Union[bool, 'UserArgsFromPathRecursive4']


class MLModelIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class MLModelArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyMLModelArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']


class TransactionIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']


class TransactionIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']


class TransactionIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']


class TransactionIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class TransactionArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyTransactionArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive1']


class SubscriptionIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive2']


class SubscriptionIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive3']


class SubscriptionIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathRecursive4']


class SubscriptionIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class SubscriptionArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManySubscriptionArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']


class NotificationIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']


class NotificationIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']


class NotificationIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']


class NotificationIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class NotificationArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyNotificationArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive1']


class AuthTokenIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive2']


class AuthTokenIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive3']


class AuthTokenIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    user: Union[bool, 'UserArgsFromPathRecursive4']


class AuthTokenIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class AuthTokenArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyAuthTokenArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    uploader: Union[bool, 'UserArgsFromPathRecursive1']


class FileIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    uploader: Union[bool, 'UserArgsFromPathRecursive2']


class FileIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    uploader: Union[bool, 'UserArgsFromPathRecursive3']


class FileIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    uploader: Union[bool, 'UserArgsFromPathRecursive4']


class FileIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class FileArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyFileArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromPath(TypedDict, total=False):
    """Relational arguments for Path"""
    actor: Union[bool, 'UserArgsFromPathRecursive1']


class AuditLogIncludeFromPathRecursive1(TypedDict, total=False):
    """Relational arguments for Path"""
    actor: Union[bool, 'UserArgsFromPathRecursive2']


class AuditLogIncludeFromPathRecursive2(TypedDict, total=False):
    """Relational arguments for Path"""
    actor: Union[bool, 'UserArgsFromPathRecursive3']


class AuditLogIncludeFromPathRecursive3(TypedDict, total=False):
    """Relational arguments for Path"""
    actor: Union[bool, 'UserArgsFromPathRecursive4']


class AuditLogIncludeFromPathRecursive4(TypedDict, total=False):
    """Relational arguments for Path"""

    

class AuditLogArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    
    

class FindManyAuditLogArgsFromPath(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromPathRecursive1(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromPathRecursive2(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromPathRecursive3(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromPathRecursive4(TypedDict, total=False):
    """Arguments for Path"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyPathArgs = FindManyPathArgsFromPath
FindFirstPathArgs = FindManyPathArgsFromPath


    

class PathWhereInput(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    modules: 'PathModuleListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'

    # should be noted that AND and NOT should be Union['PathWhereInputRecursive1', List['PathWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['PathWhereInputRecursive1']
    OR: List['PathWhereInputRecursive1']
    NOT: List['PathWhereInputRecursive1']


class PathWhereInputRecursive1(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    modules: 'PathModuleListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'

    # should be noted that AND and NOT should be Union['PathWhereInputRecursive2', List['PathWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['PathWhereInputRecursive2']
    OR: List['PathWhereInputRecursive2']
    NOT: List['PathWhereInputRecursive2']


class PathWhereInputRecursive2(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    modules: 'PathModuleListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'

    # should be noted that AND and NOT should be Union['PathWhereInputRecursive3', List['PathWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['PathWhereInputRecursive3']
    OR: List['PathWhereInputRecursive3']
    NOT: List['PathWhereInputRecursive3']


class PathWhereInputRecursive3(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    modules: 'PathModuleListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'

    # should be noted that AND and NOT should be Union['PathWhereInputRecursive4', List['PathWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['PathWhereInputRecursive4']
    OR: List['PathWhereInputRecursive4']
    NOT: List['PathWhereInputRecursive4']


class PathWhereInputRecursive4(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    modules: 'PathModuleListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'



# aggregate Path types


    

class PathScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PathScalarWhereWithAggregatesInputRecursive1']
    OR: List['PathScalarWhereWithAggregatesInputRecursive1']
    NOT: List['PathScalarWhereWithAggregatesInputRecursive1']


class PathScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PathScalarWhereWithAggregatesInputRecursive2']
    OR: List['PathScalarWhereWithAggregatesInputRecursive2']
    NOT: List['PathScalarWhereWithAggregatesInputRecursive2']


class PathScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PathScalarWhereWithAggregatesInputRecursive3']
    OR: List['PathScalarWhereWithAggregatesInputRecursive3']
    NOT: List['PathScalarWhereWithAggregatesInputRecursive3']


class PathScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PathScalarWhereWithAggregatesInputRecursive4']
    OR: List['PathScalarWhereWithAggregatesInputRecursive4']
    NOT: List['PathScalarWhereWithAggregatesInputRecursive4']


class PathScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Path arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class PathGroupByOutput(TypedDict, total=False):
    id: _int
    title: _str
    slug: _str
    description: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'PathSumAggregateOutput'
    _avg: 'PathAvgAggregateOutput'
    _min: 'PathMinAggregateOutput'
    _max: 'PathMaxAggregateOutput'
    _count: 'PathCountAggregateOutput'


class PathAvgAggregateOutput(TypedDict, total=False):
    """Path output for aggregating averages"""
    id: float


class PathSumAggregateOutput(TypedDict, total=False):
    """Path output for aggregating sums"""
    id: _int


class PathScalarAggregateOutput(TypedDict, total=False):
    """Path output including scalar fields"""
    id: _int
    title: _str
    slug: _str
    description: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


PathMinAggregateOutput = PathScalarAggregateOutput
PathMaxAggregateOutput = PathScalarAggregateOutput


class PathMaxAggregateInput(TypedDict, total=False):
    """Path input for aggregating by max"""
    id: bool
    title: bool
    slug: bool
    description: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class PathMinAggregateInput(TypedDict, total=False):
    """Path input for aggregating by min"""
    id: bool
    title: bool
    slug: bool
    description: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class PathNumberAggregateInput(TypedDict, total=False):
    """Path input for aggregating numbers"""
    id: bool


PathAvgAggregateInput = PathNumberAggregateInput
PathSumAggregateInput = PathNumberAggregateInput


PathCountAggregateInput = TypedDict(
    'PathCountAggregateInput',
    {
        'id': bool,
        'title': bool,
        'slug': bool,
        'description': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

PathCountAggregateOutput = TypedDict(
    'PathCountAggregateOutput',
    {
        'id': int,
        'title': int,
        'slug': int,
        'description': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


PathKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'modules',
    'enrollments',
]
PathScalarFieldKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
PathScalarFieldKeysT = TypeVar('PathScalarFieldKeysT', bound=PathScalarFieldKeys)

PathRelationalFieldKeys = Literal[
        'modules',
        'enrollments',
    ]

# Module types

class ModuleOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Module create method"""
    id: _int
    description: Optional[_str]
    fullDescription: Optional[_str]
    durationMinutes: Optional[_int]
    estimatedEffort: Optional[_str]
    totalLessons: Optional[_int]
    level: Optional[_str]
    instructorId: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    instructor: 'UserCreateNestedWithoutRelationsInput'
    lessons: 'LessonCreateManyNestedWithoutRelationsInput'
    certificates: 'CertificateCreateManyNestedWithoutRelationsInput'
    enrollments: 'EnrollmentCreateManyNestedWithoutRelationsInput'
    pathLinks: 'PathModuleCreateManyNestedWithoutRelationsInput'
    skills: List[_str]
    tags: List[_str]
    priceCents: Optional[_int]
    featured: _bool
    lastUpdated: Optional[datetime.datetime]


class ModuleCreateInput(ModuleOptionalCreateInput):
    """Required arguments to the Module create method"""
    title: _str
    slug: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ModuleOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Module create method, without relations"""
    id: _int
    description: Optional[_str]
    fullDescription: Optional[_str]
    durationMinutes: Optional[_int]
    estimatedEffort: Optional[_str]
    totalLessons: Optional[_int]
    level: Optional[_str]
    instructorId: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    skills: List[_str]
    tags: List[_str]
    priceCents: Optional[_int]
    featured: _bool
    lastUpdated: Optional[datetime.datetime]


class ModuleCreateWithoutRelationsInput(ModuleOptionalCreateWithoutRelationsInput):
    """Required arguments to the Module create method, without relations"""
    title: _str
    slug: _str

class ModuleConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ModuleCreateWithoutRelationsInput'
    where: 'ModuleWhereUniqueInput'

class ModuleCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ModuleCreateWithoutRelationsInput'
    connect: 'ModuleWhereUniqueInput'
    connect_or_create: 'ModuleConnectOrCreateWithoutRelationsInput'


class ModuleCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ModuleCreateWithoutRelationsInput', List['ModuleCreateWithoutRelationsInput']]
    connect: Union['ModuleWhereUniqueInput', List['ModuleWhereUniqueInput']]
    connect_or_create: Union['ModuleConnectOrCreateWithoutRelationsInput', List['ModuleConnectOrCreateWithoutRelationsInput']]

_ModuleWhereUnique_id_Input = TypedDict(
    '_ModuleWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_ModuleWhereUnique_slug_Input = TypedDict(
    '_ModuleWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

ModuleWhereUniqueInput = Union[
    '_ModuleWhereUnique_id_Input',
    '_ModuleWhereUnique_slug_Input',
]


class ModuleUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    fullDescription: Optional[_str]
    durationMinutes: Optional[Union[AtomicIntInput, _int]]
    estimatedEffort: Optional[_str]
    totalLessons: Optional[Union[AtomicIntInput, _int]]
    level: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    instructor: 'UserUpdateOneWithoutRelationsInput'
    lessons: 'LessonUpdateManyWithoutRelationsInput'
    certificates: 'CertificateUpdateManyWithoutRelationsInput'
    enrollments: 'EnrollmentUpdateManyWithoutRelationsInput'
    pathLinks: 'PathModuleUpdateManyWithoutRelationsInput'
    skills: 'types.StringListUpdate'
    tags: 'types.StringListUpdate'
    priceCents: Optional[Union[AtomicIntInput, _int]]
    featured: _bool
    lastUpdated: Optional[datetime.datetime]


class ModuleUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    fullDescription: Optional[_str]
    durationMinutes: Optional[Union[AtomicIntInput, _int]]
    estimatedEffort: Optional[_str]
    totalLessons: Optional[Union[AtomicIntInput, _int]]
    level: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    skills: 'types.StringListUpdate'
    tags: 'types.StringListUpdate'
    priceCents: Optional[Union[AtomicIntInput, _int]]
    featured: _bool
    lastUpdated: Optional[datetime.datetime]


class ModuleUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ModuleCreateWithoutRelationsInput']
    connect: List['ModuleWhereUniqueInput']
    connect_or_create: List['ModuleConnectOrCreateWithoutRelationsInput']
    set: List['ModuleWhereUniqueInput']
    disconnect: List['ModuleWhereUniqueInput']
    delete: List['ModuleWhereUniqueInput']

    # TODO
    # update: List['ModuleUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ModuleUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ModuleScalarWhereInput']
    # upsert: List['ModuleUpserteWithWhereUniqueWithoutRelationsInput']


class ModuleUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ModuleCreateWithoutRelationsInput'
    connect: 'ModuleWhereUniqueInput'
    connect_or_create: 'ModuleConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ModuleUpdateInput'
    # upsert: 'ModuleUpsertWithoutRelationsInput'


class ModuleUpsertInput(TypedDict):
    create: 'ModuleCreateInput'
    update: 'ModuleUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Module_id_OrderByInput = TypedDict(
    '_Module_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Module_title_OrderByInput = TypedDict(
    '_Module_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Module_slug_OrderByInput = TypedDict(
    '_Module_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Module_description_OrderByInput = TypedDict(
    '_Module_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Module_fullDescription_OrderByInput = TypedDict(
    '_Module_fullDescription_OrderByInput',
    {
        'fullDescription': 'SortOrder',
    },
    total=True
)

_Module_durationMinutes_OrderByInput = TypedDict(
    '_Module_durationMinutes_OrderByInput',
    {
        'durationMinutes': 'SortOrder',
    },
    total=True
)

_Module_estimatedEffort_OrderByInput = TypedDict(
    '_Module_estimatedEffort_OrderByInput',
    {
        'estimatedEffort': 'SortOrder',
    },
    total=True
)

_Module_totalLessons_OrderByInput = TypedDict(
    '_Module_totalLessons_OrderByInput',
    {
        'totalLessons': 'SortOrder',
    },
    total=True
)

_Module_level_OrderByInput = TypedDict(
    '_Module_level_OrderByInput',
    {
        'level': 'SortOrder',
    },
    total=True
)

_Module_instructorId_OrderByInput = TypedDict(
    '_Module_instructorId_OrderByInput',
    {
        'instructorId': 'SortOrder',
    },
    total=True
)

_Module_createdAt_OrderByInput = TypedDict(
    '_Module_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Module_updatedAt_OrderByInput = TypedDict(
    '_Module_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Module_deletedAt_OrderByInput = TypedDict(
    '_Module_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Module_skills_OrderByInput = TypedDict(
    '_Module_skills_OrderByInput',
    {
        'skills': 'SortOrder',
    },
    total=True
)

_Module_tags_OrderByInput = TypedDict(
    '_Module_tags_OrderByInput',
    {
        'tags': 'SortOrder',
    },
    total=True
)

_Module_priceCents_OrderByInput = TypedDict(
    '_Module_priceCents_OrderByInput',
    {
        'priceCents': 'SortOrder',
    },
    total=True
)

_Module_featured_OrderByInput = TypedDict(
    '_Module_featured_OrderByInput',
    {
        'featured': 'SortOrder',
    },
    total=True
)

_Module_lastUpdated_OrderByInput = TypedDict(
    '_Module_lastUpdated_OrderByInput',
    {
        'lastUpdated': 'SortOrder',
    },
    total=True
)

_Module_RelevanceInner = TypedDict(
    '_Module_RelevanceInner',
    {
        'fields': 'List[ModuleScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Module_RelevanceOrderByInput = TypedDict(
    '_Module_RelevanceOrderByInput',
    {
        '_relevance': '_Module_RelevanceInner',
    },
    total=True
)

ModuleOrderByInput = Union[
    '_Module_id_OrderByInput',
    '_Module_title_OrderByInput',
    '_Module_slug_OrderByInput',
    '_Module_description_OrderByInput',
    '_Module_fullDescription_OrderByInput',
    '_Module_durationMinutes_OrderByInput',
    '_Module_estimatedEffort_OrderByInput',
    '_Module_totalLessons_OrderByInput',
    '_Module_level_OrderByInput',
    '_Module_instructorId_OrderByInput',
    '_Module_createdAt_OrderByInput',
    '_Module_updatedAt_OrderByInput',
    '_Module_deletedAt_OrderByInput',
    '_Module_skills_OrderByInput',
    '_Module_tags_OrderByInput',
    '_Module_priceCents_OrderByInput',
    '_Module_featured_OrderByInput',
    '_Module_lastUpdated_OrderByInput',
    '_Module_RelevanceOrderByInput',
]



# recursive Module types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ModuleRelationFilter = TypedDict(
    'ModuleRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ModuleListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ModuleInclude(TypedDict, total=False):
    """Module relational arguments"""
    instructor: Union[bool, 'UserArgsFromModule']
    lessons: Union[bool, 'FindManyLessonArgsFromModule']
    certificates: Union[bool, 'FindManyCertificateArgsFromModule']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModule']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromModule']


    

class UserIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromModuleRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromModuleRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromModuleRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromModuleRecursive1']
    files: Union[bool, 'FindManyFileArgsFromModuleRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromModuleRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromModuleRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromModuleRecursive1']


class UserIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromModuleRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromModuleRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromModuleRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromModuleRecursive2']
    files: Union[bool, 'FindManyFileArgsFromModuleRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromModuleRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromModuleRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromModuleRecursive2']


class UserIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromModuleRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromModuleRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromModuleRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromModuleRecursive3']
    files: Union[bool, 'FindManyFileArgsFromModuleRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromModuleRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromModuleRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromModuleRecursive3']


class UserIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromModuleRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromModuleRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromModuleRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromModuleRecursive4']
    files: Union[bool, 'FindManyFileArgsFromModuleRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromModuleRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromModuleRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromModuleRecursive4']


class UserIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class UserArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyUserArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromModuleRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive1']


class OrganizationIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromModuleRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive2']


class OrganizationIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromModuleRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive3']


class OrganizationIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromModuleRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromModuleRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromModuleRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromModuleRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromModuleRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromModuleRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromModuleRecursive4']


class OrganizationIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class OrganizationArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyOrganizationArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    invitedBy: Union[bool, 'UserArgsFromModuleRecursive1']


class OrganizationMemberIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    invitedBy: Union[bool, 'UserArgsFromModuleRecursive2']


class OrganizationMemberIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    invitedBy: Union[bool, 'UserArgsFromModuleRecursive3']


class OrganizationMemberIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    invitedBy: Union[bool, 'UserArgsFromModuleRecursive4']


class OrganizationMemberIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class OrganizationMemberArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyOrganizationMemberArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    modules: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive1']


class PathIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    modules: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive2']


class PathIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    modules: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive3']


class PathIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    modules: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive4']


class PathIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class PathArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyPathArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    instructor: Union[bool, 'UserArgsFromModuleRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromModuleRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive1']


class ModuleIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    instructor: Union[bool, 'UserArgsFromModuleRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromModuleRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive2']


class ModuleIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    instructor: Union[bool, 'UserArgsFromModuleRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromModuleRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive3']


class ModuleIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    instructor: Union[bool, 'UserArgsFromModuleRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromModuleRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromModuleRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromModuleRecursive4']


class ModuleIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class ModuleArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyModuleArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    path: Union[bool, 'PathArgsFromModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromModuleRecursive1']


class PathModuleIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    path: Union[bool, 'PathArgsFromModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromModuleRecursive2']


class PathModuleIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    path: Union[bool, 'PathArgsFromModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromModuleRecursive3']


class PathModuleIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    path: Union[bool, 'PathArgsFromModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromModuleRecursive4']


class PathModuleIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class PathModuleArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyPathModuleArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    module: Union[bool, 'ModuleArgsFromModuleRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive1']


class LessonIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    module: Union[bool, 'ModuleArgsFromModuleRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive2']


class LessonIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    module: Union[bool, 'ModuleArgsFromModuleRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive3']


class LessonIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    module: Union[bool, 'ModuleArgsFromModuleRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromModuleRecursive4']


class LessonIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class LessonArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyLessonArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromModuleRecursive1']
    path: Union[bool, 'PathArgsFromModuleRecursive1']


class EnrollmentIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromModuleRecursive2']
    path: Union[bool, 'PathArgsFromModuleRecursive2']


class EnrollmentIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromModuleRecursive3']
    path: Union[bool, 'PathArgsFromModuleRecursive3']


class EnrollmentIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromModuleRecursive4']
    path: Union[bool, 'PathArgsFromModuleRecursive4']


class EnrollmentIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class EnrollmentArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyEnrollmentArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    lesson: Union[bool, 'LessonArgsFromModuleRecursive1']


class LessonProgressIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    lesson: Union[bool, 'LessonArgsFromModuleRecursive2']


class LessonProgressIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    lesson: Union[bool, 'LessonArgsFromModuleRecursive3']


class LessonProgressIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    lesson: Union[bool, 'LessonArgsFromModuleRecursive4']


class LessonProgressIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class LessonProgressArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyLessonProgressArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromModuleRecursive1']


class CertificateIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromModuleRecursive2']


class CertificateIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromModuleRecursive3']


class CertificateIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromModuleRecursive4']


class CertificateIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class CertificateArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyCertificateArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromModuleRecursive1']


class ProjectIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromModuleRecursive2']


class ProjectIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromModuleRecursive3']


class ProjectIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    owner: Union[bool, 'UserArgsFromModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromModuleRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromModuleRecursive4']


class ProjectIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class ProjectArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyProjectArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive1']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive1']


class ProposalIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive2']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive2']


class ProposalIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive3']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive3']


class ProposalIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive4']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive4']


class ProposalIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class ProposalArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyProposalArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive1']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive1']
    client: Union[bool, 'UserArgsFromModuleRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromModuleRecursive1']


class ContractIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive2']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive2']
    client: Union[bool, 'UserArgsFromModuleRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromModuleRecursive2']


class ContractIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive3']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive3']
    client: Union[bool, 'UserArgsFromModuleRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromModuleRecursive3']


class ContractIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    project: Union[bool, 'ProjectArgsFromModuleRecursive4']
    freelancer: Union[bool, 'UserArgsFromModuleRecursive4']
    client: Union[bool, 'UserArgsFromModuleRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromModuleRecursive4']


class ContractIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class ContractArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyContractArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    contract: Union[bool, 'ContractArgsFromModuleRecursive1']


class DeliveryIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    contract: Union[bool, 'ContractArgsFromModuleRecursive2']


class DeliveryIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    contract: Union[bool, 'ContractArgsFromModuleRecursive3']


class DeliveryIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    contract: Union[bool, 'ContractArgsFromModuleRecursive4']


class DeliveryIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class DeliveryArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyDeliveryArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']


class UserSkillIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']


class UserSkillIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']


class UserSkillIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']


class UserSkillIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class UserSkillArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyUserSkillArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive1']


class DatasetIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive2']


class DatasetIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive3']


class DatasetIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromModuleRecursive4']


class DatasetIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class DatasetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyDatasetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive1']


class DashboardIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive2']


class DashboardIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive3']


class DashboardIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    ownerUser: Union[bool, 'UserArgsFromModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromModuleRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromModuleRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromModuleRecursive4']


class DashboardIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class DashboardArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyDashboardArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive1']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive1']


class DashboardDatasetIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive2']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive2']


class DashboardDatasetIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive3']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive3']


class DashboardDatasetIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive4']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive4']


class DashboardDatasetIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class DashboardDatasetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyDashboardDatasetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive1']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive1']


class WidgetIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive2']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive2']


class WidgetIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive3']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive3']


class WidgetIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive4']
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive4']


class WidgetIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class WidgetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyWidgetArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive1']
    author: Union[bool, 'UserArgsFromModuleRecursive1']


class InsightIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive2']
    author: Union[bool, 'UserArgsFromModuleRecursive2']


class InsightIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive3']
    author: Union[bool, 'UserArgsFromModuleRecursive3']


class InsightIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    dashboard: Union[bool, 'DashboardArgsFromModuleRecursive4']
    author: Union[bool, 'UserArgsFromModuleRecursive4']


class InsightIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class InsightArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyInsightArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive1']
    creator: Union[bool, 'UserArgsFromModuleRecursive1']


class MLModelIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive2']
    creator: Union[bool, 'UserArgsFromModuleRecursive2']


class MLModelIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive3']
    creator: Union[bool, 'UserArgsFromModuleRecursive3']


class MLModelIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    dataset: Union[bool, 'DatasetArgsFromModuleRecursive4']
    creator: Union[bool, 'UserArgsFromModuleRecursive4']


class MLModelIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class MLModelArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyMLModelArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']


class TransactionIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']


class TransactionIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']


class TransactionIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']


class TransactionIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class TransactionArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyTransactionArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive1']


class SubscriptionIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive2']


class SubscriptionIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive3']


class SubscriptionIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromModuleRecursive4']


class SubscriptionIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class SubscriptionArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManySubscriptionArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']


class NotificationIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']


class NotificationIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']


class NotificationIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']


class NotificationIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class NotificationArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyNotificationArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive1']


class AuthTokenIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive2']


class AuthTokenIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive3']


class AuthTokenIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    user: Union[bool, 'UserArgsFromModuleRecursive4']


class AuthTokenIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class AuthTokenArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyAuthTokenArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    uploader: Union[bool, 'UserArgsFromModuleRecursive1']


class FileIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    uploader: Union[bool, 'UserArgsFromModuleRecursive2']


class FileIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    uploader: Union[bool, 'UserArgsFromModuleRecursive3']


class FileIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    uploader: Union[bool, 'UserArgsFromModuleRecursive4']


class FileIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class FileArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyFileArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromModule(TypedDict, total=False):
    """Relational arguments for Module"""
    actor: Union[bool, 'UserArgsFromModuleRecursive1']


class AuditLogIncludeFromModuleRecursive1(TypedDict, total=False):
    """Relational arguments for Module"""
    actor: Union[bool, 'UserArgsFromModuleRecursive2']


class AuditLogIncludeFromModuleRecursive2(TypedDict, total=False):
    """Relational arguments for Module"""
    actor: Union[bool, 'UserArgsFromModuleRecursive3']


class AuditLogIncludeFromModuleRecursive3(TypedDict, total=False):
    """Relational arguments for Module"""
    actor: Union[bool, 'UserArgsFromModuleRecursive4']


class AuditLogIncludeFromModuleRecursive4(TypedDict, total=False):
    """Relational arguments for Module"""

    

class AuditLogArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    
    

class FindManyAuditLogArgsFromModule(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromModuleRecursive1(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromModuleRecursive2(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromModuleRecursive3(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromModuleRecursive4(TypedDict, total=False):
    """Arguments for Module"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyModuleArgs = FindManyModuleArgsFromModule
FindFirstModuleArgs = FindManyModuleArgsFromModule


    

class ModuleWhereInput(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    fullDescription: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    estimatedEffort: Union[None, _str, 'types.StringFilter']
    totalLessons: Union[None, _int, 'types.IntFilter']
    level: Union[None, _str, 'types.StringFilter']
    instructorId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    instructor: 'UserRelationFilter'
    lessons: 'LessonListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    pathLinks: 'PathModuleListRelationFilter'
    skills: 'types.StringListFilter'
    tags: 'types.StringListFilter'
    priceCents: Union[None, _int, 'types.IntFilter']
    featured: Union[_bool, 'types.BooleanFilter']
    lastUpdated: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ModuleWhereInputRecursive1', List['ModuleWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ModuleWhereInputRecursive1']
    OR: List['ModuleWhereInputRecursive1']
    NOT: List['ModuleWhereInputRecursive1']


class ModuleWhereInputRecursive1(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    fullDescription: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    estimatedEffort: Union[None, _str, 'types.StringFilter']
    totalLessons: Union[None, _int, 'types.IntFilter']
    level: Union[None, _str, 'types.StringFilter']
    instructorId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    instructor: 'UserRelationFilter'
    lessons: 'LessonListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    pathLinks: 'PathModuleListRelationFilter'
    skills: 'types.StringListFilter'
    tags: 'types.StringListFilter'
    priceCents: Union[None, _int, 'types.IntFilter']
    featured: Union[_bool, 'types.BooleanFilter']
    lastUpdated: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ModuleWhereInputRecursive2', List['ModuleWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ModuleWhereInputRecursive2']
    OR: List['ModuleWhereInputRecursive2']
    NOT: List['ModuleWhereInputRecursive2']


class ModuleWhereInputRecursive2(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    fullDescription: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    estimatedEffort: Union[None, _str, 'types.StringFilter']
    totalLessons: Union[None, _int, 'types.IntFilter']
    level: Union[None, _str, 'types.StringFilter']
    instructorId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    instructor: 'UserRelationFilter'
    lessons: 'LessonListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    pathLinks: 'PathModuleListRelationFilter'
    skills: 'types.StringListFilter'
    tags: 'types.StringListFilter'
    priceCents: Union[None, _int, 'types.IntFilter']
    featured: Union[_bool, 'types.BooleanFilter']
    lastUpdated: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ModuleWhereInputRecursive3', List['ModuleWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ModuleWhereInputRecursive3']
    OR: List['ModuleWhereInputRecursive3']
    NOT: List['ModuleWhereInputRecursive3']


class ModuleWhereInputRecursive3(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    fullDescription: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    estimatedEffort: Union[None, _str, 'types.StringFilter']
    totalLessons: Union[None, _int, 'types.IntFilter']
    level: Union[None, _str, 'types.StringFilter']
    instructorId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    instructor: 'UserRelationFilter'
    lessons: 'LessonListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    pathLinks: 'PathModuleListRelationFilter'
    skills: 'types.StringListFilter'
    tags: 'types.StringListFilter'
    priceCents: Union[None, _int, 'types.IntFilter']
    featured: Union[_bool, 'types.BooleanFilter']
    lastUpdated: Union[None, datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ModuleWhereInputRecursive4', List['ModuleWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ModuleWhereInputRecursive4']
    OR: List['ModuleWhereInputRecursive4']
    NOT: List['ModuleWhereInputRecursive4']


class ModuleWhereInputRecursive4(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    fullDescription: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    estimatedEffort: Union[None, _str, 'types.StringFilter']
    totalLessons: Union[None, _int, 'types.IntFilter']
    level: Union[None, _str, 'types.StringFilter']
    instructorId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    instructor: 'UserRelationFilter'
    lessons: 'LessonListRelationFilter'
    certificates: 'CertificateListRelationFilter'
    enrollments: 'EnrollmentListRelationFilter'
    pathLinks: 'PathModuleListRelationFilter'
    skills: 'types.StringListFilter'
    tags: 'types.StringListFilter'
    priceCents: Union[None, _int, 'types.IntFilter']
    featured: Union[_bool, 'types.BooleanFilter']
    lastUpdated: Union[None, datetime.datetime, 'types.DateTimeFilter']



# aggregate Module types


    

class ModuleScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    fullDescription: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    estimatedEffort: Union[_str, 'types.StringWithAggregatesFilter']
    totalLessons: Union[_int, 'types.IntWithAggregatesFilter']
    level: Union[_str, 'types.StringWithAggregatesFilter']
    instructorId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    priceCents: Union[_int, 'types.IntWithAggregatesFilter']
    featured: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUpdated: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ModuleScalarWhereWithAggregatesInputRecursive1']
    OR: List['ModuleScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ModuleScalarWhereWithAggregatesInputRecursive1']


class ModuleScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    fullDescription: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    estimatedEffort: Union[_str, 'types.StringWithAggregatesFilter']
    totalLessons: Union[_int, 'types.IntWithAggregatesFilter']
    level: Union[_str, 'types.StringWithAggregatesFilter']
    instructorId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    priceCents: Union[_int, 'types.IntWithAggregatesFilter']
    featured: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUpdated: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ModuleScalarWhereWithAggregatesInputRecursive2']
    OR: List['ModuleScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ModuleScalarWhereWithAggregatesInputRecursive2']


class ModuleScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    fullDescription: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    estimatedEffort: Union[_str, 'types.StringWithAggregatesFilter']
    totalLessons: Union[_int, 'types.IntWithAggregatesFilter']
    level: Union[_str, 'types.StringWithAggregatesFilter']
    instructorId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    priceCents: Union[_int, 'types.IntWithAggregatesFilter']
    featured: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUpdated: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ModuleScalarWhereWithAggregatesInputRecursive3']
    OR: List['ModuleScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ModuleScalarWhereWithAggregatesInputRecursive3']


class ModuleScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    fullDescription: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    estimatedEffort: Union[_str, 'types.StringWithAggregatesFilter']
    totalLessons: Union[_int, 'types.IntWithAggregatesFilter']
    level: Union[_str, 'types.StringWithAggregatesFilter']
    instructorId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    priceCents: Union[_int, 'types.IntWithAggregatesFilter']
    featured: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUpdated: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ModuleScalarWhereWithAggregatesInputRecursive4']
    OR: List['ModuleScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ModuleScalarWhereWithAggregatesInputRecursive4']


class ModuleScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Module arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    fullDescription: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    estimatedEffort: Union[_str, 'types.StringWithAggregatesFilter']
    totalLessons: Union[_int, 'types.IntWithAggregatesFilter']
    level: Union[_str, 'types.StringWithAggregatesFilter']
    instructorId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    priceCents: Union[_int, 'types.IntWithAggregatesFilter']
    featured: Union[_bool, 'types.BooleanWithAggregatesFilter']
    lastUpdated: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ModuleGroupByOutput(TypedDict, total=False):
    id: _int
    title: _str
    slug: _str
    description: _str
    fullDescription: _str
    durationMinutes: _int
    estimatedEffort: _str
    totalLessons: _int
    level: _str
    instructorId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    skills: List[_str]
    tags: List[_str]
    priceCents: _int
    featured: _bool
    lastUpdated: datetime.datetime
    _sum: 'ModuleSumAggregateOutput'
    _avg: 'ModuleAvgAggregateOutput'
    _min: 'ModuleMinAggregateOutput'
    _max: 'ModuleMaxAggregateOutput'
    _count: 'ModuleCountAggregateOutput'


class ModuleAvgAggregateOutput(TypedDict, total=False):
    """Module output for aggregating averages"""
    id: float
    durationMinutes: float
    totalLessons: float
    instructorId: float
    priceCents: float


class ModuleSumAggregateOutput(TypedDict, total=False):
    """Module output for aggregating sums"""
    id: _int
    durationMinutes: _int
    totalLessons: _int
    instructorId: _int
    priceCents: _int


class ModuleScalarAggregateOutput(TypedDict, total=False):
    """Module output including scalar fields"""
    id: _int
    title: _str
    slug: _str
    description: _str
    fullDescription: _str
    durationMinutes: _int
    estimatedEffort: _str
    totalLessons: _int
    level: _str
    instructorId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    skills: List[_str]
    tags: List[_str]
    priceCents: _int
    featured: _bool
    lastUpdated: datetime.datetime


ModuleMinAggregateOutput = ModuleScalarAggregateOutput
ModuleMaxAggregateOutput = ModuleScalarAggregateOutput


class ModuleMaxAggregateInput(TypedDict, total=False):
    """Module input for aggregating by max"""
    id: bool
    title: bool
    slug: bool
    description: bool
    fullDescription: bool
    durationMinutes: bool
    estimatedEffort: bool
    totalLessons: bool
    level: bool
    instructorId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool
    skills: bool
    tags: bool
    priceCents: bool
    featured: bool
    lastUpdated: bool


class ModuleMinAggregateInput(TypedDict, total=False):
    """Module input for aggregating by min"""
    id: bool
    title: bool
    slug: bool
    description: bool
    fullDescription: bool
    durationMinutes: bool
    estimatedEffort: bool
    totalLessons: bool
    level: bool
    instructorId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool
    skills: bool
    tags: bool
    priceCents: bool
    featured: bool
    lastUpdated: bool


class ModuleNumberAggregateInput(TypedDict, total=False):
    """Module input for aggregating numbers"""
    id: bool
    durationMinutes: bool
    totalLessons: bool
    instructorId: bool
    priceCents: bool


ModuleAvgAggregateInput = ModuleNumberAggregateInput
ModuleSumAggregateInput = ModuleNumberAggregateInput


ModuleCountAggregateInput = TypedDict(
    'ModuleCountAggregateInput',
    {
        'id': bool,
        'title': bool,
        'slug': bool,
        'description': bool,
        'fullDescription': bool,
        'durationMinutes': bool,
        'estimatedEffort': bool,
        'totalLessons': bool,
        'level': bool,
        'instructorId': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        'skills': bool,
        'tags': bool,
        'priceCents': bool,
        'featured': bool,
        'lastUpdated': bool,
        '_all': bool,
    },
    total=False,
)

ModuleCountAggregateOutput = TypedDict(
    'ModuleCountAggregateOutput',
    {
        'id': int,
        'title': int,
        'slug': int,
        'description': int,
        'fullDescription': int,
        'durationMinutes': int,
        'estimatedEffort': int,
        'totalLessons': int,
        'level': int,
        'instructorId': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        'skills': int,
        'tags': int,
        'priceCents': int,
        'featured': int,
        'lastUpdated': int,
        '_all': int,
    },
    total=False,
)


ModuleKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'fullDescription',
    'durationMinutes',
    'estimatedEffort',
    'totalLessons',
    'level',
    'instructorId',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'instructor',
    'lessons',
    'certificates',
    'enrollments',
    'pathLinks',
    'skills',
    'tags',
    'priceCents',
    'featured',
    'lastUpdated',
]
ModuleScalarFieldKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'fullDescription',
    'durationMinutes',
    'estimatedEffort',
    'totalLessons',
    'level',
    'instructorId',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'skills',
    'tags',
    'priceCents',
    'featured',
    'lastUpdated',
]
ModuleScalarFieldKeysT = TypeVar('ModuleScalarFieldKeysT', bound=ModuleScalarFieldKeys)

ModuleRelationalFieldKeys = Literal[
        'instructor',
        'lessons',
        'certificates',
        'enrollments',
        'pathLinks',
    ]

# PathModule types

class PathModuleOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the PathModule create method"""
    id: _int
    pathId: _int
    moduleId: _int
    order: Optional[_int]
    path: 'PathCreateNestedWithoutRelationsInput'
    module: 'ModuleCreateNestedWithoutRelationsInput'


class PathModuleCreateInput(PathModuleOptionalCreateInput):
    """Required arguments to the PathModule create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class PathModuleOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the PathModule create method, without relations"""
    id: _int
    pathId: _int
    moduleId: _int
    order: Optional[_int]


class PathModuleCreateWithoutRelationsInput(PathModuleOptionalCreateWithoutRelationsInput):
    """Required arguments to the PathModule create method, without relations"""

class PathModuleConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'PathModuleCreateWithoutRelationsInput'
    where: 'PathModuleWhereUniqueInput'

class PathModuleCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'PathModuleCreateWithoutRelationsInput'
    connect: 'PathModuleWhereUniqueInput'
    connect_or_create: 'PathModuleConnectOrCreateWithoutRelationsInput'


class PathModuleCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['PathModuleCreateWithoutRelationsInput', List['PathModuleCreateWithoutRelationsInput']]
    connect: Union['PathModuleWhereUniqueInput', List['PathModuleWhereUniqueInput']]
    connect_or_create: Union['PathModuleConnectOrCreateWithoutRelationsInput', List['PathModuleConnectOrCreateWithoutRelationsInput']]

_PathModuleWhereUnique_id_Input = TypedDict(
    '_PathModuleWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_PathModuleCompoundpathId_moduleIdKeyInner = TypedDict(
    '_PathModuleCompoundpathId_moduleIdKeyInner',
    {
        'pathId': '_int',
        'moduleId': '_int',
    },
    total=True
)

_PathModuleCompoundpathId_moduleIdKey = TypedDict(
    '_PathModuleCompoundpathId_moduleIdKey',
    {
        'pathId_moduleId': '_PathModuleCompoundpathId_moduleIdKeyInner',
    },
    total=True
)

PathModuleWhereUniqueInput = Union[
    '_PathModuleWhereUnique_id_Input',
    '_PathModuleCompoundpathId_moduleIdKey',
]


class PathModuleUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    order: Optional[Union[AtomicIntInput, _int]]
    path: 'PathUpdateOneWithoutRelationsInput'
    module: 'ModuleUpdateOneWithoutRelationsInput'


class PathModuleUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    order: Optional[Union[AtomicIntInput, _int]]


class PathModuleUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['PathModuleCreateWithoutRelationsInput']
    connect: List['PathModuleWhereUniqueInput']
    connect_or_create: List['PathModuleConnectOrCreateWithoutRelationsInput']
    set: List['PathModuleWhereUniqueInput']
    disconnect: List['PathModuleWhereUniqueInput']
    delete: List['PathModuleWhereUniqueInput']

    # TODO
    # update: List['PathModuleUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['PathModuleUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['PathModuleScalarWhereInput']
    # upsert: List['PathModuleUpserteWithWhereUniqueWithoutRelationsInput']


class PathModuleUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'PathModuleCreateWithoutRelationsInput'
    connect: 'PathModuleWhereUniqueInput'
    connect_or_create: 'PathModuleConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'PathModuleUpdateInput'
    # upsert: 'PathModuleUpsertWithoutRelationsInput'


class PathModuleUpsertInput(TypedDict):
    create: 'PathModuleCreateInput'
    update: 'PathModuleUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_PathModule_id_OrderByInput = TypedDict(
    '_PathModule_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_PathModule_pathId_OrderByInput = TypedDict(
    '_PathModule_pathId_OrderByInput',
    {
        'pathId': 'SortOrder',
    },
    total=True
)

_PathModule_moduleId_OrderByInput = TypedDict(
    '_PathModule_moduleId_OrderByInput',
    {
        'moduleId': 'SortOrder',
    },
    total=True
)

_PathModule_order_OrderByInput = TypedDict(
    '_PathModule_order_OrderByInput',
    {
        'order': 'SortOrder',
    },
    total=True
)

_PathModule_RelevanceInner = TypedDict(
    '_PathModule_RelevanceInner',
    {
        'fields': 'List[PathModuleScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_PathModule_RelevanceOrderByInput = TypedDict(
    '_PathModule_RelevanceOrderByInput',
    {
        '_relevance': '_PathModule_RelevanceInner',
    },
    total=True
)

PathModuleOrderByInput = Union[
    '_PathModule_id_OrderByInput',
    '_PathModule_pathId_OrderByInput',
    '_PathModule_moduleId_OrderByInput',
    '_PathModule_order_OrderByInput',
    '_PathModule_RelevanceOrderByInput',
]



# recursive PathModule types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

PathModuleRelationFilter = TypedDict(
    'PathModuleRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class PathModuleListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class PathModuleInclude(TypedDict, total=False):
    """PathModule relational arguments"""
    path: Union[bool, 'PathArgsFromPathModule']
    module: Union[bool, 'ModuleArgsFromPathModule']


    

class UserIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathModuleRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathModuleRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathModuleRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathModuleRecursive1']
    files: Union[bool, 'FindManyFileArgsFromPathModuleRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathModuleRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathModuleRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathModuleRecursive1']


class UserIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathModuleRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathModuleRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathModuleRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathModuleRecursive2']
    files: Union[bool, 'FindManyFileArgsFromPathModuleRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathModuleRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathModuleRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathModuleRecursive2']


class UserIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathModuleRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathModuleRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathModuleRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathModuleRecursive3']
    files: Union[bool, 'FindManyFileArgsFromPathModuleRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathModuleRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathModuleRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathModuleRecursive3']


class UserIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromPathModuleRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromPathModuleRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromPathModuleRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromPathModuleRecursive4']
    files: Union[bool, 'FindManyFileArgsFromPathModuleRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromPathModuleRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromPathModuleRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromPathModuleRecursive4']


class UserIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class UserArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyUserArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathModuleRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive1']


class OrganizationIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathModuleRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive2']


class OrganizationIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathModuleRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive3']


class OrganizationIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromPathModuleRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromPathModuleRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromPathModuleRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromPathModuleRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromPathModuleRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromPathModuleRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromPathModuleRecursive4']


class OrganizationIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class OrganizationArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyOrganizationArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    invitedBy: Union[bool, 'UserArgsFromPathModuleRecursive1']


class OrganizationMemberIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    invitedBy: Union[bool, 'UserArgsFromPathModuleRecursive2']


class OrganizationMemberIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    invitedBy: Union[bool, 'UserArgsFromPathModuleRecursive3']


class OrganizationMemberIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    invitedBy: Union[bool, 'UserArgsFromPathModuleRecursive4']


class OrganizationMemberIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class OrganizationMemberArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyOrganizationMemberArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive1']


class PathIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive2']


class PathIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive3']


class PathIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    modules: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive4']


class PathIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class PathArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyPathArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    instructor: Union[bool, 'UserArgsFromPathModuleRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromPathModuleRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive1']


class ModuleIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    instructor: Union[bool, 'UserArgsFromPathModuleRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromPathModuleRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive2']


class ModuleIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    instructor: Union[bool, 'UserArgsFromPathModuleRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromPathModuleRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive3']


class ModuleIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    instructor: Union[bool, 'UserArgsFromPathModuleRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromPathModuleRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromPathModuleRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromPathModuleRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromPathModuleRecursive4']


class ModuleIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class ModuleArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyModuleArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    path: Union[bool, 'PathArgsFromPathModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive1']


class PathModuleIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    path: Union[bool, 'PathArgsFromPathModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive2']


class PathModuleIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    path: Union[bool, 'PathArgsFromPathModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive3']


class PathModuleIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    path: Union[bool, 'PathArgsFromPathModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive4']


class PathModuleIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class PathModuleArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyPathModuleArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive1']


class LessonIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive2']


class LessonIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive3']


class LessonIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromPathModuleRecursive4']


class LessonIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class LessonArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyLessonArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive1']
    path: Union[bool, 'PathArgsFromPathModuleRecursive1']


class EnrollmentIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive2']
    path: Union[bool, 'PathArgsFromPathModuleRecursive2']


class EnrollmentIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive3']
    path: Union[bool, 'PathArgsFromPathModuleRecursive3']


class EnrollmentIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive4']
    path: Union[bool, 'PathArgsFromPathModuleRecursive4']


class EnrollmentIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class EnrollmentArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyEnrollmentArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    lesson: Union[bool, 'LessonArgsFromPathModuleRecursive1']


class LessonProgressIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    lesson: Union[bool, 'LessonArgsFromPathModuleRecursive2']


class LessonProgressIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    lesson: Union[bool, 'LessonArgsFromPathModuleRecursive3']


class LessonProgressIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    lesson: Union[bool, 'LessonArgsFromPathModuleRecursive4']


class LessonProgressIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class LessonProgressArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyLessonProgressArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive1']


class CertificateIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive2']


class CertificateIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive3']


class CertificateIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    module: Union[bool, 'ModuleArgsFromPathModuleRecursive4']


class CertificateIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class CertificateArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyCertificateArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromPathModuleRecursive1']


class ProjectIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromPathModuleRecursive2']


class ProjectIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromPathModuleRecursive3']


class ProjectIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    owner: Union[bool, 'UserArgsFromPathModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromPathModuleRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromPathModuleRecursive4']


class ProjectIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class ProjectArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyProjectArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive1']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive1']


class ProposalIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive2']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive2']


class ProposalIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive3']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive3']


class ProposalIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive4']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive4']


class ProposalIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class ProposalArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyProposalArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive1']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive1']
    client: Union[bool, 'UserArgsFromPathModuleRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathModuleRecursive1']


class ContractIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive2']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive2']
    client: Union[bool, 'UserArgsFromPathModuleRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathModuleRecursive2']


class ContractIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive3']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive3']
    client: Union[bool, 'UserArgsFromPathModuleRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathModuleRecursive3']


class ContractIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    project: Union[bool, 'ProjectArgsFromPathModuleRecursive4']
    freelancer: Union[bool, 'UserArgsFromPathModuleRecursive4']
    client: Union[bool, 'UserArgsFromPathModuleRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromPathModuleRecursive4']


class ContractIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class ContractArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyContractArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    contract: Union[bool, 'ContractArgsFromPathModuleRecursive1']


class DeliveryIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    contract: Union[bool, 'ContractArgsFromPathModuleRecursive2']


class DeliveryIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    contract: Union[bool, 'ContractArgsFromPathModuleRecursive3']


class DeliveryIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    contract: Union[bool, 'ContractArgsFromPathModuleRecursive4']


class DeliveryIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class DeliveryArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyDeliveryArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']


class UserSkillIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']


class UserSkillIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']


class UserSkillIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']


class UserSkillIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class UserSkillArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyUserSkillArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive1']


class DatasetIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive2']


class DatasetIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive3']


class DatasetIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromPathModuleRecursive4']


class DatasetIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class DatasetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyDatasetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive1']


class DashboardIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive2']


class DashboardIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive3']


class DashboardIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    ownerUser: Union[bool, 'UserArgsFromPathModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromPathModuleRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromPathModuleRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromPathModuleRecursive4']


class DashboardIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class DashboardArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyDashboardArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive1']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive1']


class DashboardDatasetIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive2']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive2']


class DashboardDatasetIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive3']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive3']


class DashboardDatasetIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive4']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive4']


class DashboardDatasetIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class DashboardDatasetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyDashboardDatasetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive1']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive1']


class WidgetIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive2']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive2']


class WidgetIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive3']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive3']


class WidgetIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive4']
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive4']


class WidgetIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class WidgetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyWidgetArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive1']
    author: Union[bool, 'UserArgsFromPathModuleRecursive1']


class InsightIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive2']
    author: Union[bool, 'UserArgsFromPathModuleRecursive2']


class InsightIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive3']
    author: Union[bool, 'UserArgsFromPathModuleRecursive3']


class InsightIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dashboard: Union[bool, 'DashboardArgsFromPathModuleRecursive4']
    author: Union[bool, 'UserArgsFromPathModuleRecursive4']


class InsightIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class InsightArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyInsightArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive1']
    creator: Union[bool, 'UserArgsFromPathModuleRecursive1']


class MLModelIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive2']
    creator: Union[bool, 'UserArgsFromPathModuleRecursive2']


class MLModelIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive3']
    creator: Union[bool, 'UserArgsFromPathModuleRecursive3']


class MLModelIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    dataset: Union[bool, 'DatasetArgsFromPathModuleRecursive4']
    creator: Union[bool, 'UserArgsFromPathModuleRecursive4']


class MLModelIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class MLModelArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyMLModelArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']


class TransactionIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']


class TransactionIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']


class TransactionIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']


class TransactionIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class TransactionArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyTransactionArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive1']


class SubscriptionIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive2']


class SubscriptionIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive3']


class SubscriptionIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']
    organization: Union[bool, 'OrganizationArgsFromPathModuleRecursive4']


class SubscriptionIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class SubscriptionArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManySubscriptionArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']


class NotificationIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']


class NotificationIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']


class NotificationIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']


class NotificationIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class NotificationArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyNotificationArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive1']


class AuthTokenIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive2']


class AuthTokenIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive3']


class AuthTokenIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    user: Union[bool, 'UserArgsFromPathModuleRecursive4']


class AuthTokenIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class AuthTokenArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyAuthTokenArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    uploader: Union[bool, 'UserArgsFromPathModuleRecursive1']


class FileIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    uploader: Union[bool, 'UserArgsFromPathModuleRecursive2']


class FileIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    uploader: Union[bool, 'UserArgsFromPathModuleRecursive3']


class FileIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    uploader: Union[bool, 'UserArgsFromPathModuleRecursive4']


class FileIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class FileArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyFileArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromPathModule(TypedDict, total=False):
    """Relational arguments for PathModule"""
    actor: Union[bool, 'UserArgsFromPathModuleRecursive1']


class AuditLogIncludeFromPathModuleRecursive1(TypedDict, total=False):
    """Relational arguments for PathModule"""
    actor: Union[bool, 'UserArgsFromPathModuleRecursive2']


class AuditLogIncludeFromPathModuleRecursive2(TypedDict, total=False):
    """Relational arguments for PathModule"""
    actor: Union[bool, 'UserArgsFromPathModuleRecursive3']


class AuditLogIncludeFromPathModuleRecursive3(TypedDict, total=False):
    """Relational arguments for PathModule"""
    actor: Union[bool, 'UserArgsFromPathModuleRecursive4']


class AuditLogIncludeFromPathModuleRecursive4(TypedDict, total=False):
    """Relational arguments for PathModule"""

    

class AuditLogArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    
    

class FindManyAuditLogArgsFromPathModule(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromPathModuleRecursive1(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromPathModuleRecursive2(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromPathModuleRecursive3(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromPathModuleRecursive4(TypedDict, total=False):
    """Arguments for PathModule"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyPathModuleArgs = FindManyPathModuleArgsFromPathModule
FindFirstPathModuleArgs = FindManyPathModuleArgsFromPathModule


    

class PathModuleWhereInput(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    pathId: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    order: Union[None, _int, 'types.IntFilter']
    path: 'PathRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['PathModuleWhereInputRecursive1', List['PathModuleWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['PathModuleWhereInputRecursive1']
    OR: List['PathModuleWhereInputRecursive1']
    NOT: List['PathModuleWhereInputRecursive1']


class PathModuleWhereInputRecursive1(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    pathId: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    order: Union[None, _int, 'types.IntFilter']
    path: 'PathRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['PathModuleWhereInputRecursive2', List['PathModuleWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['PathModuleWhereInputRecursive2']
    OR: List['PathModuleWhereInputRecursive2']
    NOT: List['PathModuleWhereInputRecursive2']


class PathModuleWhereInputRecursive2(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    pathId: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    order: Union[None, _int, 'types.IntFilter']
    path: 'PathRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['PathModuleWhereInputRecursive3', List['PathModuleWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['PathModuleWhereInputRecursive3']
    OR: List['PathModuleWhereInputRecursive3']
    NOT: List['PathModuleWhereInputRecursive3']


class PathModuleWhereInputRecursive3(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    pathId: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    order: Union[None, _int, 'types.IntFilter']
    path: 'PathRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['PathModuleWhereInputRecursive4', List['PathModuleWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['PathModuleWhereInputRecursive4']
    OR: List['PathModuleWhereInputRecursive4']
    NOT: List['PathModuleWhereInputRecursive4']


class PathModuleWhereInputRecursive4(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    pathId: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    order: Union[None, _int, 'types.IntFilter']
    path: 'PathRelationFilter'
    module: 'ModuleRelationFilter'



# aggregate PathModule types


    

class PathModuleScalarWhereWithAggregatesInput(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['PathModuleScalarWhereWithAggregatesInputRecursive1']
    OR: List['PathModuleScalarWhereWithAggregatesInputRecursive1']
    NOT: List['PathModuleScalarWhereWithAggregatesInputRecursive1']


class PathModuleScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['PathModuleScalarWhereWithAggregatesInputRecursive2']
    OR: List['PathModuleScalarWhereWithAggregatesInputRecursive2']
    NOT: List['PathModuleScalarWhereWithAggregatesInputRecursive2']


class PathModuleScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['PathModuleScalarWhereWithAggregatesInputRecursive3']
    OR: List['PathModuleScalarWhereWithAggregatesInputRecursive3']
    NOT: List['PathModuleScalarWhereWithAggregatesInputRecursive3']


class PathModuleScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['PathModuleScalarWhereWithAggregatesInputRecursive4']
    OR: List['PathModuleScalarWhereWithAggregatesInputRecursive4']
    NOT: List['PathModuleScalarWhereWithAggregatesInputRecursive4']


class PathModuleScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """PathModule arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']



class PathModuleGroupByOutput(TypedDict, total=False):
    id: _int
    pathId: _int
    moduleId: _int
    order: _int
    _sum: 'PathModuleSumAggregateOutput'
    _avg: 'PathModuleAvgAggregateOutput'
    _min: 'PathModuleMinAggregateOutput'
    _max: 'PathModuleMaxAggregateOutput'
    _count: 'PathModuleCountAggregateOutput'


class PathModuleAvgAggregateOutput(TypedDict, total=False):
    """PathModule output for aggregating averages"""
    id: float
    pathId: float
    moduleId: float
    order: float


class PathModuleSumAggregateOutput(TypedDict, total=False):
    """PathModule output for aggregating sums"""
    id: _int
    pathId: _int
    moduleId: _int
    order: _int


class PathModuleScalarAggregateOutput(TypedDict, total=False):
    """PathModule output including scalar fields"""
    id: _int
    pathId: _int
    moduleId: _int
    order: _int


PathModuleMinAggregateOutput = PathModuleScalarAggregateOutput
PathModuleMaxAggregateOutput = PathModuleScalarAggregateOutput


class PathModuleMaxAggregateInput(TypedDict, total=False):
    """PathModule input for aggregating by max"""
    id: bool
    pathId: bool
    moduleId: bool
    order: bool


class PathModuleMinAggregateInput(TypedDict, total=False):
    """PathModule input for aggregating by min"""
    id: bool
    pathId: bool
    moduleId: bool
    order: bool


class PathModuleNumberAggregateInput(TypedDict, total=False):
    """PathModule input for aggregating numbers"""
    id: bool
    pathId: bool
    moduleId: bool
    order: bool


PathModuleAvgAggregateInput = PathModuleNumberAggregateInput
PathModuleSumAggregateInput = PathModuleNumberAggregateInput


PathModuleCountAggregateInput = TypedDict(
    'PathModuleCountAggregateInput',
    {
        'id': bool,
        'pathId': bool,
        'moduleId': bool,
        'order': bool,
        '_all': bool,
    },
    total=False,
)

PathModuleCountAggregateOutput = TypedDict(
    'PathModuleCountAggregateOutput',
    {
        'id': int,
        'pathId': int,
        'moduleId': int,
        'order': int,
        '_all': int,
    },
    total=False,
)


PathModuleKeys = Literal[
    'id',
    'pathId',
    'moduleId',
    'order',
    'path',
    'module',
]
PathModuleScalarFieldKeys = Literal[
    'id',
    'pathId',
    'moduleId',
    'order',
]
PathModuleScalarFieldKeysT = TypeVar('PathModuleScalarFieldKeysT', bound=PathModuleScalarFieldKeys)

PathModuleRelationalFieldKeys = Literal[
        'path',
        'module',
    ]

# Lesson types

class LessonOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Lesson create method"""
    id: _int
    moduleId: _int
    description: Optional[_str]
    durationMinutes: Optional[_int]
    videoUrl: Optional[_str]
    transcript: Optional[_str]
    attachments: Optional['fields.Json']
    quizId: Optional[_int]
    requiredPassScore: Optional[_int]
    thumbnailUrl: Optional[_str]
    thumbnailBlurDataURL: Optional[_str]
    learningObjectives: List[_str]
    keyTakeaways: List[_str]
    instructorNotes: Optional[_str]
    estimatedCompletionTime: Optional[_int]
    difficulty: Optional[_str]
    tags: List[_str]
    relatedResources: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    module: 'ModuleCreateNestedWithoutRelationsInput'
    progresses: 'LessonProgressCreateManyNestedWithoutRelationsInput'


class LessonCreateInput(LessonOptionalCreateInput):
    """Required arguments to the Lesson create method"""
    title: _str
    type: _str
    order: _int


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class LessonOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Lesson create method, without relations"""
    id: _int
    moduleId: _int
    description: Optional[_str]
    durationMinutes: Optional[_int]
    videoUrl: Optional[_str]
    transcript: Optional[_str]
    attachments: Optional['fields.Json']
    quizId: Optional[_int]
    requiredPassScore: Optional[_int]
    thumbnailUrl: Optional[_str]
    thumbnailBlurDataURL: Optional[_str]
    learningObjectives: List[_str]
    keyTakeaways: List[_str]
    instructorNotes: Optional[_str]
    estimatedCompletionTime: Optional[_int]
    difficulty: Optional[_str]
    tags: List[_str]
    relatedResources: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class LessonCreateWithoutRelationsInput(LessonOptionalCreateWithoutRelationsInput):
    """Required arguments to the Lesson create method, without relations"""
    title: _str
    type: _str
    order: _int

class LessonConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'LessonCreateWithoutRelationsInput'
    where: 'LessonWhereUniqueInput'

class LessonCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'LessonCreateWithoutRelationsInput'
    connect: 'LessonWhereUniqueInput'
    connect_or_create: 'LessonConnectOrCreateWithoutRelationsInput'


class LessonCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['LessonCreateWithoutRelationsInput', List['LessonCreateWithoutRelationsInput']]
    connect: Union['LessonWhereUniqueInput', List['LessonWhereUniqueInput']]
    connect_or_create: Union['LessonConnectOrCreateWithoutRelationsInput', List['LessonConnectOrCreateWithoutRelationsInput']]

_LessonWhereUnique_id_Input = TypedDict(
    '_LessonWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

LessonWhereUniqueInput = _LessonWhereUnique_id_Input


class LessonUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    title: _str
    description: Optional[_str]
    durationMinutes: Optional[Union[AtomicIntInput, _int]]
    type: _str
    videoUrl: Optional[_str]
    transcript: Optional[_str]
    attachments: Optional['fields.Json']
    quizId: Optional[Union[AtomicIntInput, _int]]
    requiredPassScore: Optional[Union[AtomicIntInput, _int]]
    order: Union[AtomicIntInput, _int]
    thumbnailUrl: Optional[_str]
    thumbnailBlurDataURL: Optional[_str]
    learningObjectives: 'types.StringListUpdate'
    keyTakeaways: 'types.StringListUpdate'
    instructorNotes: Optional[_str]
    estimatedCompletionTime: Optional[Union[AtomicIntInput, _int]]
    difficulty: Optional[_str]
    tags: 'types.StringListUpdate'
    relatedResources: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    module: 'ModuleUpdateOneWithoutRelationsInput'
    progresses: 'LessonProgressUpdateManyWithoutRelationsInput'


class LessonUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    title: _str
    description: Optional[_str]
    durationMinutes: Optional[Union[AtomicIntInput, _int]]
    type: _str
    videoUrl: Optional[_str]
    transcript: Optional[_str]
    attachments: Optional['fields.Json']
    quizId: Optional[Union[AtomicIntInput, _int]]
    requiredPassScore: Optional[Union[AtomicIntInput, _int]]
    order: Union[AtomicIntInput, _int]
    thumbnailUrl: Optional[_str]
    thumbnailBlurDataURL: Optional[_str]
    learningObjectives: 'types.StringListUpdate'
    keyTakeaways: 'types.StringListUpdate'
    instructorNotes: Optional[_str]
    estimatedCompletionTime: Optional[Union[AtomicIntInput, _int]]
    difficulty: Optional[_str]
    tags: 'types.StringListUpdate'
    relatedResources: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class LessonUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['LessonCreateWithoutRelationsInput']
    connect: List['LessonWhereUniqueInput']
    connect_or_create: List['LessonConnectOrCreateWithoutRelationsInput']
    set: List['LessonWhereUniqueInput']
    disconnect: List['LessonWhereUniqueInput']
    delete: List['LessonWhereUniqueInput']

    # TODO
    # update: List['LessonUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['LessonUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['LessonScalarWhereInput']
    # upsert: List['LessonUpserteWithWhereUniqueWithoutRelationsInput']


class LessonUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'LessonCreateWithoutRelationsInput'
    connect: 'LessonWhereUniqueInput'
    connect_or_create: 'LessonConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'LessonUpdateInput'
    # upsert: 'LessonUpsertWithoutRelationsInput'


class LessonUpsertInput(TypedDict):
    create: 'LessonCreateInput'
    update: 'LessonUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Lesson_id_OrderByInput = TypedDict(
    '_Lesson_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Lesson_moduleId_OrderByInput = TypedDict(
    '_Lesson_moduleId_OrderByInput',
    {
        'moduleId': 'SortOrder',
    },
    total=True
)

_Lesson_title_OrderByInput = TypedDict(
    '_Lesson_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Lesson_description_OrderByInput = TypedDict(
    '_Lesson_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Lesson_durationMinutes_OrderByInput = TypedDict(
    '_Lesson_durationMinutes_OrderByInput',
    {
        'durationMinutes': 'SortOrder',
    },
    total=True
)

_Lesson_type_OrderByInput = TypedDict(
    '_Lesson_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Lesson_videoUrl_OrderByInput = TypedDict(
    '_Lesson_videoUrl_OrderByInput',
    {
        'videoUrl': 'SortOrder',
    },
    total=True
)

_Lesson_transcript_OrderByInput = TypedDict(
    '_Lesson_transcript_OrderByInput',
    {
        'transcript': 'SortOrder',
    },
    total=True
)

_Lesson_attachments_OrderByInput = TypedDict(
    '_Lesson_attachments_OrderByInput',
    {
        'attachments': 'SortOrder',
    },
    total=True
)

_Lesson_quizId_OrderByInput = TypedDict(
    '_Lesson_quizId_OrderByInput',
    {
        'quizId': 'SortOrder',
    },
    total=True
)

_Lesson_requiredPassScore_OrderByInput = TypedDict(
    '_Lesson_requiredPassScore_OrderByInput',
    {
        'requiredPassScore': 'SortOrder',
    },
    total=True
)

_Lesson_order_OrderByInput = TypedDict(
    '_Lesson_order_OrderByInput',
    {
        'order': 'SortOrder',
    },
    total=True
)

_Lesson_thumbnailUrl_OrderByInput = TypedDict(
    '_Lesson_thumbnailUrl_OrderByInput',
    {
        'thumbnailUrl': 'SortOrder',
    },
    total=True
)

_Lesson_thumbnailBlurDataURL_OrderByInput = TypedDict(
    '_Lesson_thumbnailBlurDataURL_OrderByInput',
    {
        'thumbnailBlurDataURL': 'SortOrder',
    },
    total=True
)

_Lesson_learningObjectives_OrderByInput = TypedDict(
    '_Lesson_learningObjectives_OrderByInput',
    {
        'learningObjectives': 'SortOrder',
    },
    total=True
)

_Lesson_keyTakeaways_OrderByInput = TypedDict(
    '_Lesson_keyTakeaways_OrderByInput',
    {
        'keyTakeaways': 'SortOrder',
    },
    total=True
)

_Lesson_instructorNotes_OrderByInput = TypedDict(
    '_Lesson_instructorNotes_OrderByInput',
    {
        'instructorNotes': 'SortOrder',
    },
    total=True
)

_Lesson_estimatedCompletionTime_OrderByInput = TypedDict(
    '_Lesson_estimatedCompletionTime_OrderByInput',
    {
        'estimatedCompletionTime': 'SortOrder',
    },
    total=True
)

_Lesson_difficulty_OrderByInput = TypedDict(
    '_Lesson_difficulty_OrderByInput',
    {
        'difficulty': 'SortOrder',
    },
    total=True
)

_Lesson_tags_OrderByInput = TypedDict(
    '_Lesson_tags_OrderByInput',
    {
        'tags': 'SortOrder',
    },
    total=True
)

_Lesson_relatedResources_OrderByInput = TypedDict(
    '_Lesson_relatedResources_OrderByInput',
    {
        'relatedResources': 'SortOrder',
    },
    total=True
)

_Lesson_createdAt_OrderByInput = TypedDict(
    '_Lesson_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Lesson_updatedAt_OrderByInput = TypedDict(
    '_Lesson_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Lesson_deletedAt_OrderByInput = TypedDict(
    '_Lesson_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Lesson_RelevanceInner = TypedDict(
    '_Lesson_RelevanceInner',
    {
        'fields': 'List[LessonScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Lesson_RelevanceOrderByInput = TypedDict(
    '_Lesson_RelevanceOrderByInput',
    {
        '_relevance': '_Lesson_RelevanceInner',
    },
    total=True
)

LessonOrderByInput = Union[
    '_Lesson_id_OrderByInput',
    '_Lesson_moduleId_OrderByInput',
    '_Lesson_title_OrderByInput',
    '_Lesson_description_OrderByInput',
    '_Lesson_durationMinutes_OrderByInput',
    '_Lesson_type_OrderByInput',
    '_Lesson_videoUrl_OrderByInput',
    '_Lesson_transcript_OrderByInput',
    '_Lesson_attachments_OrderByInput',
    '_Lesson_quizId_OrderByInput',
    '_Lesson_requiredPassScore_OrderByInput',
    '_Lesson_order_OrderByInput',
    '_Lesson_thumbnailUrl_OrderByInput',
    '_Lesson_thumbnailBlurDataURL_OrderByInput',
    '_Lesson_learningObjectives_OrderByInput',
    '_Lesson_keyTakeaways_OrderByInput',
    '_Lesson_instructorNotes_OrderByInput',
    '_Lesson_estimatedCompletionTime_OrderByInput',
    '_Lesson_difficulty_OrderByInput',
    '_Lesson_tags_OrderByInput',
    '_Lesson_relatedResources_OrderByInput',
    '_Lesson_createdAt_OrderByInput',
    '_Lesson_updatedAt_OrderByInput',
    '_Lesson_deletedAt_OrderByInput',
    '_Lesson_RelevanceOrderByInput',
]



# recursive Lesson types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

LessonRelationFilter = TypedDict(
    'LessonRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class LessonListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class LessonInclude(TypedDict, total=False):
    """Lesson relational arguments"""
    module: Union[bool, 'ModuleArgsFromLesson']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLesson']


    

class UserIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonRecursive1']
    files: Union[bool, 'FindManyFileArgsFromLessonRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonRecursive1']


class UserIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonRecursive2']
    files: Union[bool, 'FindManyFileArgsFromLessonRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonRecursive2']


class UserIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonRecursive3']
    files: Union[bool, 'FindManyFileArgsFromLessonRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonRecursive3']


class UserIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonRecursive4']
    files: Union[bool, 'FindManyFileArgsFromLessonRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonRecursive4']


class UserIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class UserArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyUserArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive1']


class OrganizationIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive2']


class OrganizationIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive3']


class OrganizationIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromLessonRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonRecursive4']


class OrganizationIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class OrganizationArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyOrganizationArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    invitedBy: Union[bool, 'UserArgsFromLessonRecursive1']


class OrganizationMemberIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    invitedBy: Union[bool, 'UserArgsFromLessonRecursive2']


class OrganizationMemberIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    invitedBy: Union[bool, 'UserArgsFromLessonRecursive3']


class OrganizationMemberIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    invitedBy: Union[bool, 'UserArgsFromLessonRecursive4']


class OrganizationMemberIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class OrganizationMemberArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyOrganizationMemberArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive1']


class PathIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive2']


class PathIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive3']


class PathIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive4']


class PathIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class PathArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyPathArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    instructor: Union[bool, 'UserArgsFromLessonRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive1']


class ModuleIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    instructor: Union[bool, 'UserArgsFromLessonRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive2']


class ModuleIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    instructor: Union[bool, 'UserArgsFromLessonRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive3']


class ModuleIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    instructor: Union[bool, 'UserArgsFromLessonRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonRecursive4']


class ModuleIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class ModuleArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyModuleArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    path: Union[bool, 'PathArgsFromLessonRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonRecursive1']


class PathModuleIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    path: Union[bool, 'PathArgsFromLessonRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonRecursive2']


class PathModuleIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    path: Union[bool, 'PathArgsFromLessonRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonRecursive3']


class PathModuleIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    path: Union[bool, 'PathArgsFromLessonRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonRecursive4']


class PathModuleIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class PathModuleArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyPathModuleArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    module: Union[bool, 'ModuleArgsFromLessonRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive1']


class LessonIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    module: Union[bool, 'ModuleArgsFromLessonRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive2']


class LessonIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    module: Union[bool, 'ModuleArgsFromLessonRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive3']


class LessonIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    module: Union[bool, 'ModuleArgsFromLessonRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonRecursive4']


class LessonIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class LessonArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyLessonArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonRecursive1']
    path: Union[bool, 'PathArgsFromLessonRecursive1']


class EnrollmentIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonRecursive2']
    path: Union[bool, 'PathArgsFromLessonRecursive2']


class EnrollmentIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonRecursive3']
    path: Union[bool, 'PathArgsFromLessonRecursive3']


class EnrollmentIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonRecursive4']
    path: Union[bool, 'PathArgsFromLessonRecursive4']


class EnrollmentIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class EnrollmentArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyEnrollmentArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    lesson: Union[bool, 'LessonArgsFromLessonRecursive1']


class LessonProgressIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    lesson: Union[bool, 'LessonArgsFromLessonRecursive2']


class LessonProgressIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    lesson: Union[bool, 'LessonArgsFromLessonRecursive3']


class LessonProgressIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    lesson: Union[bool, 'LessonArgsFromLessonRecursive4']


class LessonProgressIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class LessonProgressArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyLessonProgressArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonRecursive1']


class CertificateIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonRecursive2']


class CertificateIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonRecursive3']


class CertificateIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonRecursive4']


class CertificateIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class CertificateArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyCertificateArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromLessonRecursive1']


class ProjectIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromLessonRecursive2']


class ProjectIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromLessonRecursive3']


class ProjectIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    owner: Union[bool, 'UserArgsFromLessonRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromLessonRecursive4']


class ProjectIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class ProjectArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyProjectArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive1']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive1']


class ProposalIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive2']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive2']


class ProposalIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive3']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive3']


class ProposalIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive4']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive4']


class ProposalIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class ProposalArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyProposalArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive1']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive1']
    client: Union[bool, 'UserArgsFromLessonRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonRecursive1']


class ContractIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive2']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive2']
    client: Union[bool, 'UserArgsFromLessonRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonRecursive2']


class ContractIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive3']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive3']
    client: Union[bool, 'UserArgsFromLessonRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonRecursive3']


class ContractIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    project: Union[bool, 'ProjectArgsFromLessonRecursive4']
    freelancer: Union[bool, 'UserArgsFromLessonRecursive4']
    client: Union[bool, 'UserArgsFromLessonRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonRecursive4']


class ContractIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class ContractArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyContractArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    contract: Union[bool, 'ContractArgsFromLessonRecursive1']


class DeliveryIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    contract: Union[bool, 'ContractArgsFromLessonRecursive2']


class DeliveryIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    contract: Union[bool, 'ContractArgsFromLessonRecursive3']


class DeliveryIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    contract: Union[bool, 'ContractArgsFromLessonRecursive4']


class DeliveryIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class DeliveryArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyDeliveryArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']


class UserSkillIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']


class UserSkillIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']


class UserSkillIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']


class UserSkillIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class UserSkillArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyUserSkillArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive1']


class DatasetIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive2']


class DatasetIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive3']


class DatasetIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonRecursive4']


class DatasetIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class DatasetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyDatasetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive1']


class DashboardIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive2']


class DashboardIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive3']


class DashboardIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    ownerUser: Union[bool, 'UserArgsFromLessonRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromLessonRecursive4']


class DashboardIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class DashboardArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyDashboardArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive1']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive1']


class DashboardDatasetIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive2']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive2']


class DashboardDatasetIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive3']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive3']


class DashboardDatasetIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive4']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive4']


class DashboardDatasetIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class DashboardDatasetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyDashboardDatasetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive1']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive1']


class WidgetIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive2']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive2']


class WidgetIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive3']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive3']


class WidgetIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive4']
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive4']


class WidgetIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class WidgetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyWidgetArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive1']
    author: Union[bool, 'UserArgsFromLessonRecursive1']


class InsightIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive2']
    author: Union[bool, 'UserArgsFromLessonRecursive2']


class InsightIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive3']
    author: Union[bool, 'UserArgsFromLessonRecursive3']


class InsightIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dashboard: Union[bool, 'DashboardArgsFromLessonRecursive4']
    author: Union[bool, 'UserArgsFromLessonRecursive4']


class InsightIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class InsightArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyInsightArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive1']
    creator: Union[bool, 'UserArgsFromLessonRecursive1']


class MLModelIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive2']
    creator: Union[bool, 'UserArgsFromLessonRecursive2']


class MLModelIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive3']
    creator: Union[bool, 'UserArgsFromLessonRecursive3']


class MLModelIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    dataset: Union[bool, 'DatasetArgsFromLessonRecursive4']
    creator: Union[bool, 'UserArgsFromLessonRecursive4']


class MLModelIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class MLModelArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyMLModelArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']


class TransactionIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']


class TransactionIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']


class TransactionIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']


class TransactionIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class TransactionArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyTransactionArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive1']


class SubscriptionIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive2']


class SubscriptionIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive3']


class SubscriptionIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonRecursive4']


class SubscriptionIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class SubscriptionArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManySubscriptionArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']


class NotificationIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']


class NotificationIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']


class NotificationIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']


class NotificationIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class NotificationArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyNotificationArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive1']


class AuthTokenIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive2']


class AuthTokenIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive3']


class AuthTokenIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    user: Union[bool, 'UserArgsFromLessonRecursive4']


class AuthTokenIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class AuthTokenArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyAuthTokenArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    uploader: Union[bool, 'UserArgsFromLessonRecursive1']


class FileIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    uploader: Union[bool, 'UserArgsFromLessonRecursive2']


class FileIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    uploader: Union[bool, 'UserArgsFromLessonRecursive3']


class FileIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    uploader: Union[bool, 'UserArgsFromLessonRecursive4']


class FileIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class FileArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyFileArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromLesson(TypedDict, total=False):
    """Relational arguments for Lesson"""
    actor: Union[bool, 'UserArgsFromLessonRecursive1']


class AuditLogIncludeFromLessonRecursive1(TypedDict, total=False):
    """Relational arguments for Lesson"""
    actor: Union[bool, 'UserArgsFromLessonRecursive2']


class AuditLogIncludeFromLessonRecursive2(TypedDict, total=False):
    """Relational arguments for Lesson"""
    actor: Union[bool, 'UserArgsFromLessonRecursive3']


class AuditLogIncludeFromLessonRecursive3(TypedDict, total=False):
    """Relational arguments for Lesson"""
    actor: Union[bool, 'UserArgsFromLessonRecursive4']


class AuditLogIncludeFromLessonRecursive4(TypedDict, total=False):
    """Relational arguments for Lesson"""

    

class AuditLogArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    
    

class FindManyAuditLogArgsFromLesson(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromLessonRecursive1(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromLessonRecursive2(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromLessonRecursive3(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromLessonRecursive4(TypedDict, total=False):
    """Arguments for Lesson"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyLessonArgs = FindManyLessonArgsFromLesson
FindFirstLessonArgs = FindManyLessonArgsFromLesson


    

class LessonWhereInput(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    videoUrl: Union[None, _str, 'types.StringFilter']
    transcript: Union[None, _str, 'types.StringFilter']
    attachments: Union[None, 'fields.Json', 'types.JsonFilter']
    quizId: Union[None, _int, 'types.IntFilter']
    requiredPassScore: Union[None, _int, 'types.IntFilter']
    order: Union[_int, 'types.IntFilter']
    thumbnailUrl: Union[None, _str, 'types.StringFilter']
    thumbnailBlurDataURL: Union[None, _str, 'types.StringFilter']
    learningObjectives: 'types.StringListFilter'
    keyTakeaways: 'types.StringListFilter'
    instructorNotes: Union[None, _str, 'types.StringFilter']
    estimatedCompletionTime: Union[None, _int, 'types.IntFilter']
    difficulty: Union[None, _str, 'types.StringFilter']
    tags: 'types.StringListFilter'
    relatedResources: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    module: 'ModuleRelationFilter'
    progresses: 'LessonProgressListRelationFilter'

    # should be noted that AND and NOT should be Union['LessonWhereInputRecursive1', List['LessonWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['LessonWhereInputRecursive1']
    OR: List['LessonWhereInputRecursive1']
    NOT: List['LessonWhereInputRecursive1']


class LessonWhereInputRecursive1(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    videoUrl: Union[None, _str, 'types.StringFilter']
    transcript: Union[None, _str, 'types.StringFilter']
    attachments: Union[None, 'fields.Json', 'types.JsonFilter']
    quizId: Union[None, _int, 'types.IntFilter']
    requiredPassScore: Union[None, _int, 'types.IntFilter']
    order: Union[_int, 'types.IntFilter']
    thumbnailUrl: Union[None, _str, 'types.StringFilter']
    thumbnailBlurDataURL: Union[None, _str, 'types.StringFilter']
    learningObjectives: 'types.StringListFilter'
    keyTakeaways: 'types.StringListFilter'
    instructorNotes: Union[None, _str, 'types.StringFilter']
    estimatedCompletionTime: Union[None, _int, 'types.IntFilter']
    difficulty: Union[None, _str, 'types.StringFilter']
    tags: 'types.StringListFilter'
    relatedResources: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    module: 'ModuleRelationFilter'
    progresses: 'LessonProgressListRelationFilter'

    # should be noted that AND and NOT should be Union['LessonWhereInputRecursive2', List['LessonWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['LessonWhereInputRecursive2']
    OR: List['LessonWhereInputRecursive2']
    NOT: List['LessonWhereInputRecursive2']


class LessonWhereInputRecursive2(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    videoUrl: Union[None, _str, 'types.StringFilter']
    transcript: Union[None, _str, 'types.StringFilter']
    attachments: Union[None, 'fields.Json', 'types.JsonFilter']
    quizId: Union[None, _int, 'types.IntFilter']
    requiredPassScore: Union[None, _int, 'types.IntFilter']
    order: Union[_int, 'types.IntFilter']
    thumbnailUrl: Union[None, _str, 'types.StringFilter']
    thumbnailBlurDataURL: Union[None, _str, 'types.StringFilter']
    learningObjectives: 'types.StringListFilter'
    keyTakeaways: 'types.StringListFilter'
    instructorNotes: Union[None, _str, 'types.StringFilter']
    estimatedCompletionTime: Union[None, _int, 'types.IntFilter']
    difficulty: Union[None, _str, 'types.StringFilter']
    tags: 'types.StringListFilter'
    relatedResources: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    module: 'ModuleRelationFilter'
    progresses: 'LessonProgressListRelationFilter'

    # should be noted that AND and NOT should be Union['LessonWhereInputRecursive3', List['LessonWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['LessonWhereInputRecursive3']
    OR: List['LessonWhereInputRecursive3']
    NOT: List['LessonWhereInputRecursive3']


class LessonWhereInputRecursive3(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    videoUrl: Union[None, _str, 'types.StringFilter']
    transcript: Union[None, _str, 'types.StringFilter']
    attachments: Union[None, 'fields.Json', 'types.JsonFilter']
    quizId: Union[None, _int, 'types.IntFilter']
    requiredPassScore: Union[None, _int, 'types.IntFilter']
    order: Union[_int, 'types.IntFilter']
    thumbnailUrl: Union[None, _str, 'types.StringFilter']
    thumbnailBlurDataURL: Union[None, _str, 'types.StringFilter']
    learningObjectives: 'types.StringListFilter'
    keyTakeaways: 'types.StringListFilter'
    instructorNotes: Union[None, _str, 'types.StringFilter']
    estimatedCompletionTime: Union[None, _int, 'types.IntFilter']
    difficulty: Union[None, _str, 'types.StringFilter']
    tags: 'types.StringListFilter'
    relatedResources: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    module: 'ModuleRelationFilter'
    progresses: 'LessonProgressListRelationFilter'

    # should be noted that AND and NOT should be Union['LessonWhereInputRecursive4', List['LessonWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['LessonWhereInputRecursive4']
    OR: List['LessonWhereInputRecursive4']
    NOT: List['LessonWhereInputRecursive4']


class LessonWhereInputRecursive4(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    moduleId: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    durationMinutes: Union[None, _int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    videoUrl: Union[None, _str, 'types.StringFilter']
    transcript: Union[None, _str, 'types.StringFilter']
    attachments: Union[None, 'fields.Json', 'types.JsonFilter']
    quizId: Union[None, _int, 'types.IntFilter']
    requiredPassScore: Union[None, _int, 'types.IntFilter']
    order: Union[_int, 'types.IntFilter']
    thumbnailUrl: Union[None, _str, 'types.StringFilter']
    thumbnailBlurDataURL: Union[None, _str, 'types.StringFilter']
    learningObjectives: 'types.StringListFilter'
    keyTakeaways: 'types.StringListFilter'
    instructorNotes: Union[None, _str, 'types.StringFilter']
    estimatedCompletionTime: Union[None, _int, 'types.IntFilter']
    difficulty: Union[None, _str, 'types.StringFilter']
    tags: 'types.StringListFilter'
    relatedResources: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    module: 'ModuleRelationFilter'
    progresses: 'LessonProgressListRelationFilter'



# aggregate Lesson types


    

class LessonScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    transcript: Union[_str, 'types.StringWithAggregatesFilter']
    attachments: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    quizId: Union[_int, 'types.IntWithAggregatesFilter']
    requiredPassScore: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    thumbnailUrl: Union[_str, 'types.StringWithAggregatesFilter']
    thumbnailBlurDataURL: Union[_str, 'types.StringWithAggregatesFilter']
    learningObjectives: Union[_str, 'types.StringWithAggregatesFilter']
    keyTakeaways: Union[_str, 'types.StringWithAggregatesFilter']
    instructorNotes: Union[_str, 'types.StringWithAggregatesFilter']
    estimatedCompletionTime: Union[_int, 'types.IntWithAggregatesFilter']
    difficulty: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    relatedResources: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonScalarWhereWithAggregatesInputRecursive1']
    OR: List['LessonScalarWhereWithAggregatesInputRecursive1']
    NOT: List['LessonScalarWhereWithAggregatesInputRecursive1']


class LessonScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    transcript: Union[_str, 'types.StringWithAggregatesFilter']
    attachments: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    quizId: Union[_int, 'types.IntWithAggregatesFilter']
    requiredPassScore: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    thumbnailUrl: Union[_str, 'types.StringWithAggregatesFilter']
    thumbnailBlurDataURL: Union[_str, 'types.StringWithAggregatesFilter']
    learningObjectives: Union[_str, 'types.StringWithAggregatesFilter']
    keyTakeaways: Union[_str, 'types.StringWithAggregatesFilter']
    instructorNotes: Union[_str, 'types.StringWithAggregatesFilter']
    estimatedCompletionTime: Union[_int, 'types.IntWithAggregatesFilter']
    difficulty: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    relatedResources: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonScalarWhereWithAggregatesInputRecursive2']
    OR: List['LessonScalarWhereWithAggregatesInputRecursive2']
    NOT: List['LessonScalarWhereWithAggregatesInputRecursive2']


class LessonScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    transcript: Union[_str, 'types.StringWithAggregatesFilter']
    attachments: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    quizId: Union[_int, 'types.IntWithAggregatesFilter']
    requiredPassScore: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    thumbnailUrl: Union[_str, 'types.StringWithAggregatesFilter']
    thumbnailBlurDataURL: Union[_str, 'types.StringWithAggregatesFilter']
    learningObjectives: Union[_str, 'types.StringWithAggregatesFilter']
    keyTakeaways: Union[_str, 'types.StringWithAggregatesFilter']
    instructorNotes: Union[_str, 'types.StringWithAggregatesFilter']
    estimatedCompletionTime: Union[_int, 'types.IntWithAggregatesFilter']
    difficulty: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    relatedResources: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonScalarWhereWithAggregatesInputRecursive3']
    OR: List['LessonScalarWhereWithAggregatesInputRecursive3']
    NOT: List['LessonScalarWhereWithAggregatesInputRecursive3']


class LessonScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    transcript: Union[_str, 'types.StringWithAggregatesFilter']
    attachments: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    quizId: Union[_int, 'types.IntWithAggregatesFilter']
    requiredPassScore: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    thumbnailUrl: Union[_str, 'types.StringWithAggregatesFilter']
    thumbnailBlurDataURL: Union[_str, 'types.StringWithAggregatesFilter']
    learningObjectives: Union[_str, 'types.StringWithAggregatesFilter']
    keyTakeaways: Union[_str, 'types.StringWithAggregatesFilter']
    instructorNotes: Union[_str, 'types.StringWithAggregatesFilter']
    estimatedCompletionTime: Union[_int, 'types.IntWithAggregatesFilter']
    difficulty: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    relatedResources: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonScalarWhereWithAggregatesInputRecursive4']
    OR: List['LessonScalarWhereWithAggregatesInputRecursive4']
    NOT: List['LessonScalarWhereWithAggregatesInputRecursive4']


class LessonScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Lesson arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    durationMinutes: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    videoUrl: Union[_str, 'types.StringWithAggregatesFilter']
    transcript: Union[_str, 'types.StringWithAggregatesFilter']
    attachments: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    quizId: Union[_int, 'types.IntWithAggregatesFilter']
    requiredPassScore: Union[_int, 'types.IntWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    thumbnailUrl: Union[_str, 'types.StringWithAggregatesFilter']
    thumbnailBlurDataURL: Union[_str, 'types.StringWithAggregatesFilter']
    learningObjectives: Union[_str, 'types.StringWithAggregatesFilter']
    keyTakeaways: Union[_str, 'types.StringWithAggregatesFilter']
    instructorNotes: Union[_str, 'types.StringWithAggregatesFilter']
    estimatedCompletionTime: Union[_int, 'types.IntWithAggregatesFilter']
    difficulty: Union[_str, 'types.StringWithAggregatesFilter']
    tags: Union[_str, 'types.StringWithAggregatesFilter']
    relatedResources: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class LessonGroupByOutput(TypedDict, total=False):
    id: _int
    moduleId: _int
    title: _str
    description: _str
    durationMinutes: _int
    type: _str
    videoUrl: _str
    transcript: _str
    attachments: 'fields.Json'
    quizId: _int
    requiredPassScore: _int
    order: _int
    thumbnailUrl: _str
    thumbnailBlurDataURL: _str
    learningObjectives: List[_str]
    keyTakeaways: List[_str]
    instructorNotes: _str
    estimatedCompletionTime: _int
    difficulty: _str
    tags: List[_str]
    relatedResources: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'LessonSumAggregateOutput'
    _avg: 'LessonAvgAggregateOutput'
    _min: 'LessonMinAggregateOutput'
    _max: 'LessonMaxAggregateOutput'
    _count: 'LessonCountAggregateOutput'


class LessonAvgAggregateOutput(TypedDict, total=False):
    """Lesson output for aggregating averages"""
    id: float
    moduleId: float
    durationMinutes: float
    quizId: float
    requiredPassScore: float
    order: float
    estimatedCompletionTime: float


class LessonSumAggregateOutput(TypedDict, total=False):
    """Lesson output for aggregating sums"""
    id: _int
    moduleId: _int
    durationMinutes: _int
    quizId: _int
    requiredPassScore: _int
    order: _int
    estimatedCompletionTime: _int


class LessonScalarAggregateOutput(TypedDict, total=False):
    """Lesson output including scalar fields"""
    id: _int
    moduleId: _int
    title: _str
    description: _str
    durationMinutes: _int
    type: _str
    videoUrl: _str
    transcript: _str
    attachments: 'fields.Json'
    quizId: _int
    requiredPassScore: _int
    order: _int
    thumbnailUrl: _str
    thumbnailBlurDataURL: _str
    learningObjectives: List[_str]
    keyTakeaways: List[_str]
    instructorNotes: _str
    estimatedCompletionTime: _int
    difficulty: _str
    tags: List[_str]
    relatedResources: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


LessonMinAggregateOutput = LessonScalarAggregateOutput
LessonMaxAggregateOutput = LessonScalarAggregateOutput


class LessonMaxAggregateInput(TypedDict, total=False):
    """Lesson input for aggregating by max"""
    id: bool
    moduleId: bool
    title: bool
    description: bool
    durationMinutes: bool
    type: bool
    videoUrl: bool
    transcript: bool
    attachments: bool
    quizId: bool
    requiredPassScore: bool
    order: bool
    thumbnailUrl: bool
    thumbnailBlurDataURL: bool
    learningObjectives: bool
    keyTakeaways: bool
    instructorNotes: bool
    estimatedCompletionTime: bool
    difficulty: bool
    tags: bool
    relatedResources: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class LessonMinAggregateInput(TypedDict, total=False):
    """Lesson input for aggregating by min"""
    id: bool
    moduleId: bool
    title: bool
    description: bool
    durationMinutes: bool
    type: bool
    videoUrl: bool
    transcript: bool
    attachments: bool
    quizId: bool
    requiredPassScore: bool
    order: bool
    thumbnailUrl: bool
    thumbnailBlurDataURL: bool
    learningObjectives: bool
    keyTakeaways: bool
    instructorNotes: bool
    estimatedCompletionTime: bool
    difficulty: bool
    tags: bool
    relatedResources: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class LessonNumberAggregateInput(TypedDict, total=False):
    """Lesson input for aggregating numbers"""
    id: bool
    moduleId: bool
    durationMinutes: bool
    quizId: bool
    requiredPassScore: bool
    order: bool
    estimatedCompletionTime: bool


LessonAvgAggregateInput = LessonNumberAggregateInput
LessonSumAggregateInput = LessonNumberAggregateInput


LessonCountAggregateInput = TypedDict(
    'LessonCountAggregateInput',
    {
        'id': bool,
        'moduleId': bool,
        'title': bool,
        'description': bool,
        'durationMinutes': bool,
        'type': bool,
        'videoUrl': bool,
        'transcript': bool,
        'attachments': bool,
        'quizId': bool,
        'requiredPassScore': bool,
        'order': bool,
        'thumbnailUrl': bool,
        'thumbnailBlurDataURL': bool,
        'learningObjectives': bool,
        'keyTakeaways': bool,
        'instructorNotes': bool,
        'estimatedCompletionTime': bool,
        'difficulty': bool,
        'tags': bool,
        'relatedResources': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

LessonCountAggregateOutput = TypedDict(
    'LessonCountAggregateOutput',
    {
        'id': int,
        'moduleId': int,
        'title': int,
        'description': int,
        'durationMinutes': int,
        'type': int,
        'videoUrl': int,
        'transcript': int,
        'attachments': int,
        'quizId': int,
        'requiredPassScore': int,
        'order': int,
        'thumbnailUrl': int,
        'thumbnailBlurDataURL': int,
        'learningObjectives': int,
        'keyTakeaways': int,
        'instructorNotes': int,
        'estimatedCompletionTime': int,
        'difficulty': int,
        'tags': int,
        'relatedResources': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


LessonKeys = Literal[
    'id',
    'moduleId',
    'title',
    'description',
    'durationMinutes',
    'type',
    'videoUrl',
    'transcript',
    'attachments',
    'quizId',
    'requiredPassScore',
    'order',
    'thumbnailUrl',
    'thumbnailBlurDataURL',
    'learningObjectives',
    'keyTakeaways',
    'instructorNotes',
    'estimatedCompletionTime',
    'difficulty',
    'tags',
    'relatedResources',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'module',
    'progresses',
]
LessonScalarFieldKeys = Literal[
    'id',
    'moduleId',
    'title',
    'description',
    'durationMinutes',
    'type',
    'videoUrl',
    'transcript',
    'attachments',
    'quizId',
    'requiredPassScore',
    'order',
    'thumbnailUrl',
    'thumbnailBlurDataURL',
    'learningObjectives',
    'keyTakeaways',
    'instructorNotes',
    'estimatedCompletionTime',
    'difficulty',
    'tags',
    'relatedResources',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
LessonScalarFieldKeysT = TypeVar('LessonScalarFieldKeysT', bound=LessonScalarFieldKeys)

LessonRelationalFieldKeys = Literal[
        'module',
        'progresses',
    ]

# Enrollment types

class EnrollmentOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Enrollment create method"""
    id: _int
    userId: _int
    moduleId: Optional[_int]
    pathId: Optional[_int]
    startedAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'
    module: 'ModuleCreateNestedWithoutRelationsInput'
    path: 'PathCreateNestedWithoutRelationsInput'


class EnrollmentCreateInput(EnrollmentOptionalCreateInput):
    """Required arguments to the Enrollment create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class EnrollmentOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Enrollment create method, without relations"""
    id: _int
    userId: _int
    moduleId: Optional[_int]
    pathId: Optional[_int]
    startedAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class EnrollmentCreateWithoutRelationsInput(EnrollmentOptionalCreateWithoutRelationsInput):
    """Required arguments to the Enrollment create method, without relations"""

class EnrollmentConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'EnrollmentCreateWithoutRelationsInput'
    where: 'EnrollmentWhereUniqueInput'

class EnrollmentCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'EnrollmentCreateWithoutRelationsInput'
    connect: 'EnrollmentWhereUniqueInput'
    connect_or_create: 'EnrollmentConnectOrCreateWithoutRelationsInput'


class EnrollmentCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['EnrollmentCreateWithoutRelationsInput', List['EnrollmentCreateWithoutRelationsInput']]
    connect: Union['EnrollmentWhereUniqueInput', List['EnrollmentWhereUniqueInput']]
    connect_or_create: Union['EnrollmentConnectOrCreateWithoutRelationsInput', List['EnrollmentConnectOrCreateWithoutRelationsInput']]

_EnrollmentWhereUnique_id_Input = TypedDict(
    '_EnrollmentWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_EnrollmentCompounduserId_moduleIdKeyInner = TypedDict(
    '_EnrollmentCompounduserId_moduleIdKeyInner',
    {
        'userId': '_int',
        'moduleId': '_int',
    },
    total=True
)

_EnrollmentCompounduserId_moduleIdKey = TypedDict(
    '_EnrollmentCompounduserId_moduleIdKey',
    {
        'userId_moduleId': '_EnrollmentCompounduserId_moduleIdKeyInner',
    },
    total=True
)

EnrollmentWhereUniqueInput = Union[
    '_EnrollmentWhereUnique_id_Input',
    '_EnrollmentCompounduserId_moduleIdKey',
]


class EnrollmentUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    startedAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    progress: Union[AtomicFloatInput, _float]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'
    module: 'ModuleUpdateOneWithoutRelationsInput'
    path: 'PathUpdateOneWithoutRelationsInput'


class EnrollmentUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    startedAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    progress: Union[AtomicFloatInput, _float]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class EnrollmentUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['EnrollmentCreateWithoutRelationsInput']
    connect: List['EnrollmentWhereUniqueInput']
    connect_or_create: List['EnrollmentConnectOrCreateWithoutRelationsInput']
    set: List['EnrollmentWhereUniqueInput']
    disconnect: List['EnrollmentWhereUniqueInput']
    delete: List['EnrollmentWhereUniqueInput']

    # TODO
    # update: List['EnrollmentUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['EnrollmentUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['EnrollmentScalarWhereInput']
    # upsert: List['EnrollmentUpserteWithWhereUniqueWithoutRelationsInput']


class EnrollmentUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'EnrollmentCreateWithoutRelationsInput'
    connect: 'EnrollmentWhereUniqueInput'
    connect_or_create: 'EnrollmentConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'EnrollmentUpdateInput'
    # upsert: 'EnrollmentUpsertWithoutRelationsInput'


class EnrollmentUpsertInput(TypedDict):
    create: 'EnrollmentCreateInput'
    update: 'EnrollmentUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Enrollment_id_OrderByInput = TypedDict(
    '_Enrollment_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Enrollment_userId_OrderByInput = TypedDict(
    '_Enrollment_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Enrollment_moduleId_OrderByInput = TypedDict(
    '_Enrollment_moduleId_OrderByInput',
    {
        'moduleId': 'SortOrder',
    },
    total=True
)

_Enrollment_pathId_OrderByInput = TypedDict(
    '_Enrollment_pathId_OrderByInput',
    {
        'pathId': 'SortOrder',
    },
    total=True
)

_Enrollment_startedAt_OrderByInput = TypedDict(
    '_Enrollment_startedAt_OrderByInput',
    {
        'startedAt': 'SortOrder',
    },
    total=True
)

_Enrollment_completedAt_OrderByInput = TypedDict(
    '_Enrollment_completedAt_OrderByInput',
    {
        'completedAt': 'SortOrder',
    },
    total=True
)

_Enrollment_progress_OrderByInput = TypedDict(
    '_Enrollment_progress_OrderByInput',
    {
        'progress': 'SortOrder',
    },
    total=True
)

_Enrollment_createdAt_OrderByInput = TypedDict(
    '_Enrollment_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Enrollment_updatedAt_OrderByInput = TypedDict(
    '_Enrollment_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Enrollment_deletedAt_OrderByInput = TypedDict(
    '_Enrollment_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Enrollment_RelevanceInner = TypedDict(
    '_Enrollment_RelevanceInner',
    {
        'fields': 'List[EnrollmentScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Enrollment_RelevanceOrderByInput = TypedDict(
    '_Enrollment_RelevanceOrderByInput',
    {
        '_relevance': '_Enrollment_RelevanceInner',
    },
    total=True
)

EnrollmentOrderByInput = Union[
    '_Enrollment_id_OrderByInput',
    '_Enrollment_userId_OrderByInput',
    '_Enrollment_moduleId_OrderByInput',
    '_Enrollment_pathId_OrderByInput',
    '_Enrollment_startedAt_OrderByInput',
    '_Enrollment_completedAt_OrderByInput',
    '_Enrollment_progress_OrderByInput',
    '_Enrollment_createdAt_OrderByInput',
    '_Enrollment_updatedAt_OrderByInput',
    '_Enrollment_deletedAt_OrderByInput',
    '_Enrollment_RelevanceOrderByInput',
]



# recursive Enrollment types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

EnrollmentRelationFilter = TypedDict(
    'EnrollmentRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class EnrollmentListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class EnrollmentInclude(TypedDict, total=False):
    """Enrollment relational arguments"""
    user: Union[bool, 'UserArgsFromEnrollment']
    module: Union[bool, 'ModuleArgsFromEnrollment']
    path: Union[bool, 'PathArgsFromEnrollment']


    

class UserIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromEnrollmentRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromEnrollmentRecursive1']
    files: Union[bool, 'FindManyFileArgsFromEnrollmentRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromEnrollmentRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromEnrollmentRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromEnrollmentRecursive1']


class UserIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromEnrollmentRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromEnrollmentRecursive2']
    files: Union[bool, 'FindManyFileArgsFromEnrollmentRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromEnrollmentRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromEnrollmentRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromEnrollmentRecursive2']


class UserIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromEnrollmentRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromEnrollmentRecursive3']
    files: Union[bool, 'FindManyFileArgsFromEnrollmentRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromEnrollmentRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromEnrollmentRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromEnrollmentRecursive3']


class UserIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromEnrollmentRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromEnrollmentRecursive4']
    files: Union[bool, 'FindManyFileArgsFromEnrollmentRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromEnrollmentRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromEnrollmentRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromEnrollmentRecursive4']


class UserIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class UserArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyUserArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromEnrollmentRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive1']


class OrganizationIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromEnrollmentRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive2']


class OrganizationIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromEnrollmentRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive3']


class OrganizationIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromEnrollmentRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromEnrollmentRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromEnrollmentRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromEnrollmentRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromEnrollmentRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromEnrollmentRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromEnrollmentRecursive4']


class OrganizationIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class OrganizationArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyOrganizationArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    invitedBy: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class OrganizationMemberIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    invitedBy: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class OrganizationMemberIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    invitedBy: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class OrganizationMemberIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    invitedBy: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class OrganizationMemberIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class OrganizationMemberArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyOrganizationMemberArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    modules: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive1']


class PathIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    modules: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive2']


class PathIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    modules: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive3']


class PathIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    modules: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive4']


class PathIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class PathArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyPathArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    instructor: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromEnrollmentRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive1']


class ModuleIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    instructor: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromEnrollmentRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive2']


class ModuleIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    instructor: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromEnrollmentRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive3']


class ModuleIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    instructor: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromEnrollmentRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromEnrollmentRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromEnrollmentRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromEnrollmentRecursive4']


class ModuleIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class ModuleArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyModuleArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    path: Union[bool, 'PathArgsFromEnrollmentRecursive1']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive1']


class PathModuleIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    path: Union[bool, 'PathArgsFromEnrollmentRecursive2']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive2']


class PathModuleIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    path: Union[bool, 'PathArgsFromEnrollmentRecursive3']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive3']


class PathModuleIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    path: Union[bool, 'PathArgsFromEnrollmentRecursive4']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive4']


class PathModuleIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class PathModuleArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyPathModuleArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive1']


class LessonIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive2']


class LessonIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive3']


class LessonIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromEnrollmentRecursive4']


class LessonIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class LessonArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyLessonArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive1']
    path: Union[bool, 'PathArgsFromEnrollmentRecursive1']


class EnrollmentIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive2']
    path: Union[bool, 'PathArgsFromEnrollmentRecursive2']


class EnrollmentIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive3']
    path: Union[bool, 'PathArgsFromEnrollmentRecursive3']


class EnrollmentIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive4']
    path: Union[bool, 'PathArgsFromEnrollmentRecursive4']


class EnrollmentIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class EnrollmentArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyEnrollmentArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    lesson: Union[bool, 'LessonArgsFromEnrollmentRecursive1']


class LessonProgressIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    lesson: Union[bool, 'LessonArgsFromEnrollmentRecursive2']


class LessonProgressIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    lesson: Union[bool, 'LessonArgsFromEnrollmentRecursive3']


class LessonProgressIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    lesson: Union[bool, 'LessonArgsFromEnrollmentRecursive4']


class LessonProgressIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class LessonProgressArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyLessonProgressArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive1']


class CertificateIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive2']


class CertificateIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive3']


class CertificateIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    module: Union[bool, 'ModuleArgsFromEnrollmentRecursive4']


class CertificateIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class CertificateArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyCertificateArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive1']


class ProjectIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive2']


class ProjectIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive3']


class ProjectIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    owner: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromEnrollmentRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromEnrollmentRecursive4']


class ProjectIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class ProjectArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyProjectArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive1']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class ProposalIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive2']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class ProposalIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive3']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class ProposalIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive4']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class ProposalIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class ProposalArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyProposalArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive1']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    client: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromEnrollmentRecursive1']


class ContractIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive2']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    client: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromEnrollmentRecursive2']


class ContractIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive3']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    client: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromEnrollmentRecursive3']


class ContractIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    project: Union[bool, 'ProjectArgsFromEnrollmentRecursive4']
    freelancer: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    client: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromEnrollmentRecursive4']


class ContractIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class ContractArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyContractArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    contract: Union[bool, 'ContractArgsFromEnrollmentRecursive1']


class DeliveryIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    contract: Union[bool, 'ContractArgsFromEnrollmentRecursive2']


class DeliveryIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    contract: Union[bool, 'ContractArgsFromEnrollmentRecursive3']


class DeliveryIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    contract: Union[bool, 'ContractArgsFromEnrollmentRecursive4']


class DeliveryIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class DeliveryArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyDeliveryArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class UserSkillIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class UserSkillIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class UserSkillIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class UserSkillIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class UserSkillArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyUserSkillArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive1']


class DatasetIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive2']


class DatasetIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive3']


class DatasetIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromEnrollmentRecursive4']


class DatasetIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class DatasetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyDatasetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive1']


class DashboardIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive2']


class DashboardIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive3']


class DashboardIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    ownerUser: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromEnrollmentRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromEnrollmentRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromEnrollmentRecursive4']


class DashboardIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class DashboardArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyDashboardArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive1']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive1']


class DashboardDatasetIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive2']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive2']


class DashboardDatasetIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive3']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive3']


class DashboardDatasetIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive4']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive4']


class DashboardDatasetIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class DashboardDatasetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyDashboardDatasetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive1']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive1']


class WidgetIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive2']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive2']


class WidgetIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive3']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive3']


class WidgetIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive4']
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive4']


class WidgetIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class WidgetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyWidgetArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive1']
    author: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class InsightIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive2']
    author: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class InsightIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive3']
    author: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class InsightIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dashboard: Union[bool, 'DashboardArgsFromEnrollmentRecursive4']
    author: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class InsightIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class InsightArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyInsightArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive1']
    creator: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class MLModelIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive2']
    creator: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class MLModelIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive3']
    creator: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class MLModelIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    dataset: Union[bool, 'DatasetArgsFromEnrollmentRecursive4']
    creator: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class MLModelIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class MLModelArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyMLModelArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']


class TransactionIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']


class TransactionIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']


class TransactionIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']


class TransactionIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class TransactionArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyTransactionArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive1']


class SubscriptionIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive2']


class SubscriptionIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive3']


class SubscriptionIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']
    organization: Union[bool, 'OrganizationArgsFromEnrollmentRecursive4']


class SubscriptionIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class SubscriptionArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManySubscriptionArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class NotificationIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class NotificationIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class NotificationIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class NotificationIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class NotificationArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyNotificationArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class AuthTokenIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class AuthTokenIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class AuthTokenIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    user: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class AuthTokenIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class AuthTokenArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyAuthTokenArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    uploader: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class FileIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    uploader: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class FileIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    uploader: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class FileIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    uploader: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class FileIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class FileArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyFileArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromEnrollment(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    actor: Union[bool, 'UserArgsFromEnrollmentRecursive1']


class AuditLogIncludeFromEnrollmentRecursive1(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    actor: Union[bool, 'UserArgsFromEnrollmentRecursive2']


class AuditLogIncludeFromEnrollmentRecursive2(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    actor: Union[bool, 'UserArgsFromEnrollmentRecursive3']


class AuditLogIncludeFromEnrollmentRecursive3(TypedDict, total=False):
    """Relational arguments for Enrollment"""
    actor: Union[bool, 'UserArgsFromEnrollmentRecursive4']


class AuditLogIncludeFromEnrollmentRecursive4(TypedDict, total=False):
    """Relational arguments for Enrollment"""

    

class AuditLogArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    
    

class FindManyAuditLogArgsFromEnrollment(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromEnrollmentRecursive1(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromEnrollmentRecursive2(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromEnrollmentRecursive3(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromEnrollmentRecursive4(TypedDict, total=False):
    """Arguments for Enrollment"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyEnrollmentArgs = FindManyEnrollmentArgsFromEnrollment
FindFirstEnrollmentArgs = FindManyEnrollmentArgsFromEnrollment


    

class EnrollmentWhereInput(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    pathId: Union[None, _int, 'types.IntFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'
    path: 'PathRelationFilter'

    # should be noted that AND and NOT should be Union['EnrollmentWhereInputRecursive1', List['EnrollmentWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['EnrollmentWhereInputRecursive1']
    OR: List['EnrollmentWhereInputRecursive1']
    NOT: List['EnrollmentWhereInputRecursive1']


class EnrollmentWhereInputRecursive1(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    pathId: Union[None, _int, 'types.IntFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'
    path: 'PathRelationFilter'

    # should be noted that AND and NOT should be Union['EnrollmentWhereInputRecursive2', List['EnrollmentWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['EnrollmentWhereInputRecursive2']
    OR: List['EnrollmentWhereInputRecursive2']
    NOT: List['EnrollmentWhereInputRecursive2']


class EnrollmentWhereInputRecursive2(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    pathId: Union[None, _int, 'types.IntFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'
    path: 'PathRelationFilter'

    # should be noted that AND and NOT should be Union['EnrollmentWhereInputRecursive3', List['EnrollmentWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['EnrollmentWhereInputRecursive3']
    OR: List['EnrollmentWhereInputRecursive3']
    NOT: List['EnrollmentWhereInputRecursive3']


class EnrollmentWhereInputRecursive3(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    pathId: Union[None, _int, 'types.IntFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'
    path: 'PathRelationFilter'

    # should be noted that AND and NOT should be Union['EnrollmentWhereInputRecursive4', List['EnrollmentWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['EnrollmentWhereInputRecursive4']
    OR: List['EnrollmentWhereInputRecursive4']
    NOT: List['EnrollmentWhereInputRecursive4']


class EnrollmentWhereInputRecursive4(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    pathId: Union[None, _int, 'types.IntFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'
    path: 'PathRelationFilter'



# aggregate Enrollment types


    

class EnrollmentScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EnrollmentScalarWhereWithAggregatesInputRecursive1']
    OR: List['EnrollmentScalarWhereWithAggregatesInputRecursive1']
    NOT: List['EnrollmentScalarWhereWithAggregatesInputRecursive1']


class EnrollmentScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EnrollmentScalarWhereWithAggregatesInputRecursive2']
    OR: List['EnrollmentScalarWhereWithAggregatesInputRecursive2']
    NOT: List['EnrollmentScalarWhereWithAggregatesInputRecursive2']


class EnrollmentScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EnrollmentScalarWhereWithAggregatesInputRecursive3']
    OR: List['EnrollmentScalarWhereWithAggregatesInputRecursive3']
    NOT: List['EnrollmentScalarWhereWithAggregatesInputRecursive3']


class EnrollmentScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EnrollmentScalarWhereWithAggregatesInputRecursive4']
    OR: List['EnrollmentScalarWhereWithAggregatesInputRecursive4']
    NOT: List['EnrollmentScalarWhereWithAggregatesInputRecursive4']


class EnrollmentScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Enrollment arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    pathId: Union[_int, 'types.IntWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class EnrollmentGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    moduleId: _int
    pathId: _int
    startedAt: datetime.datetime
    completedAt: datetime.datetime
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'EnrollmentSumAggregateOutput'
    _avg: 'EnrollmentAvgAggregateOutput'
    _min: 'EnrollmentMinAggregateOutput'
    _max: 'EnrollmentMaxAggregateOutput'
    _count: 'EnrollmentCountAggregateOutput'


class EnrollmentAvgAggregateOutput(TypedDict, total=False):
    """Enrollment output for aggregating averages"""
    id: float
    userId: float
    moduleId: float
    pathId: float
    progress: float


class EnrollmentSumAggregateOutput(TypedDict, total=False):
    """Enrollment output for aggregating sums"""
    id: _int
    userId: _int
    moduleId: _int
    pathId: _int
    progress: _float


class EnrollmentScalarAggregateOutput(TypedDict, total=False):
    """Enrollment output including scalar fields"""
    id: _int
    userId: _int
    moduleId: _int
    pathId: _int
    startedAt: datetime.datetime
    completedAt: datetime.datetime
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


EnrollmentMinAggregateOutput = EnrollmentScalarAggregateOutput
EnrollmentMaxAggregateOutput = EnrollmentScalarAggregateOutput


class EnrollmentMaxAggregateInput(TypedDict, total=False):
    """Enrollment input for aggregating by max"""
    id: bool
    userId: bool
    moduleId: bool
    pathId: bool
    startedAt: bool
    completedAt: bool
    progress: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class EnrollmentMinAggregateInput(TypedDict, total=False):
    """Enrollment input for aggregating by min"""
    id: bool
    userId: bool
    moduleId: bool
    pathId: bool
    startedAt: bool
    completedAt: bool
    progress: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class EnrollmentNumberAggregateInput(TypedDict, total=False):
    """Enrollment input for aggregating numbers"""
    id: bool
    userId: bool
    moduleId: bool
    pathId: bool
    progress: bool


EnrollmentAvgAggregateInput = EnrollmentNumberAggregateInput
EnrollmentSumAggregateInput = EnrollmentNumberAggregateInput


EnrollmentCountAggregateInput = TypedDict(
    'EnrollmentCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'moduleId': bool,
        'pathId': bool,
        'startedAt': bool,
        'completedAt': bool,
        'progress': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

EnrollmentCountAggregateOutput = TypedDict(
    'EnrollmentCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'moduleId': int,
        'pathId': int,
        'startedAt': int,
        'completedAt': int,
        'progress': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


EnrollmentKeys = Literal[
    'id',
    'userId',
    'moduleId',
    'pathId',
    'startedAt',
    'completedAt',
    'progress',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'user',
    'module',
    'path',
]
EnrollmentScalarFieldKeys = Literal[
    'id',
    'userId',
    'moduleId',
    'pathId',
    'startedAt',
    'completedAt',
    'progress',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
EnrollmentScalarFieldKeysT = TypeVar('EnrollmentScalarFieldKeysT', bound=EnrollmentScalarFieldKeys)

EnrollmentRelationalFieldKeys = Literal[
        'user',
        'module',
        'path',
    ]

# LessonProgress types

class LessonProgressOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the LessonProgress create method"""
    id: _int
    userId: _int
    lessonId: _int
    isCompleted: _bool
    completedAt: Optional[datetime.datetime]
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'
    lesson: 'LessonCreateNestedWithoutRelationsInput'


class LessonProgressCreateInput(LessonProgressOptionalCreateInput):
    """Required arguments to the LessonProgress create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class LessonProgressOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the LessonProgress create method, without relations"""
    id: _int
    userId: _int
    lessonId: _int
    isCompleted: _bool
    completedAt: Optional[datetime.datetime]
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class LessonProgressCreateWithoutRelationsInput(LessonProgressOptionalCreateWithoutRelationsInput):
    """Required arguments to the LessonProgress create method, without relations"""

class LessonProgressConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'LessonProgressCreateWithoutRelationsInput'
    where: 'LessonProgressWhereUniqueInput'

class LessonProgressCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'LessonProgressCreateWithoutRelationsInput'
    connect: 'LessonProgressWhereUniqueInput'
    connect_or_create: 'LessonProgressConnectOrCreateWithoutRelationsInput'


class LessonProgressCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['LessonProgressCreateWithoutRelationsInput', List['LessonProgressCreateWithoutRelationsInput']]
    connect: Union['LessonProgressWhereUniqueInput', List['LessonProgressWhereUniqueInput']]
    connect_or_create: Union['LessonProgressConnectOrCreateWithoutRelationsInput', List['LessonProgressConnectOrCreateWithoutRelationsInput']]

_LessonProgressWhereUnique_id_Input = TypedDict(
    '_LessonProgressWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_LessonProgressCompounduserId_lessonIdKeyInner = TypedDict(
    '_LessonProgressCompounduserId_lessonIdKeyInner',
    {
        'userId': '_int',
        'lessonId': '_int',
    },
    total=True
)

_LessonProgressCompounduserId_lessonIdKey = TypedDict(
    '_LessonProgressCompounduserId_lessonIdKey',
    {
        'userId_lessonId': '_LessonProgressCompounduserId_lessonIdKeyInner',
    },
    total=True
)

LessonProgressWhereUniqueInput = Union[
    '_LessonProgressWhereUnique_id_Input',
    '_LessonProgressCompounduserId_lessonIdKey',
]


class LessonProgressUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    isCompleted: _bool
    completedAt: Optional[datetime.datetime]
    progress: Union[AtomicFloatInput, _float]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'
    lesson: 'LessonUpdateOneWithoutRelationsInput'


class LessonProgressUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    isCompleted: _bool
    completedAt: Optional[datetime.datetime]
    progress: Union[AtomicFloatInput, _float]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class LessonProgressUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['LessonProgressCreateWithoutRelationsInput']
    connect: List['LessonProgressWhereUniqueInput']
    connect_or_create: List['LessonProgressConnectOrCreateWithoutRelationsInput']
    set: List['LessonProgressWhereUniqueInput']
    disconnect: List['LessonProgressWhereUniqueInput']
    delete: List['LessonProgressWhereUniqueInput']

    # TODO
    # update: List['LessonProgressUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['LessonProgressUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['LessonProgressScalarWhereInput']
    # upsert: List['LessonProgressUpserteWithWhereUniqueWithoutRelationsInput']


class LessonProgressUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'LessonProgressCreateWithoutRelationsInput'
    connect: 'LessonProgressWhereUniqueInput'
    connect_or_create: 'LessonProgressConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'LessonProgressUpdateInput'
    # upsert: 'LessonProgressUpsertWithoutRelationsInput'


class LessonProgressUpsertInput(TypedDict):
    create: 'LessonProgressCreateInput'
    update: 'LessonProgressUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_LessonProgress_id_OrderByInput = TypedDict(
    '_LessonProgress_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_LessonProgress_userId_OrderByInput = TypedDict(
    '_LessonProgress_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_LessonProgress_lessonId_OrderByInput = TypedDict(
    '_LessonProgress_lessonId_OrderByInput',
    {
        'lessonId': 'SortOrder',
    },
    total=True
)

_LessonProgress_isCompleted_OrderByInput = TypedDict(
    '_LessonProgress_isCompleted_OrderByInput',
    {
        'isCompleted': 'SortOrder',
    },
    total=True
)

_LessonProgress_completedAt_OrderByInput = TypedDict(
    '_LessonProgress_completedAt_OrderByInput',
    {
        'completedAt': 'SortOrder',
    },
    total=True
)

_LessonProgress_progress_OrderByInput = TypedDict(
    '_LessonProgress_progress_OrderByInput',
    {
        'progress': 'SortOrder',
    },
    total=True
)

_LessonProgress_createdAt_OrderByInput = TypedDict(
    '_LessonProgress_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_LessonProgress_updatedAt_OrderByInput = TypedDict(
    '_LessonProgress_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_LessonProgress_deletedAt_OrderByInput = TypedDict(
    '_LessonProgress_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_LessonProgress_RelevanceInner = TypedDict(
    '_LessonProgress_RelevanceInner',
    {
        'fields': 'List[LessonProgressScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_LessonProgress_RelevanceOrderByInput = TypedDict(
    '_LessonProgress_RelevanceOrderByInput',
    {
        '_relevance': '_LessonProgress_RelevanceInner',
    },
    total=True
)

LessonProgressOrderByInput = Union[
    '_LessonProgress_id_OrderByInput',
    '_LessonProgress_userId_OrderByInput',
    '_LessonProgress_lessonId_OrderByInput',
    '_LessonProgress_isCompleted_OrderByInput',
    '_LessonProgress_completedAt_OrderByInput',
    '_LessonProgress_progress_OrderByInput',
    '_LessonProgress_createdAt_OrderByInput',
    '_LessonProgress_updatedAt_OrderByInput',
    '_LessonProgress_deletedAt_OrderByInput',
    '_LessonProgress_RelevanceOrderByInput',
]



# recursive LessonProgress types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

LessonProgressRelationFilter = TypedDict(
    'LessonProgressRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class LessonProgressListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class LessonProgressInclude(TypedDict, total=False):
    """LessonProgress relational arguments"""
    user: Union[bool, 'UserArgsFromLessonProgress']
    lesson: Union[bool, 'LessonArgsFromLessonProgress']


    

class UserIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonProgressRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonProgressRecursive1']
    files: Union[bool, 'FindManyFileArgsFromLessonProgressRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonProgressRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonProgressRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonProgressRecursive1']


class UserIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonProgressRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonProgressRecursive2']
    files: Union[bool, 'FindManyFileArgsFromLessonProgressRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonProgressRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonProgressRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonProgressRecursive2']


class UserIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonProgressRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonProgressRecursive3']
    files: Union[bool, 'FindManyFileArgsFromLessonProgressRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonProgressRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonProgressRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonProgressRecursive3']


class UserIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromLessonProgressRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromLessonProgressRecursive4']
    files: Union[bool, 'FindManyFileArgsFromLessonProgressRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromLessonProgressRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromLessonProgressRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromLessonProgressRecursive4']


class UserIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class UserArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyUserArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonProgressRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive1']


class OrganizationIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonProgressRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive2']


class OrganizationIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonProgressRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive3']


class OrganizationIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromLessonProgressRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromLessonProgressRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromLessonProgressRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromLessonProgressRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromLessonProgressRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromLessonProgressRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromLessonProgressRecursive4']


class OrganizationIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class OrganizationArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyOrganizationArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    invitedBy: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class OrganizationMemberIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    invitedBy: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class OrganizationMemberIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    invitedBy: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class OrganizationMemberIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    invitedBy: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class OrganizationMemberIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class OrganizationMemberArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyOrganizationMemberArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive1']


class PathIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive2']


class PathIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive3']


class PathIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    modules: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive4']


class PathIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class PathArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyPathArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    instructor: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonProgressRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive1']


class ModuleIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    instructor: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonProgressRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive2']


class ModuleIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    instructor: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonProgressRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive3']


class ModuleIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    instructor: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromLessonProgressRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromLessonProgressRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromLessonProgressRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromLessonProgressRecursive4']


class ModuleIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class ModuleArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyModuleArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    path: Union[bool, 'PathArgsFromLessonProgressRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive1']


class PathModuleIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    path: Union[bool, 'PathArgsFromLessonProgressRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive2']


class PathModuleIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    path: Union[bool, 'PathArgsFromLessonProgressRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive3']


class PathModuleIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    path: Union[bool, 'PathArgsFromLessonProgressRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive4']


class PathModuleIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class PathModuleArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyPathModuleArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive1']


class LessonIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive2']


class LessonIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive3']


class LessonIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromLessonProgressRecursive4']


class LessonIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class LessonArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyLessonArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive1']
    path: Union[bool, 'PathArgsFromLessonProgressRecursive1']


class EnrollmentIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive2']
    path: Union[bool, 'PathArgsFromLessonProgressRecursive2']


class EnrollmentIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive3']
    path: Union[bool, 'PathArgsFromLessonProgressRecursive3']


class EnrollmentIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive4']
    path: Union[bool, 'PathArgsFromLessonProgressRecursive4']


class EnrollmentIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class EnrollmentArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyEnrollmentArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    lesson: Union[bool, 'LessonArgsFromLessonProgressRecursive1']


class LessonProgressIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    lesson: Union[bool, 'LessonArgsFromLessonProgressRecursive2']


class LessonProgressIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    lesson: Union[bool, 'LessonArgsFromLessonProgressRecursive3']


class LessonProgressIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    lesson: Union[bool, 'LessonArgsFromLessonProgressRecursive4']


class LessonProgressIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class LessonProgressArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyLessonProgressArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive1']


class CertificateIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive2']


class CertificateIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive3']


class CertificateIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    module: Union[bool, 'ModuleArgsFromLessonProgressRecursive4']


class CertificateIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class CertificateArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyCertificateArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive1']


class ProjectIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive2']


class ProjectIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive3']


class ProjectIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    owner: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromLessonProgressRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromLessonProgressRecursive4']


class ProjectIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class ProjectArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyProjectArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive1']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class ProposalIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive2']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class ProposalIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive3']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class ProposalIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive4']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class ProposalIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class ProposalArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyProposalArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive1']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    client: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonProgressRecursive1']


class ContractIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive2']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    client: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonProgressRecursive2']


class ContractIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive3']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    client: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonProgressRecursive3']


class ContractIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    project: Union[bool, 'ProjectArgsFromLessonProgressRecursive4']
    freelancer: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    client: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromLessonProgressRecursive4']


class ContractIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class ContractArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyContractArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    contract: Union[bool, 'ContractArgsFromLessonProgressRecursive1']


class DeliveryIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    contract: Union[bool, 'ContractArgsFromLessonProgressRecursive2']


class DeliveryIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    contract: Union[bool, 'ContractArgsFromLessonProgressRecursive3']


class DeliveryIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    contract: Union[bool, 'ContractArgsFromLessonProgressRecursive4']


class DeliveryIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class DeliveryArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyDeliveryArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class UserSkillIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class UserSkillIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class UserSkillIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class UserSkillIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class UserSkillArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyUserSkillArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive1']


class DatasetIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive2']


class DatasetIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive3']


class DatasetIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromLessonProgressRecursive4']


class DatasetIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class DatasetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyDatasetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive1']


class DashboardIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive2']


class DashboardIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive3']


class DashboardIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    ownerUser: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromLessonProgressRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromLessonProgressRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromLessonProgressRecursive4']


class DashboardIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class DashboardArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyDashboardArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive1']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive1']


class DashboardDatasetIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive2']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive2']


class DashboardDatasetIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive3']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive3']


class DashboardDatasetIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive4']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive4']


class DashboardDatasetIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class DashboardDatasetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyDashboardDatasetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive1']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive1']


class WidgetIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive2']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive2']


class WidgetIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive3']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive3']


class WidgetIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive4']
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive4']


class WidgetIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class WidgetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyWidgetArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive1']
    author: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class InsightIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive2']
    author: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class InsightIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive3']
    author: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class InsightIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dashboard: Union[bool, 'DashboardArgsFromLessonProgressRecursive4']
    author: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class InsightIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class InsightArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyInsightArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive1']
    creator: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class MLModelIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive2']
    creator: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class MLModelIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive3']
    creator: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class MLModelIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    dataset: Union[bool, 'DatasetArgsFromLessonProgressRecursive4']
    creator: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class MLModelIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class MLModelArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyMLModelArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']


class TransactionIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']


class TransactionIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']


class TransactionIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']


class TransactionIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class TransactionArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyTransactionArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive1']


class SubscriptionIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive2']


class SubscriptionIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive3']


class SubscriptionIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']
    organization: Union[bool, 'OrganizationArgsFromLessonProgressRecursive4']


class SubscriptionIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class SubscriptionArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManySubscriptionArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class NotificationIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class NotificationIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class NotificationIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class NotificationIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class NotificationArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyNotificationArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class AuthTokenIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class AuthTokenIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class AuthTokenIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    user: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class AuthTokenIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class AuthTokenArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyAuthTokenArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    uploader: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class FileIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    uploader: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class FileIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    uploader: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class FileIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    uploader: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class FileIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class FileArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyFileArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromLessonProgress(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    actor: Union[bool, 'UserArgsFromLessonProgressRecursive1']


class AuditLogIncludeFromLessonProgressRecursive1(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    actor: Union[bool, 'UserArgsFromLessonProgressRecursive2']


class AuditLogIncludeFromLessonProgressRecursive2(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    actor: Union[bool, 'UserArgsFromLessonProgressRecursive3']


class AuditLogIncludeFromLessonProgressRecursive3(TypedDict, total=False):
    """Relational arguments for LessonProgress"""
    actor: Union[bool, 'UserArgsFromLessonProgressRecursive4']


class AuditLogIncludeFromLessonProgressRecursive4(TypedDict, total=False):
    """Relational arguments for LessonProgress"""

    

class AuditLogArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    
    

class FindManyAuditLogArgsFromLessonProgress(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromLessonProgressRecursive1(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromLessonProgressRecursive2(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromLessonProgressRecursive3(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromLessonProgressRecursive4(TypedDict, total=False):
    """Arguments for LessonProgress"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyLessonProgressArgs = FindManyLessonProgressArgsFromLessonProgress
FindFirstLessonProgressArgs = FindManyLessonProgressArgsFromLessonProgress


    

class LessonProgressWhereInput(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    lessonId: Union[_int, 'types.IntFilter']
    isCompleted: Union[_bool, 'types.BooleanFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    lesson: 'LessonRelationFilter'

    # should be noted that AND and NOT should be Union['LessonProgressWhereInputRecursive1', List['LessonProgressWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['LessonProgressWhereInputRecursive1']
    OR: List['LessonProgressWhereInputRecursive1']
    NOT: List['LessonProgressWhereInputRecursive1']


class LessonProgressWhereInputRecursive1(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    lessonId: Union[_int, 'types.IntFilter']
    isCompleted: Union[_bool, 'types.BooleanFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    lesson: 'LessonRelationFilter'

    # should be noted that AND and NOT should be Union['LessonProgressWhereInputRecursive2', List['LessonProgressWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['LessonProgressWhereInputRecursive2']
    OR: List['LessonProgressWhereInputRecursive2']
    NOT: List['LessonProgressWhereInputRecursive2']


class LessonProgressWhereInputRecursive2(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    lessonId: Union[_int, 'types.IntFilter']
    isCompleted: Union[_bool, 'types.BooleanFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    lesson: 'LessonRelationFilter'

    # should be noted that AND and NOT should be Union['LessonProgressWhereInputRecursive3', List['LessonProgressWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['LessonProgressWhereInputRecursive3']
    OR: List['LessonProgressWhereInputRecursive3']
    NOT: List['LessonProgressWhereInputRecursive3']


class LessonProgressWhereInputRecursive3(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    lessonId: Union[_int, 'types.IntFilter']
    isCompleted: Union[_bool, 'types.BooleanFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    lesson: 'LessonRelationFilter'

    # should be noted that AND and NOT should be Union['LessonProgressWhereInputRecursive4', List['LessonProgressWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['LessonProgressWhereInputRecursive4']
    OR: List['LessonProgressWhereInputRecursive4']
    NOT: List['LessonProgressWhereInputRecursive4']


class LessonProgressWhereInputRecursive4(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    lessonId: Union[_int, 'types.IntFilter']
    isCompleted: Union[_bool, 'types.BooleanFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    progress: Union[_float, 'types.FloatFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    lesson: 'LessonRelationFilter'



# aggregate LessonProgress types


    

class LessonProgressScalarWhereWithAggregatesInput(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    lessonId: Union[_int, 'types.IntWithAggregatesFilter']
    isCompleted: Union[_bool, 'types.BooleanWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonProgressScalarWhereWithAggregatesInputRecursive1']
    OR: List['LessonProgressScalarWhereWithAggregatesInputRecursive1']
    NOT: List['LessonProgressScalarWhereWithAggregatesInputRecursive1']


class LessonProgressScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    lessonId: Union[_int, 'types.IntWithAggregatesFilter']
    isCompleted: Union[_bool, 'types.BooleanWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonProgressScalarWhereWithAggregatesInputRecursive2']
    OR: List['LessonProgressScalarWhereWithAggregatesInputRecursive2']
    NOT: List['LessonProgressScalarWhereWithAggregatesInputRecursive2']


class LessonProgressScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    lessonId: Union[_int, 'types.IntWithAggregatesFilter']
    isCompleted: Union[_bool, 'types.BooleanWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonProgressScalarWhereWithAggregatesInputRecursive3']
    OR: List['LessonProgressScalarWhereWithAggregatesInputRecursive3']
    NOT: List['LessonProgressScalarWhereWithAggregatesInputRecursive3']


class LessonProgressScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    lessonId: Union[_int, 'types.IntWithAggregatesFilter']
    isCompleted: Union[_bool, 'types.BooleanWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['LessonProgressScalarWhereWithAggregatesInputRecursive4']
    OR: List['LessonProgressScalarWhereWithAggregatesInputRecursive4']
    NOT: List['LessonProgressScalarWhereWithAggregatesInputRecursive4']


class LessonProgressScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """LessonProgress arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    lessonId: Union[_int, 'types.IntWithAggregatesFilter']
    isCompleted: Union[_bool, 'types.BooleanWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    progress: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class LessonProgressGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    lessonId: _int
    isCompleted: _bool
    completedAt: datetime.datetime
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'LessonProgressSumAggregateOutput'
    _avg: 'LessonProgressAvgAggregateOutput'
    _min: 'LessonProgressMinAggregateOutput'
    _max: 'LessonProgressMaxAggregateOutput'
    _count: 'LessonProgressCountAggregateOutput'


class LessonProgressAvgAggregateOutput(TypedDict, total=False):
    """LessonProgress output for aggregating averages"""
    id: float
    userId: float
    lessonId: float
    progress: float


class LessonProgressSumAggregateOutput(TypedDict, total=False):
    """LessonProgress output for aggregating sums"""
    id: _int
    userId: _int
    lessonId: _int
    progress: _float


class LessonProgressScalarAggregateOutput(TypedDict, total=False):
    """LessonProgress output including scalar fields"""
    id: _int
    userId: _int
    lessonId: _int
    isCompleted: _bool
    completedAt: datetime.datetime
    progress: _float
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


LessonProgressMinAggregateOutput = LessonProgressScalarAggregateOutput
LessonProgressMaxAggregateOutput = LessonProgressScalarAggregateOutput


class LessonProgressMaxAggregateInput(TypedDict, total=False):
    """LessonProgress input for aggregating by max"""
    id: bool
    userId: bool
    lessonId: bool
    isCompleted: bool
    completedAt: bool
    progress: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class LessonProgressMinAggregateInput(TypedDict, total=False):
    """LessonProgress input for aggregating by min"""
    id: bool
    userId: bool
    lessonId: bool
    isCompleted: bool
    completedAt: bool
    progress: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class LessonProgressNumberAggregateInput(TypedDict, total=False):
    """LessonProgress input for aggregating numbers"""
    id: bool
    userId: bool
    lessonId: bool
    progress: bool


LessonProgressAvgAggregateInput = LessonProgressNumberAggregateInput
LessonProgressSumAggregateInput = LessonProgressNumberAggregateInput


LessonProgressCountAggregateInput = TypedDict(
    'LessonProgressCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'lessonId': bool,
        'isCompleted': bool,
        'completedAt': bool,
        'progress': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

LessonProgressCountAggregateOutput = TypedDict(
    'LessonProgressCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'lessonId': int,
        'isCompleted': int,
        'completedAt': int,
        'progress': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


LessonProgressKeys = Literal[
    'id',
    'userId',
    'lessonId',
    'isCompleted',
    'completedAt',
    'progress',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'user',
    'lesson',
]
LessonProgressScalarFieldKeys = Literal[
    'id',
    'userId',
    'lessonId',
    'isCompleted',
    'completedAt',
    'progress',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
LessonProgressScalarFieldKeysT = TypeVar('LessonProgressScalarFieldKeysT', bound=LessonProgressScalarFieldKeys)

LessonProgressRelationalFieldKeys = Literal[
        'user',
        'lesson',
    ]

# Certificate types

class CertificateOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Certificate create method"""
    id: _int
    userId: _int
    moduleId: Optional[_int]
    issuedAt: datetime.datetime
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'
    module: 'ModuleCreateNestedWithoutRelationsInput'


class CertificateCreateInput(CertificateOptionalCreateInput):
    """Required arguments to the Certificate create method"""
    fileUrl: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class CertificateOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Certificate create method, without relations"""
    id: _int
    userId: _int
    moduleId: Optional[_int]
    issuedAt: datetime.datetime
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class CertificateCreateWithoutRelationsInput(CertificateOptionalCreateWithoutRelationsInput):
    """Required arguments to the Certificate create method, without relations"""
    fileUrl: _str

class CertificateConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'CertificateCreateWithoutRelationsInput'
    where: 'CertificateWhereUniqueInput'

class CertificateCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'CertificateCreateWithoutRelationsInput'
    connect: 'CertificateWhereUniqueInput'
    connect_or_create: 'CertificateConnectOrCreateWithoutRelationsInput'


class CertificateCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['CertificateCreateWithoutRelationsInput', List['CertificateCreateWithoutRelationsInput']]
    connect: Union['CertificateWhereUniqueInput', List['CertificateWhereUniqueInput']]
    connect_or_create: Union['CertificateConnectOrCreateWithoutRelationsInput', List['CertificateConnectOrCreateWithoutRelationsInput']]

_CertificateWhereUnique_id_Input = TypedDict(
    '_CertificateWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

CertificateWhereUniqueInput = _CertificateWhereUnique_id_Input


class CertificateUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    fileUrl: _str
    issuedAt: datetime.datetime
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'
    module: 'ModuleUpdateOneWithoutRelationsInput'


class CertificateUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    fileUrl: _str
    issuedAt: datetime.datetime
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class CertificateUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['CertificateCreateWithoutRelationsInput']
    connect: List['CertificateWhereUniqueInput']
    connect_or_create: List['CertificateConnectOrCreateWithoutRelationsInput']
    set: List['CertificateWhereUniqueInput']
    disconnect: List['CertificateWhereUniqueInput']
    delete: List['CertificateWhereUniqueInput']

    # TODO
    # update: List['CertificateUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['CertificateUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['CertificateScalarWhereInput']
    # upsert: List['CertificateUpserteWithWhereUniqueWithoutRelationsInput']


class CertificateUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'CertificateCreateWithoutRelationsInput'
    connect: 'CertificateWhereUniqueInput'
    connect_or_create: 'CertificateConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'CertificateUpdateInput'
    # upsert: 'CertificateUpsertWithoutRelationsInput'


class CertificateUpsertInput(TypedDict):
    create: 'CertificateCreateInput'
    update: 'CertificateUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Certificate_id_OrderByInput = TypedDict(
    '_Certificate_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Certificate_userId_OrderByInput = TypedDict(
    '_Certificate_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Certificate_moduleId_OrderByInput = TypedDict(
    '_Certificate_moduleId_OrderByInput',
    {
        'moduleId': 'SortOrder',
    },
    total=True
)

_Certificate_fileUrl_OrderByInput = TypedDict(
    '_Certificate_fileUrl_OrderByInput',
    {
        'fileUrl': 'SortOrder',
    },
    total=True
)

_Certificate_issuedAt_OrderByInput = TypedDict(
    '_Certificate_issuedAt_OrderByInput',
    {
        'issuedAt': 'SortOrder',
    },
    total=True
)

_Certificate_metadata_OrderByInput = TypedDict(
    '_Certificate_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Certificate_createdAt_OrderByInput = TypedDict(
    '_Certificate_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Certificate_deletedAt_OrderByInput = TypedDict(
    '_Certificate_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Certificate_RelevanceInner = TypedDict(
    '_Certificate_RelevanceInner',
    {
        'fields': 'List[CertificateScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Certificate_RelevanceOrderByInput = TypedDict(
    '_Certificate_RelevanceOrderByInput',
    {
        '_relevance': '_Certificate_RelevanceInner',
    },
    total=True
)

CertificateOrderByInput = Union[
    '_Certificate_id_OrderByInput',
    '_Certificate_userId_OrderByInput',
    '_Certificate_moduleId_OrderByInput',
    '_Certificate_fileUrl_OrderByInput',
    '_Certificate_issuedAt_OrderByInput',
    '_Certificate_metadata_OrderByInput',
    '_Certificate_createdAt_OrderByInput',
    '_Certificate_deletedAt_OrderByInput',
    '_Certificate_RelevanceOrderByInput',
]



# recursive Certificate types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

CertificateRelationFilter = TypedDict(
    'CertificateRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class CertificateListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class CertificateInclude(TypedDict, total=False):
    """Certificate relational arguments"""
    user: Union[bool, 'UserArgsFromCertificate']
    module: Union[bool, 'ModuleArgsFromCertificate']


    

class UserIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromCertificateRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromCertificateRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromCertificateRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromCertificateRecursive1']
    files: Union[bool, 'FindManyFileArgsFromCertificateRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromCertificateRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCertificateRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromCertificateRecursive1']


class UserIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromCertificateRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromCertificateRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromCertificateRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromCertificateRecursive2']
    files: Union[bool, 'FindManyFileArgsFromCertificateRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromCertificateRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCertificateRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromCertificateRecursive2']


class UserIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromCertificateRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromCertificateRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromCertificateRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromCertificateRecursive3']
    files: Union[bool, 'FindManyFileArgsFromCertificateRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromCertificateRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCertificateRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromCertificateRecursive3']


class UserIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromCertificateRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromCertificateRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromCertificateRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromCertificateRecursive4']
    files: Union[bool, 'FindManyFileArgsFromCertificateRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromCertificateRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromCertificateRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromCertificateRecursive4']


class UserIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class UserArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyUserArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromCertificateRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive1']


class OrganizationIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromCertificateRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive2']


class OrganizationIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromCertificateRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive3']


class OrganizationIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromCertificateRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromCertificateRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromCertificateRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromCertificateRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromCertificateRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromCertificateRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromCertificateRecursive4']


class OrganizationIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class OrganizationArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyOrganizationArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    invitedBy: Union[bool, 'UserArgsFromCertificateRecursive1']


class OrganizationMemberIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    invitedBy: Union[bool, 'UserArgsFromCertificateRecursive2']


class OrganizationMemberIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    invitedBy: Union[bool, 'UserArgsFromCertificateRecursive3']


class OrganizationMemberIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    invitedBy: Union[bool, 'UserArgsFromCertificateRecursive4']


class OrganizationMemberIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class OrganizationMemberArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyOrganizationMemberArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    modules: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive1']


class PathIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    modules: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive2']


class PathIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    modules: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive3']


class PathIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    modules: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive4']


class PathIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class PathArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyPathArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    instructor: Union[bool, 'UserArgsFromCertificateRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromCertificateRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive1']


class ModuleIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    instructor: Union[bool, 'UserArgsFromCertificateRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromCertificateRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive2']


class ModuleIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    instructor: Union[bool, 'UserArgsFromCertificateRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromCertificateRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive3']


class ModuleIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    instructor: Union[bool, 'UserArgsFromCertificateRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromCertificateRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromCertificateRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromCertificateRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromCertificateRecursive4']


class ModuleIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class ModuleArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyModuleArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    path: Union[bool, 'PathArgsFromCertificateRecursive1']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive1']


class PathModuleIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    path: Union[bool, 'PathArgsFromCertificateRecursive2']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive2']


class PathModuleIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    path: Union[bool, 'PathArgsFromCertificateRecursive3']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive3']


class PathModuleIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    path: Union[bool, 'PathArgsFromCertificateRecursive4']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive4']


class PathModuleIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class PathModuleArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyPathModuleArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    module: Union[bool, 'ModuleArgsFromCertificateRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive1']


class LessonIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    module: Union[bool, 'ModuleArgsFromCertificateRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive2']


class LessonIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    module: Union[bool, 'ModuleArgsFromCertificateRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive3']


class LessonIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    module: Union[bool, 'ModuleArgsFromCertificateRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromCertificateRecursive4']


class LessonIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class LessonArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyLessonArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive1']
    path: Union[bool, 'PathArgsFromCertificateRecursive1']


class EnrollmentIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive2']
    path: Union[bool, 'PathArgsFromCertificateRecursive2']


class EnrollmentIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive3']
    path: Union[bool, 'PathArgsFromCertificateRecursive3']


class EnrollmentIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive4']
    path: Union[bool, 'PathArgsFromCertificateRecursive4']


class EnrollmentIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class EnrollmentArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyEnrollmentArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    lesson: Union[bool, 'LessonArgsFromCertificateRecursive1']


class LessonProgressIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    lesson: Union[bool, 'LessonArgsFromCertificateRecursive2']


class LessonProgressIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    lesson: Union[bool, 'LessonArgsFromCertificateRecursive3']


class LessonProgressIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    lesson: Union[bool, 'LessonArgsFromCertificateRecursive4']


class LessonProgressIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class LessonProgressArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyLessonProgressArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive1']


class CertificateIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive2']


class CertificateIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive3']


class CertificateIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    module: Union[bool, 'ModuleArgsFromCertificateRecursive4']


class CertificateIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class CertificateArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyCertificateArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive1']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromCertificateRecursive1']


class ProjectIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive2']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromCertificateRecursive2']


class ProjectIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive3']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromCertificateRecursive3']


class ProjectIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    owner: Union[bool, 'UserArgsFromCertificateRecursive4']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromCertificateRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromCertificateRecursive4']


class ProjectIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class ProjectArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyProjectArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive1']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive1']


class ProposalIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive2']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive2']


class ProposalIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive3']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive3']


class ProposalIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive4']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive4']


class ProposalIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class ProposalArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyProposalArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive1']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive1']
    client: Union[bool, 'UserArgsFromCertificateRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromCertificateRecursive1']


class ContractIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive2']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive2']
    client: Union[bool, 'UserArgsFromCertificateRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromCertificateRecursive2']


class ContractIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive3']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive3']
    client: Union[bool, 'UserArgsFromCertificateRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromCertificateRecursive3']


class ContractIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    project: Union[bool, 'ProjectArgsFromCertificateRecursive4']
    freelancer: Union[bool, 'UserArgsFromCertificateRecursive4']
    client: Union[bool, 'UserArgsFromCertificateRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromCertificateRecursive4']


class ContractIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class ContractArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyContractArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    contract: Union[bool, 'ContractArgsFromCertificateRecursive1']


class DeliveryIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    contract: Union[bool, 'ContractArgsFromCertificateRecursive2']


class DeliveryIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    contract: Union[bool, 'ContractArgsFromCertificateRecursive3']


class DeliveryIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    contract: Union[bool, 'ContractArgsFromCertificateRecursive4']


class DeliveryIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class DeliveryArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyDeliveryArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']


class UserSkillIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']


class UserSkillIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']


class UserSkillIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']


class UserSkillIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class UserSkillArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyUserSkillArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive1']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive1']


class DatasetIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive2']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive2']


class DatasetIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive3']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive3']


class DatasetIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive4']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromCertificateRecursive4']


class DatasetIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class DatasetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyDatasetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive1']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive1']


class DashboardIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive2']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive2']


class DashboardIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive3']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive3']


class DashboardIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    ownerUser: Union[bool, 'UserArgsFromCertificateRecursive4']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromCertificateRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromCertificateRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromCertificateRecursive4']


class DashboardIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class DashboardArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyDashboardArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive1']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive1']


class DashboardDatasetIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive2']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive2']


class DashboardDatasetIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive3']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive3']


class DashboardDatasetIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive4']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive4']


class DashboardDatasetIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class DashboardDatasetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyDashboardDatasetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive1']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive1']


class WidgetIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive2']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive2']


class WidgetIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive3']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive3']


class WidgetIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive4']
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive4']


class WidgetIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class WidgetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyWidgetArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive1']
    author: Union[bool, 'UserArgsFromCertificateRecursive1']


class InsightIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive2']
    author: Union[bool, 'UserArgsFromCertificateRecursive2']


class InsightIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive3']
    author: Union[bool, 'UserArgsFromCertificateRecursive3']


class InsightIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dashboard: Union[bool, 'DashboardArgsFromCertificateRecursive4']
    author: Union[bool, 'UserArgsFromCertificateRecursive4']


class InsightIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class InsightArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyInsightArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive1']
    creator: Union[bool, 'UserArgsFromCertificateRecursive1']


class MLModelIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive2']
    creator: Union[bool, 'UserArgsFromCertificateRecursive2']


class MLModelIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive3']
    creator: Union[bool, 'UserArgsFromCertificateRecursive3']


class MLModelIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    dataset: Union[bool, 'DatasetArgsFromCertificateRecursive4']
    creator: Union[bool, 'UserArgsFromCertificateRecursive4']


class MLModelIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class MLModelArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyMLModelArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']


class TransactionIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']


class TransactionIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']


class TransactionIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']


class TransactionIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class TransactionArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyTransactionArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive1']


class SubscriptionIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive2']


class SubscriptionIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive3']


class SubscriptionIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']
    organization: Union[bool, 'OrganizationArgsFromCertificateRecursive4']


class SubscriptionIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class SubscriptionArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManySubscriptionArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']


class NotificationIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']


class NotificationIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']


class NotificationIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']


class NotificationIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class NotificationArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyNotificationArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive1']


class AuthTokenIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive2']


class AuthTokenIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive3']


class AuthTokenIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    user: Union[bool, 'UserArgsFromCertificateRecursive4']


class AuthTokenIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class AuthTokenArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyAuthTokenArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    uploader: Union[bool, 'UserArgsFromCertificateRecursive1']


class FileIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    uploader: Union[bool, 'UserArgsFromCertificateRecursive2']


class FileIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    uploader: Union[bool, 'UserArgsFromCertificateRecursive3']


class FileIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    uploader: Union[bool, 'UserArgsFromCertificateRecursive4']


class FileIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class FileArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyFileArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromCertificate(TypedDict, total=False):
    """Relational arguments for Certificate"""
    actor: Union[bool, 'UserArgsFromCertificateRecursive1']


class AuditLogIncludeFromCertificateRecursive1(TypedDict, total=False):
    """Relational arguments for Certificate"""
    actor: Union[bool, 'UserArgsFromCertificateRecursive2']


class AuditLogIncludeFromCertificateRecursive2(TypedDict, total=False):
    """Relational arguments for Certificate"""
    actor: Union[bool, 'UserArgsFromCertificateRecursive3']


class AuditLogIncludeFromCertificateRecursive3(TypedDict, total=False):
    """Relational arguments for Certificate"""
    actor: Union[bool, 'UserArgsFromCertificateRecursive4']


class AuditLogIncludeFromCertificateRecursive4(TypedDict, total=False):
    """Relational arguments for Certificate"""

    

class AuditLogArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    
    

class FindManyAuditLogArgsFromCertificate(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromCertificateRecursive1(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromCertificateRecursive2(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromCertificateRecursive3(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromCertificateRecursive4(TypedDict, total=False):
    """Arguments for Certificate"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyCertificateArgs = FindManyCertificateArgsFromCertificate
FindFirstCertificateArgs = FindManyCertificateArgsFromCertificate


    

class CertificateWhereInput(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    fileUrl: Union[_str, 'types.StringFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['CertificateWhereInputRecursive1', List['CertificateWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['CertificateWhereInputRecursive1']
    OR: List['CertificateWhereInputRecursive1']
    NOT: List['CertificateWhereInputRecursive1']


class CertificateWhereInputRecursive1(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    fileUrl: Union[_str, 'types.StringFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['CertificateWhereInputRecursive2', List['CertificateWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['CertificateWhereInputRecursive2']
    OR: List['CertificateWhereInputRecursive2']
    NOT: List['CertificateWhereInputRecursive2']


class CertificateWhereInputRecursive2(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    fileUrl: Union[_str, 'types.StringFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['CertificateWhereInputRecursive3', List['CertificateWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['CertificateWhereInputRecursive3']
    OR: List['CertificateWhereInputRecursive3']
    NOT: List['CertificateWhereInputRecursive3']


class CertificateWhereInputRecursive3(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    fileUrl: Union[_str, 'types.StringFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'

    # should be noted that AND and NOT should be Union['CertificateWhereInputRecursive4', List['CertificateWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['CertificateWhereInputRecursive4']
    OR: List['CertificateWhereInputRecursive4']
    NOT: List['CertificateWhereInputRecursive4']


class CertificateWhereInputRecursive4(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    moduleId: Union[None, _int, 'types.IntFilter']
    fileUrl: Union[_str, 'types.StringFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    module: 'ModuleRelationFilter'



# aggregate Certificate types


    

class CertificateScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    fileUrl: Union[_str, 'types.StringWithAggregatesFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['CertificateScalarWhereWithAggregatesInputRecursive1']
    OR: List['CertificateScalarWhereWithAggregatesInputRecursive1']
    NOT: List['CertificateScalarWhereWithAggregatesInputRecursive1']


class CertificateScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    fileUrl: Union[_str, 'types.StringWithAggregatesFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['CertificateScalarWhereWithAggregatesInputRecursive2']
    OR: List['CertificateScalarWhereWithAggregatesInputRecursive2']
    NOT: List['CertificateScalarWhereWithAggregatesInputRecursive2']


class CertificateScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    fileUrl: Union[_str, 'types.StringWithAggregatesFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['CertificateScalarWhereWithAggregatesInputRecursive3']
    OR: List['CertificateScalarWhereWithAggregatesInputRecursive3']
    NOT: List['CertificateScalarWhereWithAggregatesInputRecursive3']


class CertificateScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    fileUrl: Union[_str, 'types.StringWithAggregatesFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['CertificateScalarWhereWithAggregatesInputRecursive4']
    OR: List['CertificateScalarWhereWithAggregatesInputRecursive4']
    NOT: List['CertificateScalarWhereWithAggregatesInputRecursive4']


class CertificateScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Certificate arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    moduleId: Union[_int, 'types.IntWithAggregatesFilter']
    fileUrl: Union[_str, 'types.StringWithAggregatesFilter']
    issuedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class CertificateGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    moduleId: _int
    fileUrl: _str
    issuedAt: datetime.datetime
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'CertificateSumAggregateOutput'
    _avg: 'CertificateAvgAggregateOutput'
    _min: 'CertificateMinAggregateOutput'
    _max: 'CertificateMaxAggregateOutput'
    _count: 'CertificateCountAggregateOutput'


class CertificateAvgAggregateOutput(TypedDict, total=False):
    """Certificate output for aggregating averages"""
    id: float
    userId: float
    moduleId: float


class CertificateSumAggregateOutput(TypedDict, total=False):
    """Certificate output for aggregating sums"""
    id: _int
    userId: _int
    moduleId: _int


class CertificateScalarAggregateOutput(TypedDict, total=False):
    """Certificate output including scalar fields"""
    id: _int
    userId: _int
    moduleId: _int
    fileUrl: _str
    issuedAt: datetime.datetime
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    deletedAt: datetime.datetime


CertificateMinAggregateOutput = CertificateScalarAggregateOutput
CertificateMaxAggregateOutput = CertificateScalarAggregateOutput


class CertificateMaxAggregateInput(TypedDict, total=False):
    """Certificate input for aggregating by max"""
    id: bool
    userId: bool
    moduleId: bool
    fileUrl: bool
    issuedAt: bool
    metadata: bool
    createdAt: bool
    deletedAt: bool


class CertificateMinAggregateInput(TypedDict, total=False):
    """Certificate input for aggregating by min"""
    id: bool
    userId: bool
    moduleId: bool
    fileUrl: bool
    issuedAt: bool
    metadata: bool
    createdAt: bool
    deletedAt: bool


class CertificateNumberAggregateInput(TypedDict, total=False):
    """Certificate input for aggregating numbers"""
    id: bool
    userId: bool
    moduleId: bool


CertificateAvgAggregateInput = CertificateNumberAggregateInput
CertificateSumAggregateInput = CertificateNumberAggregateInput


CertificateCountAggregateInput = TypedDict(
    'CertificateCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'moduleId': bool,
        'fileUrl': bool,
        'issuedAt': bool,
        'metadata': bool,
        'createdAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

CertificateCountAggregateOutput = TypedDict(
    'CertificateCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'moduleId': int,
        'fileUrl': int,
        'issuedAt': int,
        'metadata': int,
        'createdAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


CertificateKeys = Literal[
    'id',
    'userId',
    'moduleId',
    'fileUrl',
    'issuedAt',
    'metadata',
    'createdAt',
    'deletedAt',
    'user',
    'module',
]
CertificateScalarFieldKeys = Literal[
    'id',
    'userId',
    'moduleId',
    'fileUrl',
    'issuedAt',
    'metadata',
    'createdAt',
    'deletedAt',
]
CertificateScalarFieldKeysT = TypeVar('CertificateScalarFieldKeysT', bound=CertificateScalarFieldKeys)

CertificateRelationalFieldKeys = Literal[
        'user',
        'module',
    ]

# Project types

class ProjectOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Project create method"""
    id: _int
    description: Optional[_str]
    ownerId: Optional[_int]
    owner: 'UserCreateNestedWithoutRelationsInput'
    organizationId: Optional[_int]
    organization: 'OrganizationCreateNestedWithoutRelationsInput'
    skills: List[_str]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    proposals: 'ProposalCreateManyNestedWithoutRelationsInput'
    contracts: 'ContractCreateManyNestedWithoutRelationsInput'


class ProjectCreateInput(ProjectOptionalCreateInput):
    """Required arguments to the Project create method"""
    title: _str
    slug: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ProjectOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Project create method, without relations"""
    id: _int
    description: Optional[_str]
    ownerId: Optional[_int]
    organizationId: Optional[_int]
    skills: List[_str]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ProjectCreateWithoutRelationsInput(ProjectOptionalCreateWithoutRelationsInput):
    """Required arguments to the Project create method, without relations"""
    title: _str
    slug: _str

class ProjectConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ProjectCreateWithoutRelationsInput'
    where: 'ProjectWhereUniqueInput'

class ProjectCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ProjectCreateWithoutRelationsInput'
    connect: 'ProjectWhereUniqueInput'
    connect_or_create: 'ProjectConnectOrCreateWithoutRelationsInput'


class ProjectCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ProjectCreateWithoutRelationsInput', List['ProjectCreateWithoutRelationsInput']]
    connect: Union['ProjectWhereUniqueInput', List['ProjectWhereUniqueInput']]
    connect_or_create: Union['ProjectConnectOrCreateWithoutRelationsInput', List['ProjectConnectOrCreateWithoutRelationsInput']]

_ProjectWhereUnique_id_Input = TypedDict(
    '_ProjectWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_ProjectWhereUnique_slug_Input = TypedDict(
    '_ProjectWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

ProjectWhereUniqueInput = Union[
    '_ProjectWhereUnique_id_Input',
    '_ProjectWhereUnique_slug_Input',
]


class ProjectUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    owner: 'UserUpdateOneWithoutRelationsInput'
    organization: 'OrganizationUpdateOneWithoutRelationsInput'
    skills: 'types.StringListUpdate'
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    proposals: 'ProposalUpdateManyWithoutRelationsInput'
    contracts: 'ContractUpdateManyWithoutRelationsInput'


class ProjectUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    skills: 'types.StringListUpdate'
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ProjectUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ProjectCreateWithoutRelationsInput']
    connect: List['ProjectWhereUniqueInput']
    connect_or_create: List['ProjectConnectOrCreateWithoutRelationsInput']
    set: List['ProjectWhereUniqueInput']
    disconnect: List['ProjectWhereUniqueInput']
    delete: List['ProjectWhereUniqueInput']

    # TODO
    # update: List['ProjectUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ProjectUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ProjectScalarWhereInput']
    # upsert: List['ProjectUpserteWithWhereUniqueWithoutRelationsInput']


class ProjectUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ProjectCreateWithoutRelationsInput'
    connect: 'ProjectWhereUniqueInput'
    connect_or_create: 'ProjectConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ProjectUpdateInput'
    # upsert: 'ProjectUpsertWithoutRelationsInput'


class ProjectUpsertInput(TypedDict):
    create: 'ProjectCreateInput'
    update: 'ProjectUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Project_id_OrderByInput = TypedDict(
    '_Project_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Project_title_OrderByInput = TypedDict(
    '_Project_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Project_slug_OrderByInput = TypedDict(
    '_Project_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Project_description_OrderByInput = TypedDict(
    '_Project_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Project_ownerId_OrderByInput = TypedDict(
    '_Project_ownerId_OrderByInput',
    {
        'ownerId': 'SortOrder',
    },
    total=True
)

_Project_organizationId_OrderByInput = TypedDict(
    '_Project_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_Project_skills_OrderByInput = TypedDict(
    '_Project_skills_OrderByInput',
    {
        'skills': 'SortOrder',
    },
    total=True
)

_Project_status_OrderByInput = TypedDict(
    '_Project_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Project_createdAt_OrderByInput = TypedDict(
    '_Project_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Project_updatedAt_OrderByInput = TypedDict(
    '_Project_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Project_deletedAt_OrderByInput = TypedDict(
    '_Project_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Project_RelevanceInner = TypedDict(
    '_Project_RelevanceInner',
    {
        'fields': 'List[ProjectScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Project_RelevanceOrderByInput = TypedDict(
    '_Project_RelevanceOrderByInput',
    {
        '_relevance': '_Project_RelevanceInner',
    },
    total=True
)

ProjectOrderByInput = Union[
    '_Project_id_OrderByInput',
    '_Project_title_OrderByInput',
    '_Project_slug_OrderByInput',
    '_Project_description_OrderByInput',
    '_Project_ownerId_OrderByInput',
    '_Project_organizationId_OrderByInput',
    '_Project_skills_OrderByInput',
    '_Project_status_OrderByInput',
    '_Project_createdAt_OrderByInput',
    '_Project_updatedAt_OrderByInput',
    '_Project_deletedAt_OrderByInput',
    '_Project_RelevanceOrderByInput',
]



# recursive Project types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ProjectRelationFilter = TypedDict(
    'ProjectRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ProjectListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ProjectInclude(TypedDict, total=False):
    """Project relational arguments"""
    owner: Union[bool, 'UserArgsFromProject']
    organization: Union[bool, 'OrganizationArgsFromProject']
    proposals: Union[bool, 'FindManyProposalArgsFromProject']
    contracts: Union[bool, 'FindManyContractArgsFromProject']


    

class UserIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProjectRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProjectRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProjectRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromProjectRecursive1']
    files: Union[bool, 'FindManyFileArgsFromProjectRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProjectRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProjectRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProjectRecursive1']


class UserIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProjectRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProjectRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProjectRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromProjectRecursive2']
    files: Union[bool, 'FindManyFileArgsFromProjectRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProjectRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProjectRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProjectRecursive2']


class UserIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProjectRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProjectRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProjectRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromProjectRecursive3']
    files: Union[bool, 'FindManyFileArgsFromProjectRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProjectRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProjectRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProjectRecursive3']


class UserIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProjectRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProjectRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProjectRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromProjectRecursive4']
    files: Union[bool, 'FindManyFileArgsFromProjectRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProjectRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProjectRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProjectRecursive4']


class UserIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class UserArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyUserArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProjectRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive1']


class OrganizationIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProjectRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive2']


class OrganizationIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProjectRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive3']


class OrganizationIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProjectRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProjectRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromProjectRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProjectRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromProjectRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromProjectRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProjectRecursive4']


class OrganizationIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class OrganizationArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyOrganizationArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    invitedBy: Union[bool, 'UserArgsFromProjectRecursive1']


class OrganizationMemberIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    invitedBy: Union[bool, 'UserArgsFromProjectRecursive2']


class OrganizationMemberIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    invitedBy: Union[bool, 'UserArgsFromProjectRecursive3']


class OrganizationMemberIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    invitedBy: Union[bool, 'UserArgsFromProjectRecursive4']


class OrganizationMemberIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class OrganizationMemberArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyOrganizationMemberArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive1']


class PathIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive2']


class PathIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive3']


class PathIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive4']


class PathIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class PathArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyPathArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    instructor: Union[bool, 'UserArgsFromProjectRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromProjectRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive1']


class ModuleIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    instructor: Union[bool, 'UserArgsFromProjectRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromProjectRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive2']


class ModuleIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    instructor: Union[bool, 'UserArgsFromProjectRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromProjectRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive3']


class ModuleIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    instructor: Union[bool, 'UserArgsFromProjectRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromProjectRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromProjectRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProjectRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProjectRecursive4']


class ModuleIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class ModuleArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyModuleArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    path: Union[bool, 'PathArgsFromProjectRecursive1']
    module: Union[bool, 'ModuleArgsFromProjectRecursive1']


class PathModuleIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    path: Union[bool, 'PathArgsFromProjectRecursive2']
    module: Union[bool, 'ModuleArgsFromProjectRecursive2']


class PathModuleIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    path: Union[bool, 'PathArgsFromProjectRecursive3']
    module: Union[bool, 'ModuleArgsFromProjectRecursive3']


class PathModuleIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    path: Union[bool, 'PathArgsFromProjectRecursive4']
    module: Union[bool, 'ModuleArgsFromProjectRecursive4']


class PathModuleIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class PathModuleArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyPathModuleArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    module: Union[bool, 'ModuleArgsFromProjectRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive1']


class LessonIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    module: Union[bool, 'ModuleArgsFromProjectRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive2']


class LessonIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    module: Union[bool, 'ModuleArgsFromProjectRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive3']


class LessonIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    module: Union[bool, 'ModuleArgsFromProjectRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProjectRecursive4']


class LessonIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class LessonArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyLessonArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    module: Union[bool, 'ModuleArgsFromProjectRecursive1']
    path: Union[bool, 'PathArgsFromProjectRecursive1']


class EnrollmentIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    module: Union[bool, 'ModuleArgsFromProjectRecursive2']
    path: Union[bool, 'PathArgsFromProjectRecursive2']


class EnrollmentIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    module: Union[bool, 'ModuleArgsFromProjectRecursive3']
    path: Union[bool, 'PathArgsFromProjectRecursive3']


class EnrollmentIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    module: Union[bool, 'ModuleArgsFromProjectRecursive4']
    path: Union[bool, 'PathArgsFromProjectRecursive4']


class EnrollmentIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class EnrollmentArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyEnrollmentArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    lesson: Union[bool, 'LessonArgsFromProjectRecursive1']


class LessonProgressIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    lesson: Union[bool, 'LessonArgsFromProjectRecursive2']


class LessonProgressIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    lesson: Union[bool, 'LessonArgsFromProjectRecursive3']


class LessonProgressIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    lesson: Union[bool, 'LessonArgsFromProjectRecursive4']


class LessonProgressIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class LessonProgressArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyLessonProgressArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    module: Union[bool, 'ModuleArgsFromProjectRecursive1']


class CertificateIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    module: Union[bool, 'ModuleArgsFromProjectRecursive2']


class CertificateIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    module: Union[bool, 'ModuleArgsFromProjectRecursive3']


class CertificateIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    module: Union[bool, 'ModuleArgsFromProjectRecursive4']


class CertificateIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class CertificateArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyCertificateArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromProjectRecursive1']


class ProjectIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromProjectRecursive2']


class ProjectIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromProjectRecursive3']


class ProjectIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    owner: Union[bool, 'UserArgsFromProjectRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromProjectRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromProjectRecursive4']


class ProjectIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class ProjectArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyProjectArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive1']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive1']


class ProposalIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive2']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive2']


class ProposalIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive3']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive3']


class ProposalIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive4']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive4']


class ProposalIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class ProposalArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyProposalArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive1']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive1']
    client: Union[bool, 'UserArgsFromProjectRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProjectRecursive1']


class ContractIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive2']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive2']
    client: Union[bool, 'UserArgsFromProjectRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProjectRecursive2']


class ContractIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive3']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive3']
    client: Union[bool, 'UserArgsFromProjectRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProjectRecursive3']


class ContractIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    project: Union[bool, 'ProjectArgsFromProjectRecursive4']
    freelancer: Union[bool, 'UserArgsFromProjectRecursive4']
    client: Union[bool, 'UserArgsFromProjectRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProjectRecursive4']


class ContractIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class ContractArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyContractArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    contract: Union[bool, 'ContractArgsFromProjectRecursive1']


class DeliveryIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    contract: Union[bool, 'ContractArgsFromProjectRecursive2']


class DeliveryIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    contract: Union[bool, 'ContractArgsFromProjectRecursive3']


class DeliveryIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    contract: Union[bool, 'ContractArgsFromProjectRecursive4']


class DeliveryIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class DeliveryArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyDeliveryArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']


class UserSkillIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']


class UserSkillIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']


class UserSkillIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']


class UserSkillIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class UserSkillArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyUserSkillArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive1']


class DatasetIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive2']


class DatasetIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive3']


class DatasetIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProjectRecursive4']


class DatasetIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class DatasetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyDatasetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive1']


class DashboardIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive2']


class DashboardIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive3']


class DashboardIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    ownerUser: Union[bool, 'UserArgsFromProjectRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromProjectRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProjectRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromProjectRecursive4']


class DashboardIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class DashboardArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyDashboardArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive1']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive1']


class DashboardDatasetIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive2']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive2']


class DashboardDatasetIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive3']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive3']


class DashboardDatasetIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive4']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive4']


class DashboardDatasetIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class DashboardDatasetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyDashboardDatasetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive1']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive1']


class WidgetIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive2']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive2']


class WidgetIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive3']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive3']


class WidgetIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive4']
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive4']


class WidgetIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class WidgetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyWidgetArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive1']
    author: Union[bool, 'UserArgsFromProjectRecursive1']


class InsightIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive2']
    author: Union[bool, 'UserArgsFromProjectRecursive2']


class InsightIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive3']
    author: Union[bool, 'UserArgsFromProjectRecursive3']


class InsightIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    dashboard: Union[bool, 'DashboardArgsFromProjectRecursive4']
    author: Union[bool, 'UserArgsFromProjectRecursive4']


class InsightIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class InsightArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyInsightArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive1']
    creator: Union[bool, 'UserArgsFromProjectRecursive1']


class MLModelIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive2']
    creator: Union[bool, 'UserArgsFromProjectRecursive2']


class MLModelIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive3']
    creator: Union[bool, 'UserArgsFromProjectRecursive3']


class MLModelIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    dataset: Union[bool, 'DatasetArgsFromProjectRecursive4']
    creator: Union[bool, 'UserArgsFromProjectRecursive4']


class MLModelIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class MLModelArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyMLModelArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']


class TransactionIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']


class TransactionIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']


class TransactionIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']


class TransactionIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class TransactionArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyTransactionArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive1']


class SubscriptionIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive2']


class SubscriptionIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive3']


class SubscriptionIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProjectRecursive4']


class SubscriptionIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class SubscriptionArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManySubscriptionArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']


class NotificationIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']


class NotificationIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']


class NotificationIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']


class NotificationIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class NotificationArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyNotificationArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive1']


class AuthTokenIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive2']


class AuthTokenIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive3']


class AuthTokenIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    user: Union[bool, 'UserArgsFromProjectRecursive4']


class AuthTokenIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class AuthTokenArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyAuthTokenArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    uploader: Union[bool, 'UserArgsFromProjectRecursive1']


class FileIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    uploader: Union[bool, 'UserArgsFromProjectRecursive2']


class FileIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    uploader: Union[bool, 'UserArgsFromProjectRecursive3']


class FileIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    uploader: Union[bool, 'UserArgsFromProjectRecursive4']


class FileIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class FileArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyFileArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromProject(TypedDict, total=False):
    """Relational arguments for Project"""
    actor: Union[bool, 'UserArgsFromProjectRecursive1']


class AuditLogIncludeFromProjectRecursive1(TypedDict, total=False):
    """Relational arguments for Project"""
    actor: Union[bool, 'UserArgsFromProjectRecursive2']


class AuditLogIncludeFromProjectRecursive2(TypedDict, total=False):
    """Relational arguments for Project"""
    actor: Union[bool, 'UserArgsFromProjectRecursive3']


class AuditLogIncludeFromProjectRecursive3(TypedDict, total=False):
    """Relational arguments for Project"""
    actor: Union[bool, 'UserArgsFromProjectRecursive4']


class AuditLogIncludeFromProjectRecursive4(TypedDict, total=False):
    """Relational arguments for Project"""

    

class AuditLogArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    
    

class FindManyAuditLogArgsFromProject(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromProjectRecursive1(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromProjectRecursive2(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromProjectRecursive3(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromProjectRecursive4(TypedDict, total=False):
    """Arguments for Project"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyProjectArgs = FindManyProjectArgsFromProject
FindFirstProjectArgs = FindManyProjectArgsFromProject


    

class ProjectWhereInput(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    organizationId: Union[None, _int, 'types.IntFilter']
    organization: 'OrganizationRelationFilter'
    skills: 'types.StringListFilter'
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    proposals: 'ProposalListRelationFilter'
    contracts: 'ContractListRelationFilter'

    # should be noted that AND and NOT should be Union['ProjectWhereInputRecursive1', List['ProjectWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ProjectWhereInputRecursive1']
    OR: List['ProjectWhereInputRecursive1']
    NOT: List['ProjectWhereInputRecursive1']


class ProjectWhereInputRecursive1(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    organizationId: Union[None, _int, 'types.IntFilter']
    organization: 'OrganizationRelationFilter'
    skills: 'types.StringListFilter'
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    proposals: 'ProposalListRelationFilter'
    contracts: 'ContractListRelationFilter'

    # should be noted that AND and NOT should be Union['ProjectWhereInputRecursive2', List['ProjectWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ProjectWhereInputRecursive2']
    OR: List['ProjectWhereInputRecursive2']
    NOT: List['ProjectWhereInputRecursive2']


class ProjectWhereInputRecursive2(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    organizationId: Union[None, _int, 'types.IntFilter']
    organization: 'OrganizationRelationFilter'
    skills: 'types.StringListFilter'
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    proposals: 'ProposalListRelationFilter'
    contracts: 'ContractListRelationFilter'

    # should be noted that AND and NOT should be Union['ProjectWhereInputRecursive3', List['ProjectWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ProjectWhereInputRecursive3']
    OR: List['ProjectWhereInputRecursive3']
    NOT: List['ProjectWhereInputRecursive3']


class ProjectWhereInputRecursive3(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    organizationId: Union[None, _int, 'types.IntFilter']
    organization: 'OrganizationRelationFilter'
    skills: 'types.StringListFilter'
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    proposals: 'ProposalListRelationFilter'
    contracts: 'ContractListRelationFilter'

    # should be noted that AND and NOT should be Union['ProjectWhereInputRecursive4', List['ProjectWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ProjectWhereInputRecursive4']
    OR: List['ProjectWhereInputRecursive4']
    NOT: List['ProjectWhereInputRecursive4']


class ProjectWhereInputRecursive4(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    owner: 'UserRelationFilter'
    organizationId: Union[None, _int, 'types.IntFilter']
    organization: 'OrganizationRelationFilter'
    skills: 'types.StringListFilter'
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    proposals: 'ProposalListRelationFilter'
    contracts: 'ContractListRelationFilter'



# aggregate Project types


    

class ProjectScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProjectScalarWhereWithAggregatesInputRecursive1']
    OR: List['ProjectScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ProjectScalarWhereWithAggregatesInputRecursive1']


class ProjectScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProjectScalarWhereWithAggregatesInputRecursive2']
    OR: List['ProjectScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ProjectScalarWhereWithAggregatesInputRecursive2']


class ProjectScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProjectScalarWhereWithAggregatesInputRecursive3']
    OR: List['ProjectScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ProjectScalarWhereWithAggregatesInputRecursive3']


class ProjectScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProjectScalarWhereWithAggregatesInputRecursive4']
    OR: List['ProjectScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ProjectScalarWhereWithAggregatesInputRecursive4']


class ProjectScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Project arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    skills: Union[_str, 'types.StringWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ProjectGroupByOutput(TypedDict, total=False):
    id: _int
    title: _str
    slug: _str
    description: _str
    ownerId: _int
    organizationId: _int
    skills: List[_str]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'ProjectSumAggregateOutput'
    _avg: 'ProjectAvgAggregateOutput'
    _min: 'ProjectMinAggregateOutput'
    _max: 'ProjectMaxAggregateOutput'
    _count: 'ProjectCountAggregateOutput'


class ProjectAvgAggregateOutput(TypedDict, total=False):
    """Project output for aggregating averages"""
    id: float
    ownerId: float
    organizationId: float


class ProjectSumAggregateOutput(TypedDict, total=False):
    """Project output for aggregating sums"""
    id: _int
    ownerId: _int
    organizationId: _int


class ProjectScalarAggregateOutput(TypedDict, total=False):
    """Project output including scalar fields"""
    id: _int
    title: _str
    slug: _str
    description: _str
    ownerId: _int
    organizationId: _int
    skills: List[_str]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


ProjectMinAggregateOutput = ProjectScalarAggregateOutput
ProjectMaxAggregateOutput = ProjectScalarAggregateOutput


class ProjectMaxAggregateInput(TypedDict, total=False):
    """Project input for aggregating by max"""
    id: bool
    title: bool
    slug: bool
    description: bool
    ownerId: bool
    organizationId: bool
    skills: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ProjectMinAggregateInput(TypedDict, total=False):
    """Project input for aggregating by min"""
    id: bool
    title: bool
    slug: bool
    description: bool
    ownerId: bool
    organizationId: bool
    skills: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ProjectNumberAggregateInput(TypedDict, total=False):
    """Project input for aggregating numbers"""
    id: bool
    ownerId: bool
    organizationId: bool


ProjectAvgAggregateInput = ProjectNumberAggregateInput
ProjectSumAggregateInput = ProjectNumberAggregateInput


ProjectCountAggregateInput = TypedDict(
    'ProjectCountAggregateInput',
    {
        'id': bool,
        'title': bool,
        'slug': bool,
        'description': bool,
        'ownerId': bool,
        'organizationId': bool,
        'skills': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

ProjectCountAggregateOutput = TypedDict(
    'ProjectCountAggregateOutput',
    {
        'id': int,
        'title': int,
        'slug': int,
        'description': int,
        'ownerId': int,
        'organizationId': int,
        'skills': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


ProjectKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'ownerId',
    'owner',
    'organizationId',
    'organization',
    'skills',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'proposals',
    'contracts',
]
ProjectScalarFieldKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'ownerId',
    'organizationId',
    'skills',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
ProjectScalarFieldKeysT = TypeVar('ProjectScalarFieldKeysT', bound=ProjectScalarFieldKeys)

ProjectRelationalFieldKeys = Literal[
        'owner',
        'organization',
        'proposals',
        'contracts',
    ]

# Proposal types

class ProposalOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Proposal create method"""
    id: _int
    projectId: _int
    freelancerId: Optional[_int]
    message: Optional[_str]
    amountCents: Optional[_int]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    project: 'ProjectCreateNestedWithoutRelationsInput'
    freelancer: 'UserCreateNestedWithoutRelationsInput'


class ProposalCreateInput(ProposalOptionalCreateInput):
    """Required arguments to the Proposal create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ProposalOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Proposal create method, without relations"""
    id: _int
    projectId: _int
    freelancerId: Optional[_int]
    message: Optional[_str]
    amountCents: Optional[_int]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ProposalCreateWithoutRelationsInput(ProposalOptionalCreateWithoutRelationsInput):
    """Required arguments to the Proposal create method, without relations"""

class ProposalConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ProposalCreateWithoutRelationsInput'
    where: 'ProposalWhereUniqueInput'

class ProposalCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ProposalCreateWithoutRelationsInput'
    connect: 'ProposalWhereUniqueInput'
    connect_or_create: 'ProposalConnectOrCreateWithoutRelationsInput'


class ProposalCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ProposalCreateWithoutRelationsInput', List['ProposalCreateWithoutRelationsInput']]
    connect: Union['ProposalWhereUniqueInput', List['ProposalWhereUniqueInput']]
    connect_or_create: Union['ProposalConnectOrCreateWithoutRelationsInput', List['ProposalConnectOrCreateWithoutRelationsInput']]

_ProposalWhereUnique_id_Input = TypedDict(
    '_ProposalWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

ProposalWhereUniqueInput = _ProposalWhereUnique_id_Input


class ProposalUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    message: Optional[_str]
    amountCents: Optional[Union[AtomicIntInput, _int]]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    project: 'ProjectUpdateOneWithoutRelationsInput'
    freelancer: 'UserUpdateOneWithoutRelationsInput'


class ProposalUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    message: Optional[_str]
    amountCents: Optional[Union[AtomicIntInput, _int]]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ProposalUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ProposalCreateWithoutRelationsInput']
    connect: List['ProposalWhereUniqueInput']
    connect_or_create: List['ProposalConnectOrCreateWithoutRelationsInput']
    set: List['ProposalWhereUniqueInput']
    disconnect: List['ProposalWhereUniqueInput']
    delete: List['ProposalWhereUniqueInput']

    # TODO
    # update: List['ProposalUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ProposalUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ProposalScalarWhereInput']
    # upsert: List['ProposalUpserteWithWhereUniqueWithoutRelationsInput']


class ProposalUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ProposalCreateWithoutRelationsInput'
    connect: 'ProposalWhereUniqueInput'
    connect_or_create: 'ProposalConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ProposalUpdateInput'
    # upsert: 'ProposalUpsertWithoutRelationsInput'


class ProposalUpsertInput(TypedDict):
    create: 'ProposalCreateInput'
    update: 'ProposalUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Proposal_id_OrderByInput = TypedDict(
    '_Proposal_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Proposal_projectId_OrderByInput = TypedDict(
    '_Proposal_projectId_OrderByInput',
    {
        'projectId': 'SortOrder',
    },
    total=True
)

_Proposal_freelancerId_OrderByInput = TypedDict(
    '_Proposal_freelancerId_OrderByInput',
    {
        'freelancerId': 'SortOrder',
    },
    total=True
)

_Proposal_message_OrderByInput = TypedDict(
    '_Proposal_message_OrderByInput',
    {
        'message': 'SortOrder',
    },
    total=True
)

_Proposal_amountCents_OrderByInput = TypedDict(
    '_Proposal_amountCents_OrderByInput',
    {
        'amountCents': 'SortOrder',
    },
    total=True
)

_Proposal_status_OrderByInput = TypedDict(
    '_Proposal_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Proposal_createdAt_OrderByInput = TypedDict(
    '_Proposal_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Proposal_updatedAt_OrderByInput = TypedDict(
    '_Proposal_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Proposal_deletedAt_OrderByInput = TypedDict(
    '_Proposal_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Proposal_RelevanceInner = TypedDict(
    '_Proposal_RelevanceInner',
    {
        'fields': 'List[ProposalScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Proposal_RelevanceOrderByInput = TypedDict(
    '_Proposal_RelevanceOrderByInput',
    {
        '_relevance': '_Proposal_RelevanceInner',
    },
    total=True
)

ProposalOrderByInput = Union[
    '_Proposal_id_OrderByInput',
    '_Proposal_projectId_OrderByInput',
    '_Proposal_freelancerId_OrderByInput',
    '_Proposal_message_OrderByInput',
    '_Proposal_amountCents_OrderByInput',
    '_Proposal_status_OrderByInput',
    '_Proposal_createdAt_OrderByInput',
    '_Proposal_updatedAt_OrderByInput',
    '_Proposal_deletedAt_OrderByInput',
    '_Proposal_RelevanceOrderByInput',
]



# recursive Proposal types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ProposalRelationFilter = TypedDict(
    'ProposalRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ProposalListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ProposalInclude(TypedDict, total=False):
    """Proposal relational arguments"""
    project: Union[bool, 'ProjectArgsFromProposal']
    freelancer: Union[bool, 'UserArgsFromProposal']


    

class UserIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProposalRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProposalRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProposalRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromProposalRecursive1']
    files: Union[bool, 'FindManyFileArgsFromProposalRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProposalRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProposalRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProposalRecursive1']


class UserIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProposalRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProposalRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProposalRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromProposalRecursive2']
    files: Union[bool, 'FindManyFileArgsFromProposalRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProposalRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProposalRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProposalRecursive2']


class UserIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProposalRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProposalRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProposalRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromProposalRecursive3']
    files: Union[bool, 'FindManyFileArgsFromProposalRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProposalRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProposalRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProposalRecursive3']


class UserIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromProposalRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromProposalRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromProposalRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromProposalRecursive4']
    files: Union[bool, 'FindManyFileArgsFromProposalRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromProposalRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromProposalRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromProposalRecursive4']


class UserIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class UserArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyUserArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProposalRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive1']


class OrganizationIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProposalRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive2']


class OrganizationIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProposalRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive3']


class OrganizationIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromProposalRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromProposalRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromProposalRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromProposalRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromProposalRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromProposalRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromProposalRecursive4']


class OrganizationIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class OrganizationArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyOrganizationArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    invitedBy: Union[bool, 'UserArgsFromProposalRecursive1']


class OrganizationMemberIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    invitedBy: Union[bool, 'UserArgsFromProposalRecursive2']


class OrganizationMemberIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    invitedBy: Union[bool, 'UserArgsFromProposalRecursive3']


class OrganizationMemberIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    invitedBy: Union[bool, 'UserArgsFromProposalRecursive4']


class OrganizationMemberIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class OrganizationMemberArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyOrganizationMemberArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive1']


class PathIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive2']


class PathIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive3']


class PathIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    modules: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive4']


class PathIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class PathArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyPathArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    instructor: Union[bool, 'UserArgsFromProposalRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromProposalRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive1']


class ModuleIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    instructor: Union[bool, 'UserArgsFromProposalRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromProposalRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive2']


class ModuleIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    instructor: Union[bool, 'UserArgsFromProposalRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromProposalRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive3']


class ModuleIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    instructor: Union[bool, 'UserArgsFromProposalRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromProposalRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromProposalRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromProposalRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromProposalRecursive4']


class ModuleIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class ModuleArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyModuleArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    path: Union[bool, 'PathArgsFromProposalRecursive1']
    module: Union[bool, 'ModuleArgsFromProposalRecursive1']


class PathModuleIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    path: Union[bool, 'PathArgsFromProposalRecursive2']
    module: Union[bool, 'ModuleArgsFromProposalRecursive2']


class PathModuleIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    path: Union[bool, 'PathArgsFromProposalRecursive3']
    module: Union[bool, 'ModuleArgsFromProposalRecursive3']


class PathModuleIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    path: Union[bool, 'PathArgsFromProposalRecursive4']
    module: Union[bool, 'ModuleArgsFromProposalRecursive4']


class PathModuleIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class PathModuleArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyPathModuleArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    module: Union[bool, 'ModuleArgsFromProposalRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive1']


class LessonIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    module: Union[bool, 'ModuleArgsFromProposalRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive2']


class LessonIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    module: Union[bool, 'ModuleArgsFromProposalRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive3']


class LessonIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    module: Union[bool, 'ModuleArgsFromProposalRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromProposalRecursive4']


class LessonIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class LessonArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyLessonArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    module: Union[bool, 'ModuleArgsFromProposalRecursive1']
    path: Union[bool, 'PathArgsFromProposalRecursive1']


class EnrollmentIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    module: Union[bool, 'ModuleArgsFromProposalRecursive2']
    path: Union[bool, 'PathArgsFromProposalRecursive2']


class EnrollmentIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    module: Union[bool, 'ModuleArgsFromProposalRecursive3']
    path: Union[bool, 'PathArgsFromProposalRecursive3']


class EnrollmentIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    module: Union[bool, 'ModuleArgsFromProposalRecursive4']
    path: Union[bool, 'PathArgsFromProposalRecursive4']


class EnrollmentIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class EnrollmentArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyEnrollmentArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    lesson: Union[bool, 'LessonArgsFromProposalRecursive1']


class LessonProgressIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    lesson: Union[bool, 'LessonArgsFromProposalRecursive2']


class LessonProgressIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    lesson: Union[bool, 'LessonArgsFromProposalRecursive3']


class LessonProgressIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    lesson: Union[bool, 'LessonArgsFromProposalRecursive4']


class LessonProgressIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class LessonProgressArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyLessonProgressArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    module: Union[bool, 'ModuleArgsFromProposalRecursive1']


class CertificateIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    module: Union[bool, 'ModuleArgsFromProposalRecursive2']


class CertificateIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    module: Union[bool, 'ModuleArgsFromProposalRecursive3']


class CertificateIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    module: Union[bool, 'ModuleArgsFromProposalRecursive4']


class CertificateIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class CertificateArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyCertificateArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromProposalRecursive1']


class ProjectIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromProposalRecursive2']


class ProjectIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromProposalRecursive3']


class ProjectIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    owner: Union[bool, 'UserArgsFromProposalRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromProposalRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromProposalRecursive4']


class ProjectIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class ProjectArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyProjectArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive1']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive1']


class ProposalIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive2']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive2']


class ProposalIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive3']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive3']


class ProposalIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive4']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive4']


class ProposalIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class ProposalArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyProposalArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive1']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive1']
    client: Union[bool, 'UserArgsFromProposalRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProposalRecursive1']


class ContractIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive2']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive2']
    client: Union[bool, 'UserArgsFromProposalRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProposalRecursive2']


class ContractIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive3']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive3']
    client: Union[bool, 'UserArgsFromProposalRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProposalRecursive3']


class ContractIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    project: Union[bool, 'ProjectArgsFromProposalRecursive4']
    freelancer: Union[bool, 'UserArgsFromProposalRecursive4']
    client: Union[bool, 'UserArgsFromProposalRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromProposalRecursive4']


class ContractIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class ContractArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyContractArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    contract: Union[bool, 'ContractArgsFromProposalRecursive1']


class DeliveryIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    contract: Union[bool, 'ContractArgsFromProposalRecursive2']


class DeliveryIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    contract: Union[bool, 'ContractArgsFromProposalRecursive3']


class DeliveryIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    contract: Union[bool, 'ContractArgsFromProposalRecursive4']


class DeliveryIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class DeliveryArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyDeliveryArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']


class UserSkillIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']


class UserSkillIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']


class UserSkillIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']


class UserSkillIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class UserSkillArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyUserSkillArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive1']


class DatasetIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive2']


class DatasetIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive3']


class DatasetIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromProposalRecursive4']


class DatasetIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class DatasetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyDatasetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive1']


class DashboardIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive2']


class DashboardIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive3']


class DashboardIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    ownerUser: Union[bool, 'UserArgsFromProposalRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromProposalRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromProposalRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromProposalRecursive4']


class DashboardIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class DashboardArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyDashboardArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive1']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive1']


class DashboardDatasetIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive2']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive2']


class DashboardDatasetIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive3']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive3']


class DashboardDatasetIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive4']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive4']


class DashboardDatasetIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class DashboardDatasetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyDashboardDatasetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive1']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive1']


class WidgetIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive2']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive2']


class WidgetIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive3']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive3']


class WidgetIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive4']
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive4']


class WidgetIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class WidgetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyWidgetArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive1']
    author: Union[bool, 'UserArgsFromProposalRecursive1']


class InsightIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive2']
    author: Union[bool, 'UserArgsFromProposalRecursive2']


class InsightIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive3']
    author: Union[bool, 'UserArgsFromProposalRecursive3']


class InsightIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dashboard: Union[bool, 'DashboardArgsFromProposalRecursive4']
    author: Union[bool, 'UserArgsFromProposalRecursive4']


class InsightIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class InsightArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyInsightArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive1']
    creator: Union[bool, 'UserArgsFromProposalRecursive1']


class MLModelIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive2']
    creator: Union[bool, 'UserArgsFromProposalRecursive2']


class MLModelIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive3']
    creator: Union[bool, 'UserArgsFromProposalRecursive3']


class MLModelIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    dataset: Union[bool, 'DatasetArgsFromProposalRecursive4']
    creator: Union[bool, 'UserArgsFromProposalRecursive4']


class MLModelIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class MLModelArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyMLModelArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']


class TransactionIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']


class TransactionIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']


class TransactionIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']


class TransactionIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class TransactionArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyTransactionArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive1']


class SubscriptionIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive2']


class SubscriptionIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive3']


class SubscriptionIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']
    organization: Union[bool, 'OrganizationArgsFromProposalRecursive4']


class SubscriptionIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class SubscriptionArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManySubscriptionArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']


class NotificationIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']


class NotificationIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']


class NotificationIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']


class NotificationIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class NotificationArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyNotificationArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive1']


class AuthTokenIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive2']


class AuthTokenIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive3']


class AuthTokenIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    user: Union[bool, 'UserArgsFromProposalRecursive4']


class AuthTokenIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class AuthTokenArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyAuthTokenArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    uploader: Union[bool, 'UserArgsFromProposalRecursive1']


class FileIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    uploader: Union[bool, 'UserArgsFromProposalRecursive2']


class FileIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    uploader: Union[bool, 'UserArgsFromProposalRecursive3']


class FileIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    uploader: Union[bool, 'UserArgsFromProposalRecursive4']


class FileIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class FileArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyFileArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromProposal(TypedDict, total=False):
    """Relational arguments for Proposal"""
    actor: Union[bool, 'UserArgsFromProposalRecursive1']


class AuditLogIncludeFromProposalRecursive1(TypedDict, total=False):
    """Relational arguments for Proposal"""
    actor: Union[bool, 'UserArgsFromProposalRecursive2']


class AuditLogIncludeFromProposalRecursive2(TypedDict, total=False):
    """Relational arguments for Proposal"""
    actor: Union[bool, 'UserArgsFromProposalRecursive3']


class AuditLogIncludeFromProposalRecursive3(TypedDict, total=False):
    """Relational arguments for Proposal"""
    actor: Union[bool, 'UserArgsFromProposalRecursive4']


class AuditLogIncludeFromProposalRecursive4(TypedDict, total=False):
    """Relational arguments for Proposal"""

    

class AuditLogArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    
    

class FindManyAuditLogArgsFromProposal(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromProposalRecursive1(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromProposalRecursive2(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromProposalRecursive3(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromProposalRecursive4(TypedDict, total=False):
    """Arguments for Proposal"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyProposalArgs = FindManyProposalArgsFromProposal
FindFirstProposalArgs = FindManyProposalArgsFromProposal


    

class ProposalWhereInput(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    message: Union[None, _str, 'types.StringFilter']
    amountCents: Union[None, _int, 'types.IntFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['ProposalWhereInputRecursive1', List['ProposalWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ProposalWhereInputRecursive1']
    OR: List['ProposalWhereInputRecursive1']
    NOT: List['ProposalWhereInputRecursive1']


class ProposalWhereInputRecursive1(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    message: Union[None, _str, 'types.StringFilter']
    amountCents: Union[None, _int, 'types.IntFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['ProposalWhereInputRecursive2', List['ProposalWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ProposalWhereInputRecursive2']
    OR: List['ProposalWhereInputRecursive2']
    NOT: List['ProposalWhereInputRecursive2']


class ProposalWhereInputRecursive2(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    message: Union[None, _str, 'types.StringFilter']
    amountCents: Union[None, _int, 'types.IntFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['ProposalWhereInputRecursive3', List['ProposalWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ProposalWhereInputRecursive3']
    OR: List['ProposalWhereInputRecursive3']
    NOT: List['ProposalWhereInputRecursive3']


class ProposalWhereInputRecursive3(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    message: Union[None, _str, 'types.StringFilter']
    amountCents: Union[None, _int, 'types.IntFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['ProposalWhereInputRecursive4', List['ProposalWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ProposalWhereInputRecursive4']
    OR: List['ProposalWhereInputRecursive4']
    NOT: List['ProposalWhereInputRecursive4']


class ProposalWhereInputRecursive4(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    message: Union[None, _str, 'types.StringFilter']
    amountCents: Union[None, _int, 'types.IntFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'



# aggregate Proposal types


    

class ProposalScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProposalScalarWhereWithAggregatesInputRecursive1']
    OR: List['ProposalScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ProposalScalarWhereWithAggregatesInputRecursive1']


class ProposalScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProposalScalarWhereWithAggregatesInputRecursive2']
    OR: List['ProposalScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ProposalScalarWhereWithAggregatesInputRecursive2']


class ProposalScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProposalScalarWhereWithAggregatesInputRecursive3']
    OR: List['ProposalScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ProposalScalarWhereWithAggregatesInputRecursive3']


class ProposalScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ProposalScalarWhereWithAggregatesInputRecursive4']
    OR: List['ProposalScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ProposalScalarWhereWithAggregatesInputRecursive4']


class ProposalScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Proposal arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    message: Union[_str, 'types.StringWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ProposalGroupByOutput(TypedDict, total=False):
    id: _int
    projectId: _int
    freelancerId: _int
    message: _str
    amountCents: _int
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'ProposalSumAggregateOutput'
    _avg: 'ProposalAvgAggregateOutput'
    _min: 'ProposalMinAggregateOutput'
    _max: 'ProposalMaxAggregateOutput'
    _count: 'ProposalCountAggregateOutput'


class ProposalAvgAggregateOutput(TypedDict, total=False):
    """Proposal output for aggregating averages"""
    id: float
    projectId: float
    freelancerId: float
    amountCents: float


class ProposalSumAggregateOutput(TypedDict, total=False):
    """Proposal output for aggregating sums"""
    id: _int
    projectId: _int
    freelancerId: _int
    amountCents: _int


class ProposalScalarAggregateOutput(TypedDict, total=False):
    """Proposal output including scalar fields"""
    id: _int
    projectId: _int
    freelancerId: _int
    message: _str
    amountCents: _int
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


ProposalMinAggregateOutput = ProposalScalarAggregateOutput
ProposalMaxAggregateOutput = ProposalScalarAggregateOutput


class ProposalMaxAggregateInput(TypedDict, total=False):
    """Proposal input for aggregating by max"""
    id: bool
    projectId: bool
    freelancerId: bool
    message: bool
    amountCents: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ProposalMinAggregateInput(TypedDict, total=False):
    """Proposal input for aggregating by min"""
    id: bool
    projectId: bool
    freelancerId: bool
    message: bool
    amountCents: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ProposalNumberAggregateInput(TypedDict, total=False):
    """Proposal input for aggregating numbers"""
    id: bool
    projectId: bool
    freelancerId: bool
    amountCents: bool


ProposalAvgAggregateInput = ProposalNumberAggregateInput
ProposalSumAggregateInput = ProposalNumberAggregateInput


ProposalCountAggregateInput = TypedDict(
    'ProposalCountAggregateInput',
    {
        'id': bool,
        'projectId': bool,
        'freelancerId': bool,
        'message': bool,
        'amountCents': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

ProposalCountAggregateOutput = TypedDict(
    'ProposalCountAggregateOutput',
    {
        'id': int,
        'projectId': int,
        'freelancerId': int,
        'message': int,
        'amountCents': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


ProposalKeys = Literal[
    'id',
    'projectId',
    'freelancerId',
    'message',
    'amountCents',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'project',
    'freelancer',
]
ProposalScalarFieldKeys = Literal[
    'id',
    'projectId',
    'freelancerId',
    'message',
    'amountCents',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
ProposalScalarFieldKeysT = TypeVar('ProposalScalarFieldKeysT', bound=ProposalScalarFieldKeys)

ProposalRelationalFieldKeys = Literal[
        'project',
        'freelancer',
    ]

# Contract types

class ContractOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Contract create method"""
    id: _int
    projectId: _int
    freelancerId: Optional[_int]
    clientId: Optional[_int]
    terms: Optional[_str]
    startDate: Optional[datetime.datetime]
    endDate: Optional[datetime.datetime]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    project: 'ProjectCreateNestedWithoutRelationsInput'
    freelancer: 'UserCreateNestedWithoutRelationsInput'
    client: 'UserCreateNestedWithoutRelationsInput'
    deliveries: 'DeliveryCreateManyNestedWithoutRelationsInput'


class ContractCreateInput(ContractOptionalCreateInput):
    """Required arguments to the Contract create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ContractOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Contract create method, without relations"""
    id: _int
    projectId: _int
    freelancerId: Optional[_int]
    clientId: Optional[_int]
    terms: Optional[_str]
    startDate: Optional[datetime.datetime]
    endDate: Optional[datetime.datetime]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ContractCreateWithoutRelationsInput(ContractOptionalCreateWithoutRelationsInput):
    """Required arguments to the Contract create method, without relations"""

class ContractConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ContractCreateWithoutRelationsInput'
    where: 'ContractWhereUniqueInput'

class ContractCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ContractCreateWithoutRelationsInput'
    connect: 'ContractWhereUniqueInput'
    connect_or_create: 'ContractConnectOrCreateWithoutRelationsInput'


class ContractCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ContractCreateWithoutRelationsInput', List['ContractCreateWithoutRelationsInput']]
    connect: Union['ContractWhereUniqueInput', List['ContractWhereUniqueInput']]
    connect_or_create: Union['ContractConnectOrCreateWithoutRelationsInput', List['ContractConnectOrCreateWithoutRelationsInput']]

_ContractWhereUnique_id_Input = TypedDict(
    '_ContractWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

ContractWhereUniqueInput = _ContractWhereUnique_id_Input


class ContractUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    terms: Optional[_str]
    startDate: Optional[datetime.datetime]
    endDate: Optional[datetime.datetime]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    project: 'ProjectUpdateOneWithoutRelationsInput'
    freelancer: 'UserUpdateOneWithoutRelationsInput'
    client: 'UserUpdateOneWithoutRelationsInput'
    deliveries: 'DeliveryUpdateManyWithoutRelationsInput'


class ContractUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    terms: Optional[_str]
    startDate: Optional[datetime.datetime]
    endDate: Optional[datetime.datetime]
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class ContractUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ContractCreateWithoutRelationsInput']
    connect: List['ContractWhereUniqueInput']
    connect_or_create: List['ContractConnectOrCreateWithoutRelationsInput']
    set: List['ContractWhereUniqueInput']
    disconnect: List['ContractWhereUniqueInput']
    delete: List['ContractWhereUniqueInput']

    # TODO
    # update: List['ContractUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ContractUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ContractScalarWhereInput']
    # upsert: List['ContractUpserteWithWhereUniqueWithoutRelationsInput']


class ContractUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ContractCreateWithoutRelationsInput'
    connect: 'ContractWhereUniqueInput'
    connect_or_create: 'ContractConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ContractUpdateInput'
    # upsert: 'ContractUpsertWithoutRelationsInput'


class ContractUpsertInput(TypedDict):
    create: 'ContractCreateInput'
    update: 'ContractUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Contract_id_OrderByInput = TypedDict(
    '_Contract_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Contract_projectId_OrderByInput = TypedDict(
    '_Contract_projectId_OrderByInput',
    {
        'projectId': 'SortOrder',
    },
    total=True
)

_Contract_freelancerId_OrderByInput = TypedDict(
    '_Contract_freelancerId_OrderByInput',
    {
        'freelancerId': 'SortOrder',
    },
    total=True
)

_Contract_clientId_OrderByInput = TypedDict(
    '_Contract_clientId_OrderByInput',
    {
        'clientId': 'SortOrder',
    },
    total=True
)

_Contract_terms_OrderByInput = TypedDict(
    '_Contract_terms_OrderByInput',
    {
        'terms': 'SortOrder',
    },
    total=True
)

_Contract_startDate_OrderByInput = TypedDict(
    '_Contract_startDate_OrderByInput',
    {
        'startDate': 'SortOrder',
    },
    total=True
)

_Contract_endDate_OrderByInput = TypedDict(
    '_Contract_endDate_OrderByInput',
    {
        'endDate': 'SortOrder',
    },
    total=True
)

_Contract_status_OrderByInput = TypedDict(
    '_Contract_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Contract_createdAt_OrderByInput = TypedDict(
    '_Contract_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Contract_updatedAt_OrderByInput = TypedDict(
    '_Contract_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Contract_deletedAt_OrderByInput = TypedDict(
    '_Contract_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Contract_RelevanceInner = TypedDict(
    '_Contract_RelevanceInner',
    {
        'fields': 'List[ContractScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Contract_RelevanceOrderByInput = TypedDict(
    '_Contract_RelevanceOrderByInput',
    {
        '_relevance': '_Contract_RelevanceInner',
    },
    total=True
)

ContractOrderByInput = Union[
    '_Contract_id_OrderByInput',
    '_Contract_projectId_OrderByInput',
    '_Contract_freelancerId_OrderByInput',
    '_Contract_clientId_OrderByInput',
    '_Contract_terms_OrderByInput',
    '_Contract_startDate_OrderByInput',
    '_Contract_endDate_OrderByInput',
    '_Contract_status_OrderByInput',
    '_Contract_createdAt_OrderByInput',
    '_Contract_updatedAt_OrderByInput',
    '_Contract_deletedAt_OrderByInput',
    '_Contract_RelevanceOrderByInput',
]



# recursive Contract types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ContractRelationFilter = TypedDict(
    'ContractRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ContractListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ContractInclude(TypedDict, total=False):
    """Contract relational arguments"""
    project: Union[bool, 'ProjectArgsFromContract']
    freelancer: Union[bool, 'UserArgsFromContract']
    client: Union[bool, 'UserArgsFromContract']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromContract']


    

class UserIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromContractRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromContractRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromContractRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromContractRecursive1']
    files: Union[bool, 'FindManyFileArgsFromContractRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromContractRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromContractRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromContractRecursive1']


class UserIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromContractRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromContractRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromContractRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromContractRecursive2']
    files: Union[bool, 'FindManyFileArgsFromContractRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromContractRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromContractRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromContractRecursive2']


class UserIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromContractRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromContractRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromContractRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromContractRecursive3']
    files: Union[bool, 'FindManyFileArgsFromContractRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromContractRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromContractRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromContractRecursive3']


class UserIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromContractRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromContractRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromContractRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromContractRecursive4']
    files: Union[bool, 'FindManyFileArgsFromContractRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromContractRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromContractRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromContractRecursive4']


class UserIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class UserArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyUserArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromContractRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive1']


class OrganizationIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromContractRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive2']


class OrganizationIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromContractRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive3']


class OrganizationIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromContractRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromContractRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromContractRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromContractRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromContractRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromContractRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromContractRecursive4']


class OrganizationIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class OrganizationArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyOrganizationArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    user: Union[bool, 'UserArgsFromContractRecursive1']
    invitedBy: Union[bool, 'UserArgsFromContractRecursive1']


class OrganizationMemberIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    user: Union[bool, 'UserArgsFromContractRecursive2']
    invitedBy: Union[bool, 'UserArgsFromContractRecursive2']


class OrganizationMemberIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    user: Union[bool, 'UserArgsFromContractRecursive3']
    invitedBy: Union[bool, 'UserArgsFromContractRecursive3']


class OrganizationMemberIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    user: Union[bool, 'UserArgsFromContractRecursive4']
    invitedBy: Union[bool, 'UserArgsFromContractRecursive4']


class OrganizationMemberIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class OrganizationMemberArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyOrganizationMemberArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    modules: Union[bool, 'FindManyPathModuleArgsFromContractRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive1']


class PathIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    modules: Union[bool, 'FindManyPathModuleArgsFromContractRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive2']


class PathIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    modules: Union[bool, 'FindManyPathModuleArgsFromContractRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive3']


class PathIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    modules: Union[bool, 'FindManyPathModuleArgsFromContractRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive4']


class PathIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class PathArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyPathArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    instructor: Union[bool, 'UserArgsFromContractRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromContractRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromContractRecursive1']


class ModuleIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    instructor: Union[bool, 'UserArgsFromContractRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromContractRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromContractRecursive2']


class ModuleIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    instructor: Union[bool, 'UserArgsFromContractRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromContractRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromContractRecursive3']


class ModuleIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    instructor: Union[bool, 'UserArgsFromContractRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromContractRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromContractRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromContractRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromContractRecursive4']


class ModuleIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class ModuleArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyModuleArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    path: Union[bool, 'PathArgsFromContractRecursive1']
    module: Union[bool, 'ModuleArgsFromContractRecursive1']


class PathModuleIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    path: Union[bool, 'PathArgsFromContractRecursive2']
    module: Union[bool, 'ModuleArgsFromContractRecursive2']


class PathModuleIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    path: Union[bool, 'PathArgsFromContractRecursive3']
    module: Union[bool, 'ModuleArgsFromContractRecursive3']


class PathModuleIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    path: Union[bool, 'PathArgsFromContractRecursive4']
    module: Union[bool, 'ModuleArgsFromContractRecursive4']


class PathModuleIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class PathModuleArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyPathModuleArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    module: Union[bool, 'ModuleArgsFromContractRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive1']


class LessonIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    module: Union[bool, 'ModuleArgsFromContractRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive2']


class LessonIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    module: Union[bool, 'ModuleArgsFromContractRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive3']


class LessonIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    module: Union[bool, 'ModuleArgsFromContractRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromContractRecursive4']


class LessonIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class LessonArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyLessonArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']
    module: Union[bool, 'ModuleArgsFromContractRecursive1']
    path: Union[bool, 'PathArgsFromContractRecursive1']


class EnrollmentIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']
    module: Union[bool, 'ModuleArgsFromContractRecursive2']
    path: Union[bool, 'PathArgsFromContractRecursive2']


class EnrollmentIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']
    module: Union[bool, 'ModuleArgsFromContractRecursive3']
    path: Union[bool, 'PathArgsFromContractRecursive3']


class EnrollmentIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']
    module: Union[bool, 'ModuleArgsFromContractRecursive4']
    path: Union[bool, 'PathArgsFromContractRecursive4']


class EnrollmentIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class EnrollmentArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyEnrollmentArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']
    lesson: Union[bool, 'LessonArgsFromContractRecursive1']


class LessonProgressIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']
    lesson: Union[bool, 'LessonArgsFromContractRecursive2']


class LessonProgressIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']
    lesson: Union[bool, 'LessonArgsFromContractRecursive3']


class LessonProgressIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']
    lesson: Union[bool, 'LessonArgsFromContractRecursive4']


class LessonProgressIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class LessonProgressArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyLessonProgressArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']
    module: Union[bool, 'ModuleArgsFromContractRecursive1']


class CertificateIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']
    module: Union[bool, 'ModuleArgsFromContractRecursive2']


class CertificateIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']
    module: Union[bool, 'ModuleArgsFromContractRecursive3']


class CertificateIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']
    module: Union[bool, 'ModuleArgsFromContractRecursive4']


class CertificateIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class CertificateArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyCertificateArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive1']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromContractRecursive1']


class ProjectIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive2']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromContractRecursive2']


class ProjectIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive3']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromContractRecursive3']


class ProjectIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    owner: Union[bool, 'UserArgsFromContractRecursive4']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromContractRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromContractRecursive4']


class ProjectIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class ProjectArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyProjectArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive1']
    freelancer: Union[bool, 'UserArgsFromContractRecursive1']


class ProposalIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive2']
    freelancer: Union[bool, 'UserArgsFromContractRecursive2']


class ProposalIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive3']
    freelancer: Union[bool, 'UserArgsFromContractRecursive3']


class ProposalIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive4']
    freelancer: Union[bool, 'UserArgsFromContractRecursive4']


class ProposalIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class ProposalArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyProposalArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive1']
    freelancer: Union[bool, 'UserArgsFromContractRecursive1']
    client: Union[bool, 'UserArgsFromContractRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromContractRecursive1']


class ContractIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive2']
    freelancer: Union[bool, 'UserArgsFromContractRecursive2']
    client: Union[bool, 'UserArgsFromContractRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromContractRecursive2']


class ContractIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive3']
    freelancer: Union[bool, 'UserArgsFromContractRecursive3']
    client: Union[bool, 'UserArgsFromContractRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromContractRecursive3']


class ContractIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    project: Union[bool, 'ProjectArgsFromContractRecursive4']
    freelancer: Union[bool, 'UserArgsFromContractRecursive4']
    client: Union[bool, 'UserArgsFromContractRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromContractRecursive4']


class ContractIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class ContractArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyContractArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    contract: Union[bool, 'ContractArgsFromContractRecursive1']


class DeliveryIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    contract: Union[bool, 'ContractArgsFromContractRecursive2']


class DeliveryIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    contract: Union[bool, 'ContractArgsFromContractRecursive3']


class DeliveryIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    contract: Union[bool, 'ContractArgsFromContractRecursive4']


class DeliveryIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class DeliveryArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyDeliveryArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']


class UserSkillIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']


class UserSkillIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']


class UserSkillIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']


class UserSkillIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class UserSkillArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyUserSkillArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive1']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive1']


class DatasetIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive2']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive2']


class DatasetIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive3']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive3']


class DatasetIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive4']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromContractRecursive4']


class DatasetIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class DatasetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyDatasetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive1']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive1']


class DashboardIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive2']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive2']


class DashboardIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive3']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive3']


class DashboardIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    ownerUser: Union[bool, 'UserArgsFromContractRecursive4']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromContractRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromContractRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromContractRecursive4']


class DashboardIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class DashboardArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyDashboardArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive1']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive1']


class DashboardDatasetIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive2']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive2']


class DashboardDatasetIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive3']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive3']


class DashboardDatasetIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive4']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive4']


class DashboardDatasetIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class DashboardDatasetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyDashboardDatasetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive1']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive1']


class WidgetIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive2']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive2']


class WidgetIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive3']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive3']


class WidgetIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive4']
    dataset: Union[bool, 'DatasetArgsFromContractRecursive4']


class WidgetIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class WidgetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyWidgetArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive1']
    author: Union[bool, 'UserArgsFromContractRecursive1']


class InsightIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive2']
    author: Union[bool, 'UserArgsFromContractRecursive2']


class InsightIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive3']
    author: Union[bool, 'UserArgsFromContractRecursive3']


class InsightIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    dashboard: Union[bool, 'DashboardArgsFromContractRecursive4']
    author: Union[bool, 'UserArgsFromContractRecursive4']


class InsightIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class InsightArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyInsightArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    dataset: Union[bool, 'DatasetArgsFromContractRecursive1']
    creator: Union[bool, 'UserArgsFromContractRecursive1']


class MLModelIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    dataset: Union[bool, 'DatasetArgsFromContractRecursive2']
    creator: Union[bool, 'UserArgsFromContractRecursive2']


class MLModelIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    dataset: Union[bool, 'DatasetArgsFromContractRecursive3']
    creator: Union[bool, 'UserArgsFromContractRecursive3']


class MLModelIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    dataset: Union[bool, 'DatasetArgsFromContractRecursive4']
    creator: Union[bool, 'UserArgsFromContractRecursive4']


class MLModelIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class MLModelArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyMLModelArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']


class TransactionIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']


class TransactionIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']


class TransactionIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']


class TransactionIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class TransactionArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyTransactionArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive1']


class SubscriptionIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive2']


class SubscriptionIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive3']


class SubscriptionIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']
    organization: Union[bool, 'OrganizationArgsFromContractRecursive4']


class SubscriptionIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class SubscriptionArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManySubscriptionArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']


class NotificationIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']


class NotificationIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']


class NotificationIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']


class NotificationIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class NotificationArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyNotificationArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive1']


class AuthTokenIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive2']


class AuthTokenIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive3']


class AuthTokenIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    user: Union[bool, 'UserArgsFromContractRecursive4']


class AuthTokenIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class AuthTokenArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyAuthTokenArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    uploader: Union[bool, 'UserArgsFromContractRecursive1']


class FileIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    uploader: Union[bool, 'UserArgsFromContractRecursive2']


class FileIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    uploader: Union[bool, 'UserArgsFromContractRecursive3']


class FileIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    uploader: Union[bool, 'UserArgsFromContractRecursive4']


class FileIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class FileArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyFileArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromContract(TypedDict, total=False):
    """Relational arguments for Contract"""
    actor: Union[bool, 'UserArgsFromContractRecursive1']


class AuditLogIncludeFromContractRecursive1(TypedDict, total=False):
    """Relational arguments for Contract"""
    actor: Union[bool, 'UserArgsFromContractRecursive2']


class AuditLogIncludeFromContractRecursive2(TypedDict, total=False):
    """Relational arguments for Contract"""
    actor: Union[bool, 'UserArgsFromContractRecursive3']


class AuditLogIncludeFromContractRecursive3(TypedDict, total=False):
    """Relational arguments for Contract"""
    actor: Union[bool, 'UserArgsFromContractRecursive4']


class AuditLogIncludeFromContractRecursive4(TypedDict, total=False):
    """Relational arguments for Contract"""

    

class AuditLogArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    
    

class FindManyAuditLogArgsFromContract(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromContractRecursive1(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromContractRecursive2(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromContractRecursive3(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromContractRecursive4(TypedDict, total=False):
    """Arguments for Contract"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyContractArgs = FindManyContractArgsFromContract
FindFirstContractArgs = FindManyContractArgsFromContract


    

class ContractWhereInput(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    clientId: Union[None, _int, 'types.IntFilter']
    terms: Union[None, _str, 'types.StringFilter']
    startDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'
    client: 'UserRelationFilter'
    deliveries: 'DeliveryListRelationFilter'

    # should be noted that AND and NOT should be Union['ContractWhereInputRecursive1', List['ContractWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ContractWhereInputRecursive1']
    OR: List['ContractWhereInputRecursive1']
    NOT: List['ContractWhereInputRecursive1']


class ContractWhereInputRecursive1(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    clientId: Union[None, _int, 'types.IntFilter']
    terms: Union[None, _str, 'types.StringFilter']
    startDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'
    client: 'UserRelationFilter'
    deliveries: 'DeliveryListRelationFilter'

    # should be noted that AND and NOT should be Union['ContractWhereInputRecursive2', List['ContractWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ContractWhereInputRecursive2']
    OR: List['ContractWhereInputRecursive2']
    NOT: List['ContractWhereInputRecursive2']


class ContractWhereInputRecursive2(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    clientId: Union[None, _int, 'types.IntFilter']
    terms: Union[None, _str, 'types.StringFilter']
    startDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'
    client: 'UserRelationFilter'
    deliveries: 'DeliveryListRelationFilter'

    # should be noted that AND and NOT should be Union['ContractWhereInputRecursive3', List['ContractWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ContractWhereInputRecursive3']
    OR: List['ContractWhereInputRecursive3']
    NOT: List['ContractWhereInputRecursive3']


class ContractWhereInputRecursive3(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    clientId: Union[None, _int, 'types.IntFilter']
    terms: Union[None, _str, 'types.StringFilter']
    startDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'
    client: 'UserRelationFilter'
    deliveries: 'DeliveryListRelationFilter'

    # should be noted that AND and NOT should be Union['ContractWhereInputRecursive4', List['ContractWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ContractWhereInputRecursive4']
    OR: List['ContractWhereInputRecursive4']
    NOT: List['ContractWhereInputRecursive4']


class ContractWhereInputRecursive4(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    projectId: Union[_int, 'types.IntFilter']
    freelancerId: Union[None, _int, 'types.IntFilter']
    clientId: Union[None, _int, 'types.IntFilter']
    terms: Union[None, _str, 'types.StringFilter']
    startDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endDate: Union[None, datetime.datetime, 'types.DateTimeFilter']
    status: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    project: 'ProjectRelationFilter'
    freelancer: 'UserRelationFilter'
    client: 'UserRelationFilter'
    deliveries: 'DeliveryListRelationFilter'



# aggregate Contract types


    

class ContractScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    clientId: Union[_int, 'types.IntWithAggregatesFilter']
    terms: Union[_str, 'types.StringWithAggregatesFilter']
    startDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ContractScalarWhereWithAggregatesInputRecursive1']
    OR: List['ContractScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ContractScalarWhereWithAggregatesInputRecursive1']


class ContractScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    clientId: Union[_int, 'types.IntWithAggregatesFilter']
    terms: Union[_str, 'types.StringWithAggregatesFilter']
    startDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ContractScalarWhereWithAggregatesInputRecursive2']
    OR: List['ContractScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ContractScalarWhereWithAggregatesInputRecursive2']


class ContractScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    clientId: Union[_int, 'types.IntWithAggregatesFilter']
    terms: Union[_str, 'types.StringWithAggregatesFilter']
    startDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ContractScalarWhereWithAggregatesInputRecursive3']
    OR: List['ContractScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ContractScalarWhereWithAggregatesInputRecursive3']


class ContractScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    clientId: Union[_int, 'types.IntWithAggregatesFilter']
    terms: Union[_str, 'types.StringWithAggregatesFilter']
    startDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ContractScalarWhereWithAggregatesInputRecursive4']
    OR: List['ContractScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ContractScalarWhereWithAggregatesInputRecursive4']


class ContractScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Contract arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    projectId: Union[_int, 'types.IntWithAggregatesFilter']
    freelancerId: Union[_int, 'types.IntWithAggregatesFilter']
    clientId: Union[_int, 'types.IntWithAggregatesFilter']
    terms: Union[_str, 'types.StringWithAggregatesFilter']
    startDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endDate: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ContractGroupByOutput(TypedDict, total=False):
    id: _int
    projectId: _int
    freelancerId: _int
    clientId: _int
    terms: _str
    startDate: datetime.datetime
    endDate: datetime.datetime
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'ContractSumAggregateOutput'
    _avg: 'ContractAvgAggregateOutput'
    _min: 'ContractMinAggregateOutput'
    _max: 'ContractMaxAggregateOutput'
    _count: 'ContractCountAggregateOutput'


class ContractAvgAggregateOutput(TypedDict, total=False):
    """Contract output for aggregating averages"""
    id: float
    projectId: float
    freelancerId: float
    clientId: float


class ContractSumAggregateOutput(TypedDict, total=False):
    """Contract output for aggregating sums"""
    id: _int
    projectId: _int
    freelancerId: _int
    clientId: _int


class ContractScalarAggregateOutput(TypedDict, total=False):
    """Contract output including scalar fields"""
    id: _int
    projectId: _int
    freelancerId: _int
    clientId: _int
    terms: _str
    startDate: datetime.datetime
    endDate: datetime.datetime
    status: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


ContractMinAggregateOutput = ContractScalarAggregateOutput
ContractMaxAggregateOutput = ContractScalarAggregateOutput


class ContractMaxAggregateInput(TypedDict, total=False):
    """Contract input for aggregating by max"""
    id: bool
    projectId: bool
    freelancerId: bool
    clientId: bool
    terms: bool
    startDate: bool
    endDate: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ContractMinAggregateInput(TypedDict, total=False):
    """Contract input for aggregating by min"""
    id: bool
    projectId: bool
    freelancerId: bool
    clientId: bool
    terms: bool
    startDate: bool
    endDate: bool
    status: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class ContractNumberAggregateInput(TypedDict, total=False):
    """Contract input for aggregating numbers"""
    id: bool
    projectId: bool
    freelancerId: bool
    clientId: bool


ContractAvgAggregateInput = ContractNumberAggregateInput
ContractSumAggregateInput = ContractNumberAggregateInput


ContractCountAggregateInput = TypedDict(
    'ContractCountAggregateInput',
    {
        'id': bool,
        'projectId': bool,
        'freelancerId': bool,
        'clientId': bool,
        'terms': bool,
        'startDate': bool,
        'endDate': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

ContractCountAggregateOutput = TypedDict(
    'ContractCountAggregateOutput',
    {
        'id': int,
        'projectId': int,
        'freelancerId': int,
        'clientId': int,
        'terms': int,
        'startDate': int,
        'endDate': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


ContractKeys = Literal[
    'id',
    'projectId',
    'freelancerId',
    'clientId',
    'terms',
    'startDate',
    'endDate',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'project',
    'freelancer',
    'client',
    'deliveries',
]
ContractScalarFieldKeys = Literal[
    'id',
    'projectId',
    'freelancerId',
    'clientId',
    'terms',
    'startDate',
    'endDate',
    'status',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
ContractScalarFieldKeysT = TypeVar('ContractScalarFieldKeysT', bound=ContractScalarFieldKeys)

ContractRelationalFieldKeys = Literal[
        'project',
        'freelancer',
        'client',
        'deliveries',
    ]

# Delivery types

class DeliveryOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Delivery create method"""
    id: _int
    contractId: _int
    description: Optional[_str]
    deliveredAt: datetime.datetime
    files: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    contract: 'ContractCreateNestedWithoutRelationsInput'


class DeliveryCreateInput(DeliveryOptionalCreateInput):
    """Required arguments to the Delivery create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class DeliveryOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Delivery create method, without relations"""
    id: _int
    contractId: _int
    description: Optional[_str]
    deliveredAt: datetime.datetime
    files: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DeliveryCreateWithoutRelationsInput(DeliveryOptionalCreateWithoutRelationsInput):
    """Required arguments to the Delivery create method, without relations"""

class DeliveryConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'DeliveryCreateWithoutRelationsInput'
    where: 'DeliveryWhereUniqueInput'

class DeliveryCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'DeliveryCreateWithoutRelationsInput'
    connect: 'DeliveryWhereUniqueInput'
    connect_or_create: 'DeliveryConnectOrCreateWithoutRelationsInput'


class DeliveryCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['DeliveryCreateWithoutRelationsInput', List['DeliveryCreateWithoutRelationsInput']]
    connect: Union['DeliveryWhereUniqueInput', List['DeliveryWhereUniqueInput']]
    connect_or_create: Union['DeliveryConnectOrCreateWithoutRelationsInput', List['DeliveryConnectOrCreateWithoutRelationsInput']]

_DeliveryWhereUnique_id_Input = TypedDict(
    '_DeliveryWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

DeliveryWhereUniqueInput = _DeliveryWhereUnique_id_Input


class DeliveryUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    description: Optional[_str]
    deliveredAt: datetime.datetime
    files: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    contract: 'ContractUpdateOneWithoutRelationsInput'


class DeliveryUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    description: Optional[_str]
    deliveredAt: datetime.datetime
    files: Optional['fields.Json']
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DeliveryUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['DeliveryCreateWithoutRelationsInput']
    connect: List['DeliveryWhereUniqueInput']
    connect_or_create: List['DeliveryConnectOrCreateWithoutRelationsInput']
    set: List['DeliveryWhereUniqueInput']
    disconnect: List['DeliveryWhereUniqueInput']
    delete: List['DeliveryWhereUniqueInput']

    # TODO
    # update: List['DeliveryUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['DeliveryUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['DeliveryScalarWhereInput']
    # upsert: List['DeliveryUpserteWithWhereUniqueWithoutRelationsInput']


class DeliveryUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'DeliveryCreateWithoutRelationsInput'
    connect: 'DeliveryWhereUniqueInput'
    connect_or_create: 'DeliveryConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'DeliveryUpdateInput'
    # upsert: 'DeliveryUpsertWithoutRelationsInput'


class DeliveryUpsertInput(TypedDict):
    create: 'DeliveryCreateInput'
    update: 'DeliveryUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Delivery_id_OrderByInput = TypedDict(
    '_Delivery_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Delivery_contractId_OrderByInput = TypedDict(
    '_Delivery_contractId_OrderByInput',
    {
        'contractId': 'SortOrder',
    },
    total=True
)

_Delivery_description_OrderByInput = TypedDict(
    '_Delivery_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Delivery_deliveredAt_OrderByInput = TypedDict(
    '_Delivery_deliveredAt_OrderByInput',
    {
        'deliveredAt': 'SortOrder',
    },
    total=True
)

_Delivery_files_OrderByInput = TypedDict(
    '_Delivery_files_OrderByInput',
    {
        'files': 'SortOrder',
    },
    total=True
)

_Delivery_createdAt_OrderByInput = TypedDict(
    '_Delivery_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Delivery_deletedAt_OrderByInput = TypedDict(
    '_Delivery_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Delivery_RelevanceInner = TypedDict(
    '_Delivery_RelevanceInner',
    {
        'fields': 'List[DeliveryScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Delivery_RelevanceOrderByInput = TypedDict(
    '_Delivery_RelevanceOrderByInput',
    {
        '_relevance': '_Delivery_RelevanceInner',
    },
    total=True
)

DeliveryOrderByInput = Union[
    '_Delivery_id_OrderByInput',
    '_Delivery_contractId_OrderByInput',
    '_Delivery_description_OrderByInput',
    '_Delivery_deliveredAt_OrderByInput',
    '_Delivery_files_OrderByInput',
    '_Delivery_createdAt_OrderByInput',
    '_Delivery_deletedAt_OrderByInput',
    '_Delivery_RelevanceOrderByInput',
]



# recursive Delivery types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

DeliveryRelationFilter = TypedDict(
    'DeliveryRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class DeliveryListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class DeliveryInclude(TypedDict, total=False):
    """Delivery relational arguments"""
    contract: Union[bool, 'ContractArgsFromDelivery']


    

class UserIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDeliveryRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDeliveryRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDeliveryRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromDeliveryRecursive1']
    files: Union[bool, 'FindManyFileArgsFromDeliveryRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDeliveryRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDeliveryRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDeliveryRecursive1']


class UserIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDeliveryRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDeliveryRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDeliveryRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromDeliveryRecursive2']
    files: Union[bool, 'FindManyFileArgsFromDeliveryRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDeliveryRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDeliveryRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDeliveryRecursive2']


class UserIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDeliveryRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDeliveryRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDeliveryRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromDeliveryRecursive3']
    files: Union[bool, 'FindManyFileArgsFromDeliveryRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDeliveryRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDeliveryRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDeliveryRecursive3']


class UserIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDeliveryRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDeliveryRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDeliveryRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromDeliveryRecursive4']
    files: Union[bool, 'FindManyFileArgsFromDeliveryRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDeliveryRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDeliveryRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDeliveryRecursive4']


class UserIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class UserArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyUserArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDeliveryRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive1']


class OrganizationIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDeliveryRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive2']


class OrganizationIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDeliveryRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive3']


class OrganizationIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDeliveryRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDeliveryRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDeliveryRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDeliveryRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDeliveryRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDeliveryRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDeliveryRecursive4']


class OrganizationIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class OrganizationArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyOrganizationArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    invitedBy: Union[bool, 'UserArgsFromDeliveryRecursive1']


class OrganizationMemberIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    invitedBy: Union[bool, 'UserArgsFromDeliveryRecursive2']


class OrganizationMemberIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    invitedBy: Union[bool, 'UserArgsFromDeliveryRecursive3']


class OrganizationMemberIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    invitedBy: Union[bool, 'UserArgsFromDeliveryRecursive4']


class OrganizationMemberIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class OrganizationMemberArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyOrganizationMemberArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive1']


class PathIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive2']


class PathIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive3']


class PathIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive4']


class PathIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class PathArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyPathArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    instructor: Union[bool, 'UserArgsFromDeliveryRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromDeliveryRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive1']


class ModuleIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    instructor: Union[bool, 'UserArgsFromDeliveryRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromDeliveryRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive2']


class ModuleIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    instructor: Union[bool, 'UserArgsFromDeliveryRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromDeliveryRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive3']


class ModuleIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    instructor: Union[bool, 'UserArgsFromDeliveryRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromDeliveryRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDeliveryRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDeliveryRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDeliveryRecursive4']


class ModuleIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class ModuleArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyModuleArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    path: Union[bool, 'PathArgsFromDeliveryRecursive1']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive1']


class PathModuleIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    path: Union[bool, 'PathArgsFromDeliveryRecursive2']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive2']


class PathModuleIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    path: Union[bool, 'PathArgsFromDeliveryRecursive3']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive3']


class PathModuleIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    path: Union[bool, 'PathArgsFromDeliveryRecursive4']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive4']


class PathModuleIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class PathModuleArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyPathModuleArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive1']


class LessonIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive2']


class LessonIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive3']


class LessonIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDeliveryRecursive4']


class LessonIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class LessonArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyLessonArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive1']
    path: Union[bool, 'PathArgsFromDeliveryRecursive1']


class EnrollmentIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive2']
    path: Union[bool, 'PathArgsFromDeliveryRecursive2']


class EnrollmentIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive3']
    path: Union[bool, 'PathArgsFromDeliveryRecursive3']


class EnrollmentIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive4']
    path: Union[bool, 'PathArgsFromDeliveryRecursive4']


class EnrollmentIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class EnrollmentArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyEnrollmentArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    lesson: Union[bool, 'LessonArgsFromDeliveryRecursive1']


class LessonProgressIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    lesson: Union[bool, 'LessonArgsFromDeliveryRecursive2']


class LessonProgressIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    lesson: Union[bool, 'LessonArgsFromDeliveryRecursive3']


class LessonProgressIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    lesson: Union[bool, 'LessonArgsFromDeliveryRecursive4']


class LessonProgressIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class LessonProgressArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyLessonProgressArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive1']


class CertificateIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive2']


class CertificateIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive3']


class CertificateIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    module: Union[bool, 'ModuleArgsFromDeliveryRecursive4']


class CertificateIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class CertificateArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyCertificateArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromDeliveryRecursive1']


class ProjectIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromDeliveryRecursive2']


class ProjectIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromDeliveryRecursive3']


class ProjectIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    owner: Union[bool, 'UserArgsFromDeliveryRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDeliveryRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromDeliveryRecursive4']


class ProjectIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class ProjectArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyProjectArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive1']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive1']


class ProposalIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive2']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive2']


class ProposalIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive3']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive3']


class ProposalIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive4']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive4']


class ProposalIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class ProposalArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyProposalArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive1']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive1']
    client: Union[bool, 'UserArgsFromDeliveryRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDeliveryRecursive1']


class ContractIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive2']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive2']
    client: Union[bool, 'UserArgsFromDeliveryRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDeliveryRecursive2']


class ContractIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive3']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive3']
    client: Union[bool, 'UserArgsFromDeliveryRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDeliveryRecursive3']


class ContractIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    project: Union[bool, 'ProjectArgsFromDeliveryRecursive4']
    freelancer: Union[bool, 'UserArgsFromDeliveryRecursive4']
    client: Union[bool, 'UserArgsFromDeliveryRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDeliveryRecursive4']


class ContractIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class ContractArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyContractArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    contract: Union[bool, 'ContractArgsFromDeliveryRecursive1']


class DeliveryIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    contract: Union[bool, 'ContractArgsFromDeliveryRecursive2']


class DeliveryIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    contract: Union[bool, 'ContractArgsFromDeliveryRecursive3']


class DeliveryIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    contract: Union[bool, 'ContractArgsFromDeliveryRecursive4']


class DeliveryIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class DeliveryArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyDeliveryArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']


class UserSkillIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']


class UserSkillIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']


class UserSkillIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']


class UserSkillIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class UserSkillArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyUserSkillArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive1']


class DatasetIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive2']


class DatasetIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive3']


class DatasetIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDeliveryRecursive4']


class DatasetIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class DatasetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyDatasetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive1']


class DashboardIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive2']


class DashboardIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive3']


class DashboardIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    ownerUser: Union[bool, 'UserArgsFromDeliveryRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDeliveryRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDeliveryRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDeliveryRecursive4']


class DashboardIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class DashboardArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyDashboardArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive1']


class DashboardDatasetIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive2']


class DashboardDatasetIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive3']


class DashboardDatasetIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive4']


class DashboardDatasetIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class DashboardDatasetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyDashboardDatasetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive1']


class WidgetIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive2']


class WidgetIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive3']


class WidgetIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive4']


class WidgetIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class WidgetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyWidgetArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive1']
    author: Union[bool, 'UserArgsFromDeliveryRecursive1']


class InsightIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive2']
    author: Union[bool, 'UserArgsFromDeliveryRecursive2']


class InsightIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive3']
    author: Union[bool, 'UserArgsFromDeliveryRecursive3']


class InsightIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dashboard: Union[bool, 'DashboardArgsFromDeliveryRecursive4']
    author: Union[bool, 'UserArgsFromDeliveryRecursive4']


class InsightIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class InsightArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyInsightArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive1']
    creator: Union[bool, 'UserArgsFromDeliveryRecursive1']


class MLModelIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive2']
    creator: Union[bool, 'UserArgsFromDeliveryRecursive2']


class MLModelIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive3']
    creator: Union[bool, 'UserArgsFromDeliveryRecursive3']


class MLModelIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    dataset: Union[bool, 'DatasetArgsFromDeliveryRecursive4']
    creator: Union[bool, 'UserArgsFromDeliveryRecursive4']


class MLModelIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class MLModelArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyMLModelArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']


class TransactionIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']


class TransactionIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']


class TransactionIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']


class TransactionIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class TransactionArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyTransactionArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive1']


class SubscriptionIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive2']


class SubscriptionIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive3']


class SubscriptionIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDeliveryRecursive4']


class SubscriptionIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class SubscriptionArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManySubscriptionArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']


class NotificationIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']


class NotificationIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']


class NotificationIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']


class NotificationIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class NotificationArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyNotificationArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive1']


class AuthTokenIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive2']


class AuthTokenIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive3']


class AuthTokenIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    user: Union[bool, 'UserArgsFromDeliveryRecursive4']


class AuthTokenIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class AuthTokenArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyAuthTokenArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    uploader: Union[bool, 'UserArgsFromDeliveryRecursive1']


class FileIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    uploader: Union[bool, 'UserArgsFromDeliveryRecursive2']


class FileIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    uploader: Union[bool, 'UserArgsFromDeliveryRecursive3']


class FileIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    uploader: Union[bool, 'UserArgsFromDeliveryRecursive4']


class FileIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class FileArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyFileArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromDelivery(TypedDict, total=False):
    """Relational arguments for Delivery"""
    actor: Union[bool, 'UserArgsFromDeliveryRecursive1']


class AuditLogIncludeFromDeliveryRecursive1(TypedDict, total=False):
    """Relational arguments for Delivery"""
    actor: Union[bool, 'UserArgsFromDeliveryRecursive2']


class AuditLogIncludeFromDeliveryRecursive2(TypedDict, total=False):
    """Relational arguments for Delivery"""
    actor: Union[bool, 'UserArgsFromDeliveryRecursive3']


class AuditLogIncludeFromDeliveryRecursive3(TypedDict, total=False):
    """Relational arguments for Delivery"""
    actor: Union[bool, 'UserArgsFromDeliveryRecursive4']


class AuditLogIncludeFromDeliveryRecursive4(TypedDict, total=False):
    """Relational arguments for Delivery"""

    

class AuditLogArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    
    

class FindManyAuditLogArgsFromDelivery(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromDeliveryRecursive1(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromDeliveryRecursive2(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromDeliveryRecursive3(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromDeliveryRecursive4(TypedDict, total=False):
    """Arguments for Delivery"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyDeliveryArgs = FindManyDeliveryArgsFromDelivery
FindFirstDeliveryArgs = FindManyDeliveryArgsFromDelivery


    

class DeliveryWhereInput(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    contractId: Union[_int, 'types.IntFilter']
    description: Union[None, _str, 'types.StringFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeFilter']
    files: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    contract: 'ContractRelationFilter'

    # should be noted that AND and NOT should be Union['DeliveryWhereInputRecursive1', List['DeliveryWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['DeliveryWhereInputRecursive1']
    OR: List['DeliveryWhereInputRecursive1']
    NOT: List['DeliveryWhereInputRecursive1']


class DeliveryWhereInputRecursive1(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    contractId: Union[_int, 'types.IntFilter']
    description: Union[None, _str, 'types.StringFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeFilter']
    files: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    contract: 'ContractRelationFilter'

    # should be noted that AND and NOT should be Union['DeliveryWhereInputRecursive2', List['DeliveryWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['DeliveryWhereInputRecursive2']
    OR: List['DeliveryWhereInputRecursive2']
    NOT: List['DeliveryWhereInputRecursive2']


class DeliveryWhereInputRecursive2(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    contractId: Union[_int, 'types.IntFilter']
    description: Union[None, _str, 'types.StringFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeFilter']
    files: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    contract: 'ContractRelationFilter'

    # should be noted that AND and NOT should be Union['DeliveryWhereInputRecursive3', List['DeliveryWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['DeliveryWhereInputRecursive3']
    OR: List['DeliveryWhereInputRecursive3']
    NOT: List['DeliveryWhereInputRecursive3']


class DeliveryWhereInputRecursive3(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    contractId: Union[_int, 'types.IntFilter']
    description: Union[None, _str, 'types.StringFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeFilter']
    files: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    contract: 'ContractRelationFilter'

    # should be noted that AND and NOT should be Union['DeliveryWhereInputRecursive4', List['DeliveryWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['DeliveryWhereInputRecursive4']
    OR: List['DeliveryWhereInputRecursive4']
    NOT: List['DeliveryWhereInputRecursive4']


class DeliveryWhereInputRecursive4(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    contractId: Union[_int, 'types.IntFilter']
    description: Union[None, _str, 'types.StringFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeFilter']
    files: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    contract: 'ContractRelationFilter'



# aggregate Delivery types


    

class DeliveryScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    contractId: Union[_int, 'types.IntWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    files: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DeliveryScalarWhereWithAggregatesInputRecursive1']
    OR: List['DeliveryScalarWhereWithAggregatesInputRecursive1']
    NOT: List['DeliveryScalarWhereWithAggregatesInputRecursive1']


class DeliveryScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    contractId: Union[_int, 'types.IntWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    files: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DeliveryScalarWhereWithAggregatesInputRecursive2']
    OR: List['DeliveryScalarWhereWithAggregatesInputRecursive2']
    NOT: List['DeliveryScalarWhereWithAggregatesInputRecursive2']


class DeliveryScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    contractId: Union[_int, 'types.IntWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    files: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DeliveryScalarWhereWithAggregatesInputRecursive3']
    OR: List['DeliveryScalarWhereWithAggregatesInputRecursive3']
    NOT: List['DeliveryScalarWhereWithAggregatesInputRecursive3']


class DeliveryScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    contractId: Union[_int, 'types.IntWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    files: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DeliveryScalarWhereWithAggregatesInputRecursive4']
    OR: List['DeliveryScalarWhereWithAggregatesInputRecursive4']
    NOT: List['DeliveryScalarWhereWithAggregatesInputRecursive4']


class DeliveryScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Delivery arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    contractId: Union[_int, 'types.IntWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    deliveredAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    files: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class DeliveryGroupByOutput(TypedDict, total=False):
    id: _int
    contractId: _int
    description: _str
    deliveredAt: datetime.datetime
    files: 'fields.Json'
    createdAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'DeliverySumAggregateOutput'
    _avg: 'DeliveryAvgAggregateOutput'
    _min: 'DeliveryMinAggregateOutput'
    _max: 'DeliveryMaxAggregateOutput'
    _count: 'DeliveryCountAggregateOutput'


class DeliveryAvgAggregateOutput(TypedDict, total=False):
    """Delivery output for aggregating averages"""
    id: float
    contractId: float


class DeliverySumAggregateOutput(TypedDict, total=False):
    """Delivery output for aggregating sums"""
    id: _int
    contractId: _int


class DeliveryScalarAggregateOutput(TypedDict, total=False):
    """Delivery output including scalar fields"""
    id: _int
    contractId: _int
    description: _str
    deliveredAt: datetime.datetime
    files: 'fields.Json'
    createdAt: datetime.datetime
    deletedAt: datetime.datetime


DeliveryMinAggregateOutput = DeliveryScalarAggregateOutput
DeliveryMaxAggregateOutput = DeliveryScalarAggregateOutput


class DeliveryMaxAggregateInput(TypedDict, total=False):
    """Delivery input for aggregating by max"""
    id: bool
    contractId: bool
    description: bool
    deliveredAt: bool
    files: bool
    createdAt: bool
    deletedAt: bool


class DeliveryMinAggregateInput(TypedDict, total=False):
    """Delivery input for aggregating by min"""
    id: bool
    contractId: bool
    description: bool
    deliveredAt: bool
    files: bool
    createdAt: bool
    deletedAt: bool


class DeliveryNumberAggregateInput(TypedDict, total=False):
    """Delivery input for aggregating numbers"""
    id: bool
    contractId: bool


DeliveryAvgAggregateInput = DeliveryNumberAggregateInput
DeliverySumAggregateInput = DeliveryNumberAggregateInput


DeliveryCountAggregateInput = TypedDict(
    'DeliveryCountAggregateInput',
    {
        'id': bool,
        'contractId': bool,
        'description': bool,
        'deliveredAt': bool,
        'files': bool,
        'createdAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

DeliveryCountAggregateOutput = TypedDict(
    'DeliveryCountAggregateOutput',
    {
        'id': int,
        'contractId': int,
        'description': int,
        'deliveredAt': int,
        'files': int,
        'createdAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


DeliveryKeys = Literal[
    'id',
    'contractId',
    'description',
    'deliveredAt',
    'files',
    'createdAt',
    'deletedAt',
    'contract',
]
DeliveryScalarFieldKeys = Literal[
    'id',
    'contractId',
    'description',
    'deliveredAt',
    'files',
    'createdAt',
    'deletedAt',
]
DeliveryScalarFieldKeysT = TypeVar('DeliveryScalarFieldKeysT', bound=DeliveryScalarFieldKeys)

DeliveryRelationalFieldKeys = Literal[
        'contract',
    ]

# UserSkill types

class UserSkillOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the UserSkill create method"""
    id: _int
    userId: _int
    createdAt: datetime.datetime
    user: 'UserCreateNestedWithoutRelationsInput'


class UserSkillCreateInput(UserSkillOptionalCreateInput):
    """Required arguments to the UserSkill create method"""
    name: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserSkillOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the UserSkill create method, without relations"""
    id: _int
    userId: _int
    createdAt: datetime.datetime


class UserSkillCreateWithoutRelationsInput(UserSkillOptionalCreateWithoutRelationsInput):
    """Required arguments to the UserSkill create method, without relations"""
    name: _str

class UserSkillConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'UserSkillCreateWithoutRelationsInput'
    where: 'UserSkillWhereUniqueInput'

class UserSkillCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserSkillCreateWithoutRelationsInput'
    connect: 'UserSkillWhereUniqueInput'
    connect_or_create: 'UserSkillConnectOrCreateWithoutRelationsInput'


class UserSkillCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserSkillCreateWithoutRelationsInput', List['UserSkillCreateWithoutRelationsInput']]
    connect: Union['UserSkillWhereUniqueInput', List['UserSkillWhereUniqueInput']]
    connect_or_create: Union['UserSkillConnectOrCreateWithoutRelationsInput', List['UserSkillConnectOrCreateWithoutRelationsInput']]

_UserSkillWhereUnique_id_Input = TypedDict(
    '_UserSkillWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

UserSkillWhereUniqueInput = _UserSkillWhereUnique_id_Input


class UserSkillUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    name: _str
    createdAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'


class UserSkillUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    name: _str
    createdAt: datetime.datetime


class UserSkillUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserSkillCreateWithoutRelationsInput']
    connect: List['UserSkillWhereUniqueInput']
    connect_or_create: List['UserSkillConnectOrCreateWithoutRelationsInput']
    set: List['UserSkillWhereUniqueInput']
    disconnect: List['UserSkillWhereUniqueInput']
    delete: List['UserSkillWhereUniqueInput']

    # TODO
    # update: List['UserSkillUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserSkillUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserSkillScalarWhereInput']
    # upsert: List['UserSkillUpserteWithWhereUniqueWithoutRelationsInput']


class UserSkillUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserSkillCreateWithoutRelationsInput'
    connect: 'UserSkillWhereUniqueInput'
    connect_or_create: 'UserSkillConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserSkillUpdateInput'
    # upsert: 'UserSkillUpsertWithoutRelationsInput'


class UserSkillUpsertInput(TypedDict):
    create: 'UserSkillCreateInput'
    update: 'UserSkillUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_UserSkill_id_OrderByInput = TypedDict(
    '_UserSkill_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_UserSkill_userId_OrderByInput = TypedDict(
    '_UserSkill_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_UserSkill_name_OrderByInput = TypedDict(
    '_UserSkill_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_UserSkill_createdAt_OrderByInput = TypedDict(
    '_UserSkill_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_UserSkill_RelevanceInner = TypedDict(
    '_UserSkill_RelevanceInner',
    {
        'fields': 'List[UserSkillScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_UserSkill_RelevanceOrderByInput = TypedDict(
    '_UserSkill_RelevanceOrderByInput',
    {
        '_relevance': '_UserSkill_RelevanceInner',
    },
    total=True
)

UserSkillOrderByInput = Union[
    '_UserSkill_id_OrderByInput',
    '_UserSkill_userId_OrderByInput',
    '_UserSkill_name_OrderByInput',
    '_UserSkill_createdAt_OrderByInput',
    '_UserSkill_RelevanceOrderByInput',
]



# recursive UserSkill types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserSkillRelationFilter = TypedDict(
    'UserSkillRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserSkillListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserSkillInclude(TypedDict, total=False):
    """UserSkill relational arguments"""
    user: Union[bool, 'UserArgsFromUserSkill']


    

class UserIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserSkillRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserSkillRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserSkillRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserSkillRecursive1']
    files: Union[bool, 'FindManyFileArgsFromUserSkillRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserSkillRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserSkillRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserSkillRecursive1']


class UserIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserSkillRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserSkillRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserSkillRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserSkillRecursive2']
    files: Union[bool, 'FindManyFileArgsFromUserSkillRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserSkillRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserSkillRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserSkillRecursive2']


class UserIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserSkillRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserSkillRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserSkillRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserSkillRecursive3']
    files: Union[bool, 'FindManyFileArgsFromUserSkillRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserSkillRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserSkillRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserSkillRecursive3']


class UserIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromUserSkillRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromUserSkillRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromUserSkillRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromUserSkillRecursive4']
    files: Union[bool, 'FindManyFileArgsFromUserSkillRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromUserSkillRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromUserSkillRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromUserSkillRecursive4']


class UserIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class UserArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyUserArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserSkillRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive1']


class OrganizationIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserSkillRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive2']


class OrganizationIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserSkillRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive3']


class OrganizationIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromUserSkillRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromUserSkillRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromUserSkillRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromUserSkillRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromUserSkillRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromUserSkillRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromUserSkillRecursive4']


class OrganizationIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class OrganizationArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyOrganizationArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    invitedBy: Union[bool, 'UserArgsFromUserSkillRecursive1']


class OrganizationMemberIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    invitedBy: Union[bool, 'UserArgsFromUserSkillRecursive2']


class OrganizationMemberIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    invitedBy: Union[bool, 'UserArgsFromUserSkillRecursive3']


class OrganizationMemberIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    invitedBy: Union[bool, 'UserArgsFromUserSkillRecursive4']


class OrganizationMemberIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class OrganizationMemberArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyOrganizationMemberArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive1']


class PathIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive2']


class PathIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive3']


class PathIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    modules: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive4']


class PathIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class PathArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyPathArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    instructor: Union[bool, 'UserArgsFromUserSkillRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromUserSkillRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive1']


class ModuleIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    instructor: Union[bool, 'UserArgsFromUserSkillRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromUserSkillRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive2']


class ModuleIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    instructor: Union[bool, 'UserArgsFromUserSkillRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromUserSkillRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive3']


class ModuleIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    instructor: Union[bool, 'UserArgsFromUserSkillRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromUserSkillRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromUserSkillRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromUserSkillRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromUserSkillRecursive4']


class ModuleIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class ModuleArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyModuleArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    path: Union[bool, 'PathArgsFromUserSkillRecursive1']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive1']


class PathModuleIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    path: Union[bool, 'PathArgsFromUserSkillRecursive2']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive2']


class PathModuleIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    path: Union[bool, 'PathArgsFromUserSkillRecursive3']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive3']


class PathModuleIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    path: Union[bool, 'PathArgsFromUserSkillRecursive4']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive4']


class PathModuleIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class PathModuleArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyPathModuleArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive1']


class LessonIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive2']


class LessonIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive3']


class LessonIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromUserSkillRecursive4']


class LessonIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class LessonArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyLessonArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive1']
    path: Union[bool, 'PathArgsFromUserSkillRecursive1']


class EnrollmentIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive2']
    path: Union[bool, 'PathArgsFromUserSkillRecursive2']


class EnrollmentIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive3']
    path: Union[bool, 'PathArgsFromUserSkillRecursive3']


class EnrollmentIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive4']
    path: Union[bool, 'PathArgsFromUserSkillRecursive4']


class EnrollmentIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class EnrollmentArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyEnrollmentArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    lesson: Union[bool, 'LessonArgsFromUserSkillRecursive1']


class LessonProgressIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    lesson: Union[bool, 'LessonArgsFromUserSkillRecursive2']


class LessonProgressIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    lesson: Union[bool, 'LessonArgsFromUserSkillRecursive3']


class LessonProgressIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    lesson: Union[bool, 'LessonArgsFromUserSkillRecursive4']


class LessonProgressIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class LessonProgressArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyLessonProgressArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive1']


class CertificateIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive2']


class CertificateIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive3']


class CertificateIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    module: Union[bool, 'ModuleArgsFromUserSkillRecursive4']


class CertificateIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class CertificateArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyCertificateArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromUserSkillRecursive1']


class ProjectIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromUserSkillRecursive2']


class ProjectIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromUserSkillRecursive3']


class ProjectIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    owner: Union[bool, 'UserArgsFromUserSkillRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromUserSkillRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromUserSkillRecursive4']


class ProjectIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class ProjectArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyProjectArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive1']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive1']


class ProposalIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive2']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive2']


class ProposalIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive3']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive3']


class ProposalIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive4']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive4']


class ProposalIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class ProposalArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyProposalArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive1']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive1']
    client: Union[bool, 'UserArgsFromUserSkillRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserSkillRecursive1']


class ContractIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive2']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive2']
    client: Union[bool, 'UserArgsFromUserSkillRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserSkillRecursive2']


class ContractIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive3']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive3']
    client: Union[bool, 'UserArgsFromUserSkillRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserSkillRecursive3']


class ContractIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    project: Union[bool, 'ProjectArgsFromUserSkillRecursive4']
    freelancer: Union[bool, 'UserArgsFromUserSkillRecursive4']
    client: Union[bool, 'UserArgsFromUserSkillRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromUserSkillRecursive4']


class ContractIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class ContractArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyContractArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    contract: Union[bool, 'ContractArgsFromUserSkillRecursive1']


class DeliveryIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    contract: Union[bool, 'ContractArgsFromUserSkillRecursive2']


class DeliveryIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    contract: Union[bool, 'ContractArgsFromUserSkillRecursive3']


class DeliveryIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    contract: Union[bool, 'ContractArgsFromUserSkillRecursive4']


class DeliveryIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class DeliveryArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyDeliveryArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']


class UserSkillIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']


class UserSkillIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']


class UserSkillIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']


class UserSkillIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class UserSkillArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyUserSkillArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive1']


class DatasetIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive2']


class DatasetIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive3']


class DatasetIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromUserSkillRecursive4']


class DatasetIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class DatasetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyDatasetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive1']


class DashboardIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive2']


class DashboardIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive3']


class DashboardIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    ownerUser: Union[bool, 'UserArgsFromUserSkillRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromUserSkillRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromUserSkillRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromUserSkillRecursive4']


class DashboardIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class DashboardArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyDashboardArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive1']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive1']


class DashboardDatasetIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive2']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive2']


class DashboardDatasetIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive3']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive3']


class DashboardDatasetIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive4']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive4']


class DashboardDatasetIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class DashboardDatasetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyDashboardDatasetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive1']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive1']


class WidgetIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive2']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive2']


class WidgetIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive3']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive3']


class WidgetIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive4']
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive4']


class WidgetIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class WidgetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyWidgetArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive1']
    author: Union[bool, 'UserArgsFromUserSkillRecursive1']


class InsightIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive2']
    author: Union[bool, 'UserArgsFromUserSkillRecursive2']


class InsightIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive3']
    author: Union[bool, 'UserArgsFromUserSkillRecursive3']


class InsightIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dashboard: Union[bool, 'DashboardArgsFromUserSkillRecursive4']
    author: Union[bool, 'UserArgsFromUserSkillRecursive4']


class InsightIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class InsightArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyInsightArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive1']
    creator: Union[bool, 'UserArgsFromUserSkillRecursive1']


class MLModelIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive2']
    creator: Union[bool, 'UserArgsFromUserSkillRecursive2']


class MLModelIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive3']
    creator: Union[bool, 'UserArgsFromUserSkillRecursive3']


class MLModelIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    dataset: Union[bool, 'DatasetArgsFromUserSkillRecursive4']
    creator: Union[bool, 'UserArgsFromUserSkillRecursive4']


class MLModelIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class MLModelArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyMLModelArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']


class TransactionIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']


class TransactionIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']


class TransactionIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']


class TransactionIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class TransactionArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyTransactionArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive1']


class SubscriptionIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive2']


class SubscriptionIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive3']


class SubscriptionIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']
    organization: Union[bool, 'OrganizationArgsFromUserSkillRecursive4']


class SubscriptionIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class SubscriptionArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManySubscriptionArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']


class NotificationIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']


class NotificationIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']


class NotificationIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']


class NotificationIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class NotificationArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyNotificationArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive1']


class AuthTokenIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive2']


class AuthTokenIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive3']


class AuthTokenIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    user: Union[bool, 'UserArgsFromUserSkillRecursive4']


class AuthTokenIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class AuthTokenArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyAuthTokenArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    uploader: Union[bool, 'UserArgsFromUserSkillRecursive1']


class FileIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    uploader: Union[bool, 'UserArgsFromUserSkillRecursive2']


class FileIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    uploader: Union[bool, 'UserArgsFromUserSkillRecursive3']


class FileIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    uploader: Union[bool, 'UserArgsFromUserSkillRecursive4']


class FileIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class FileArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyFileArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromUserSkill(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    actor: Union[bool, 'UserArgsFromUserSkillRecursive1']


class AuditLogIncludeFromUserSkillRecursive1(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    actor: Union[bool, 'UserArgsFromUserSkillRecursive2']


class AuditLogIncludeFromUserSkillRecursive2(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    actor: Union[bool, 'UserArgsFromUserSkillRecursive3']


class AuditLogIncludeFromUserSkillRecursive3(TypedDict, total=False):
    """Relational arguments for UserSkill"""
    actor: Union[bool, 'UserArgsFromUserSkillRecursive4']


class AuditLogIncludeFromUserSkillRecursive4(TypedDict, total=False):
    """Relational arguments for UserSkill"""

    

class AuditLogArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    
    

class FindManyAuditLogArgsFromUserSkill(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromUserSkillRecursive1(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromUserSkillRecursive2(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromUserSkillRecursive3(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromUserSkillRecursive4(TypedDict, total=False):
    """Arguments for UserSkill"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyUserSkillArgs = FindManyUserSkillArgsFromUserSkill
FindFirstUserSkillArgs = FindManyUserSkillArgsFromUserSkill


    

class UserSkillWhereInput(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['UserSkillWhereInputRecursive1', List['UserSkillWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserSkillWhereInputRecursive1']
    OR: List['UserSkillWhereInputRecursive1']
    NOT: List['UserSkillWhereInputRecursive1']


class UserSkillWhereInputRecursive1(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['UserSkillWhereInputRecursive2', List['UserSkillWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserSkillWhereInputRecursive2']
    OR: List['UserSkillWhereInputRecursive2']
    NOT: List['UserSkillWhereInputRecursive2']


class UserSkillWhereInputRecursive2(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['UserSkillWhereInputRecursive3', List['UserSkillWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserSkillWhereInputRecursive3']
    OR: List['UserSkillWhereInputRecursive3']
    NOT: List['UserSkillWhereInputRecursive3']


class UserSkillWhereInputRecursive3(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['UserSkillWhereInputRecursive4', List['UserSkillWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserSkillWhereInputRecursive4']
    OR: List['UserSkillWhereInputRecursive4']
    NOT: List['UserSkillWhereInputRecursive4']


class UserSkillWhereInputRecursive4(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'



# aggregate UserSkill types


    

class UserSkillScalarWhereWithAggregatesInput(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserSkillScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserSkillScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserSkillScalarWhereWithAggregatesInputRecursive1']


class UserSkillScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserSkillScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserSkillScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserSkillScalarWhereWithAggregatesInputRecursive2']


class UserSkillScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserSkillScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserSkillScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserSkillScalarWhereWithAggregatesInputRecursive3']


class UserSkillScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserSkillScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserSkillScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserSkillScalarWhereWithAggregatesInputRecursive4']


class UserSkillScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """UserSkill arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class UserSkillGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    name: _str
    createdAt: datetime.datetime
    _sum: 'UserSkillSumAggregateOutput'
    _avg: 'UserSkillAvgAggregateOutput'
    _min: 'UserSkillMinAggregateOutput'
    _max: 'UserSkillMaxAggregateOutput'
    _count: 'UserSkillCountAggregateOutput'


class UserSkillAvgAggregateOutput(TypedDict, total=False):
    """UserSkill output for aggregating averages"""
    id: float
    userId: float


class UserSkillSumAggregateOutput(TypedDict, total=False):
    """UserSkill output for aggregating sums"""
    id: _int
    userId: _int


class UserSkillScalarAggregateOutput(TypedDict, total=False):
    """UserSkill output including scalar fields"""
    id: _int
    userId: _int
    name: _str
    createdAt: datetime.datetime


UserSkillMinAggregateOutput = UserSkillScalarAggregateOutput
UserSkillMaxAggregateOutput = UserSkillScalarAggregateOutput


class UserSkillMaxAggregateInput(TypedDict, total=False):
    """UserSkill input for aggregating by max"""
    id: bool
    userId: bool
    name: bool
    createdAt: bool


class UserSkillMinAggregateInput(TypedDict, total=False):
    """UserSkill input for aggregating by min"""
    id: bool
    userId: bool
    name: bool
    createdAt: bool


class UserSkillNumberAggregateInput(TypedDict, total=False):
    """UserSkill input for aggregating numbers"""
    id: bool
    userId: bool


UserSkillAvgAggregateInput = UserSkillNumberAggregateInput
UserSkillSumAggregateInput = UserSkillNumberAggregateInput


UserSkillCountAggregateInput = TypedDict(
    'UserSkillCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'name': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

UserSkillCountAggregateOutput = TypedDict(
    'UserSkillCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'name': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


UserSkillKeys = Literal[
    'id',
    'userId',
    'name',
    'createdAt',
    'user',
]
UserSkillScalarFieldKeys = Literal[
    'id',
    'userId',
    'name',
    'createdAt',
]
UserSkillScalarFieldKeysT = TypeVar('UserSkillScalarFieldKeysT', bound=UserSkillScalarFieldKeys)

UserSkillRelationalFieldKeys = Literal[
        'user',
    ]

# Dataset types

class DatasetOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Dataset create method"""
    id: _int
    description: Optional[_str]
    userId: Optional[_int]
    organizationId: Optional[_int]
    sourceUrl: Optional[_str]
    filePath: Optional[_str]
    schema_: Optional['fields.Json']
    previewRows: Optional['fields.Json']
    metadata: Optional['fields.Json']
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerUser: 'UserCreateNestedWithoutRelationsInput'
    organization: 'OrganizationCreateNestedWithoutRelationsInput'
    widgets: 'WidgetCreateManyNestedWithoutRelationsInput'
    dashboardLinks: 'DashboardDatasetCreateManyNestedWithoutRelationsInput'
    mlModels: 'MLModelCreateManyNestedWithoutRelationsInput'


class DatasetCreateInput(DatasetOptionalCreateInput):
    """Required arguments to the Dataset create method"""
    name: _str
    slug: _str
    sourceType: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class DatasetOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Dataset create method, without relations"""
    id: _int
    description: Optional[_str]
    userId: Optional[_int]
    organizationId: Optional[_int]
    sourceUrl: Optional[_str]
    filePath: Optional[_str]
    schema_: Optional['fields.Json']
    previewRows: Optional['fields.Json']
    metadata: Optional['fields.Json']
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DatasetCreateWithoutRelationsInput(DatasetOptionalCreateWithoutRelationsInput):
    """Required arguments to the Dataset create method, without relations"""
    name: _str
    slug: _str
    sourceType: _str

class DatasetConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'DatasetCreateWithoutRelationsInput'
    where: 'DatasetWhereUniqueInput'

class DatasetCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'DatasetCreateWithoutRelationsInput'
    connect: 'DatasetWhereUniqueInput'
    connect_or_create: 'DatasetConnectOrCreateWithoutRelationsInput'


class DatasetCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['DatasetCreateWithoutRelationsInput', List['DatasetCreateWithoutRelationsInput']]
    connect: Union['DatasetWhereUniqueInput', List['DatasetWhereUniqueInput']]
    connect_or_create: Union['DatasetConnectOrCreateWithoutRelationsInput', List['DatasetConnectOrCreateWithoutRelationsInput']]

_DatasetWhereUnique_id_Input = TypedDict(
    '_DatasetWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_DatasetWhereUnique_slug_Input = TypedDict(
    '_DatasetWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

DatasetWhereUniqueInput = Union[
    '_DatasetWhereUnique_id_Input',
    '_DatasetWhereUnique_slug_Input',
]


class DatasetUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    name: _str
    slug: _str
    description: Optional[_str]
    sourceType: _str
    sourceUrl: Optional[_str]
    filePath: Optional[_str]
    schema_: Optional['fields.Json']
    previewRows: Optional['fields.Json']
    metadata: Optional['fields.Json']
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerUser: 'UserUpdateOneWithoutRelationsInput'
    organization: 'OrganizationUpdateOneWithoutRelationsInput'
    widgets: 'WidgetUpdateManyWithoutRelationsInput'
    dashboardLinks: 'DashboardDatasetUpdateManyWithoutRelationsInput'
    mlModels: 'MLModelUpdateManyWithoutRelationsInput'


class DatasetUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    name: _str
    slug: _str
    description: Optional[_str]
    sourceType: _str
    sourceUrl: Optional[_str]
    filePath: Optional[_str]
    schema_: Optional['fields.Json']
    previewRows: Optional['fields.Json']
    metadata: Optional['fields.Json']
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DatasetUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['DatasetCreateWithoutRelationsInput']
    connect: List['DatasetWhereUniqueInput']
    connect_or_create: List['DatasetConnectOrCreateWithoutRelationsInput']
    set: List['DatasetWhereUniqueInput']
    disconnect: List['DatasetWhereUniqueInput']
    delete: List['DatasetWhereUniqueInput']

    # TODO
    # update: List['DatasetUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['DatasetUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['DatasetScalarWhereInput']
    # upsert: List['DatasetUpserteWithWhereUniqueWithoutRelationsInput']


class DatasetUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'DatasetCreateWithoutRelationsInput'
    connect: 'DatasetWhereUniqueInput'
    connect_or_create: 'DatasetConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'DatasetUpdateInput'
    # upsert: 'DatasetUpsertWithoutRelationsInput'


class DatasetUpsertInput(TypedDict):
    create: 'DatasetCreateInput'
    update: 'DatasetUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Dataset_id_OrderByInput = TypedDict(
    '_Dataset_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Dataset_name_OrderByInput = TypedDict(
    '_Dataset_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Dataset_slug_OrderByInput = TypedDict(
    '_Dataset_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Dataset_description_OrderByInput = TypedDict(
    '_Dataset_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Dataset_userId_OrderByInput = TypedDict(
    '_Dataset_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Dataset_organizationId_OrderByInput = TypedDict(
    '_Dataset_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_Dataset_sourceType_OrderByInput = TypedDict(
    '_Dataset_sourceType_OrderByInput',
    {
        'sourceType': 'SortOrder',
    },
    total=True
)

_Dataset_sourceUrl_OrderByInput = TypedDict(
    '_Dataset_sourceUrl_OrderByInput',
    {
        'sourceUrl': 'SortOrder',
    },
    total=True
)

_Dataset_filePath_OrderByInput = TypedDict(
    '_Dataset_filePath_OrderByInput',
    {
        'filePath': 'SortOrder',
    },
    total=True
)

_Dataset_schema__OrderByInput = TypedDict(
    '_Dataset_schema__OrderByInput',
    {
        'schema_': 'SortOrder',
    },
    total=True
)

_Dataset_previewRows_OrderByInput = TypedDict(
    '_Dataset_previewRows_OrderByInput',
    {
        'previewRows': 'SortOrder',
    },
    total=True
)

_Dataset_metadata_OrderByInput = TypedDict(
    '_Dataset_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Dataset_processingStatus_OrderByInput = TypedDict(
    '_Dataset_processingStatus_OrderByInput',
    {
        'processingStatus': 'SortOrder',
    },
    total=True
)

_Dataset_createdAt_OrderByInput = TypedDict(
    '_Dataset_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Dataset_updatedAt_OrderByInput = TypedDict(
    '_Dataset_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Dataset_deletedAt_OrderByInput = TypedDict(
    '_Dataset_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Dataset_RelevanceInner = TypedDict(
    '_Dataset_RelevanceInner',
    {
        'fields': 'List[DatasetScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Dataset_RelevanceOrderByInput = TypedDict(
    '_Dataset_RelevanceOrderByInput',
    {
        '_relevance': '_Dataset_RelevanceInner',
    },
    total=True
)

DatasetOrderByInput = Union[
    '_Dataset_id_OrderByInput',
    '_Dataset_name_OrderByInput',
    '_Dataset_slug_OrderByInput',
    '_Dataset_description_OrderByInput',
    '_Dataset_userId_OrderByInput',
    '_Dataset_organizationId_OrderByInput',
    '_Dataset_sourceType_OrderByInput',
    '_Dataset_sourceUrl_OrderByInput',
    '_Dataset_filePath_OrderByInput',
    '_Dataset_schema__OrderByInput',
    '_Dataset_previewRows_OrderByInput',
    '_Dataset_metadata_OrderByInput',
    '_Dataset_processingStatus_OrderByInput',
    '_Dataset_createdAt_OrderByInput',
    '_Dataset_updatedAt_OrderByInput',
    '_Dataset_deletedAt_OrderByInput',
    '_Dataset_RelevanceOrderByInput',
]



# recursive Dataset types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

DatasetRelationFilter = TypedDict(
    'DatasetRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class DatasetListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class DatasetInclude(TypedDict, total=False):
    """Dataset relational arguments"""
    ownerUser: Union[bool, 'UserArgsFromDataset']
    organization: Union[bool, 'OrganizationArgsFromDataset']
    widgets: Union[bool, 'FindManyWidgetArgsFromDataset']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDataset']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDataset']


    

class UserIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDatasetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDatasetRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDatasetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromDatasetRecursive1']
    files: Union[bool, 'FindManyFileArgsFromDatasetRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDatasetRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDatasetRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDatasetRecursive1']


class UserIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDatasetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDatasetRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDatasetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromDatasetRecursive2']
    files: Union[bool, 'FindManyFileArgsFromDatasetRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDatasetRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDatasetRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDatasetRecursive2']


class UserIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDatasetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDatasetRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDatasetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromDatasetRecursive3']
    files: Union[bool, 'FindManyFileArgsFromDatasetRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDatasetRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDatasetRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDatasetRecursive3']


class UserIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDatasetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDatasetRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDatasetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromDatasetRecursive4']
    files: Union[bool, 'FindManyFileArgsFromDatasetRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDatasetRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDatasetRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDatasetRecursive4']


class UserIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class UserArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyUserArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDatasetRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive1']


class OrganizationIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDatasetRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive2']


class OrganizationIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDatasetRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive3']


class OrganizationIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDatasetRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDatasetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDatasetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDatasetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDatasetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDatasetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDatasetRecursive4']


class OrganizationIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class OrganizationArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyOrganizationArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    invitedBy: Union[bool, 'UserArgsFromDatasetRecursive1']


class OrganizationMemberIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    invitedBy: Union[bool, 'UserArgsFromDatasetRecursive2']


class OrganizationMemberIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    invitedBy: Union[bool, 'UserArgsFromDatasetRecursive3']


class OrganizationMemberIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    invitedBy: Union[bool, 'UserArgsFromDatasetRecursive4']


class OrganizationMemberIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class OrganizationMemberArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyOrganizationMemberArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive1']


class PathIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive2']


class PathIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive3']


class PathIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive4']


class PathIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class PathArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyPathArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    instructor: Union[bool, 'UserArgsFromDatasetRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromDatasetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive1']


class ModuleIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    instructor: Union[bool, 'UserArgsFromDatasetRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromDatasetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive2']


class ModuleIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    instructor: Union[bool, 'UserArgsFromDatasetRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromDatasetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive3']


class ModuleIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    instructor: Union[bool, 'UserArgsFromDatasetRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromDatasetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDatasetRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDatasetRecursive4']


class ModuleIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class ModuleArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyModuleArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    path: Union[bool, 'PathArgsFromDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive1']


class PathModuleIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    path: Union[bool, 'PathArgsFromDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive2']


class PathModuleIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    path: Union[bool, 'PathArgsFromDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive3']


class PathModuleIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    path: Union[bool, 'PathArgsFromDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive4']


class PathModuleIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class PathModuleArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyPathModuleArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    module: Union[bool, 'ModuleArgsFromDatasetRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive1']


class LessonIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    module: Union[bool, 'ModuleArgsFromDatasetRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive2']


class LessonIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    module: Union[bool, 'ModuleArgsFromDatasetRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive3']


class LessonIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    module: Union[bool, 'ModuleArgsFromDatasetRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDatasetRecursive4']


class LessonIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class LessonArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyLessonArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive1']
    path: Union[bool, 'PathArgsFromDatasetRecursive1']


class EnrollmentIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive2']
    path: Union[bool, 'PathArgsFromDatasetRecursive2']


class EnrollmentIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive3']
    path: Union[bool, 'PathArgsFromDatasetRecursive3']


class EnrollmentIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive4']
    path: Union[bool, 'PathArgsFromDatasetRecursive4']


class EnrollmentIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class EnrollmentArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyEnrollmentArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    lesson: Union[bool, 'LessonArgsFromDatasetRecursive1']


class LessonProgressIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    lesson: Union[bool, 'LessonArgsFromDatasetRecursive2']


class LessonProgressIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    lesson: Union[bool, 'LessonArgsFromDatasetRecursive3']


class LessonProgressIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    lesson: Union[bool, 'LessonArgsFromDatasetRecursive4']


class LessonProgressIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class LessonProgressArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyLessonProgressArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive1']


class CertificateIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive2']


class CertificateIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive3']


class CertificateIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDatasetRecursive4']


class CertificateIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class CertificateArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyCertificateArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromDatasetRecursive1']


class ProjectIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromDatasetRecursive2']


class ProjectIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromDatasetRecursive3']


class ProjectIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    owner: Union[bool, 'UserArgsFromDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDatasetRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromDatasetRecursive4']


class ProjectIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class ProjectArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyProjectArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive1']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive1']


class ProposalIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive2']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive2']


class ProposalIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive3']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive3']


class ProposalIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive4']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive4']


class ProposalIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class ProposalArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyProposalArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive1']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive1']
    client: Union[bool, 'UserArgsFromDatasetRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDatasetRecursive1']


class ContractIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive2']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive2']
    client: Union[bool, 'UserArgsFromDatasetRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDatasetRecursive2']


class ContractIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive3']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive3']
    client: Union[bool, 'UserArgsFromDatasetRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDatasetRecursive3']


class ContractIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    project: Union[bool, 'ProjectArgsFromDatasetRecursive4']
    freelancer: Union[bool, 'UserArgsFromDatasetRecursive4']
    client: Union[bool, 'UserArgsFromDatasetRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDatasetRecursive4']


class ContractIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class ContractArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyContractArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    contract: Union[bool, 'ContractArgsFromDatasetRecursive1']


class DeliveryIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    contract: Union[bool, 'ContractArgsFromDatasetRecursive2']


class DeliveryIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    contract: Union[bool, 'ContractArgsFromDatasetRecursive3']


class DeliveryIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    contract: Union[bool, 'ContractArgsFromDatasetRecursive4']


class DeliveryIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class DeliveryArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyDeliveryArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']


class UserSkillIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']


class UserSkillIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']


class UserSkillIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']


class UserSkillIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class UserSkillArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyUserSkillArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive1']


class DatasetIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive2']


class DatasetIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive3']


class DatasetIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDatasetRecursive4']


class DatasetIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class DatasetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyDatasetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive1']


class DashboardIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive2']


class DashboardIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive3']


class DashboardIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    ownerUser: Union[bool, 'UserArgsFromDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDatasetRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDatasetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDatasetRecursive4']


class DashboardIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class DashboardArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyDashboardArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive1']


class DashboardDatasetIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive2']


class DashboardDatasetIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive3']


class DashboardDatasetIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive4']


class DashboardDatasetIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class DashboardDatasetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyDashboardDatasetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive1']


class WidgetIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive2']


class WidgetIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive3']


class WidgetIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive4']


class WidgetIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class WidgetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyWidgetArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive1']
    author: Union[bool, 'UserArgsFromDatasetRecursive1']


class InsightIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive2']
    author: Union[bool, 'UserArgsFromDatasetRecursive2']


class InsightIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive3']
    author: Union[bool, 'UserArgsFromDatasetRecursive3']


class InsightIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dashboard: Union[bool, 'DashboardArgsFromDatasetRecursive4']
    author: Union[bool, 'UserArgsFromDatasetRecursive4']


class InsightIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class InsightArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyInsightArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive1']
    creator: Union[bool, 'UserArgsFromDatasetRecursive1']


class MLModelIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive2']
    creator: Union[bool, 'UserArgsFromDatasetRecursive2']


class MLModelIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive3']
    creator: Union[bool, 'UserArgsFromDatasetRecursive3']


class MLModelIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    dataset: Union[bool, 'DatasetArgsFromDatasetRecursive4']
    creator: Union[bool, 'UserArgsFromDatasetRecursive4']


class MLModelIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class MLModelArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyMLModelArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']


class TransactionIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']


class TransactionIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']


class TransactionIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']


class TransactionIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class TransactionArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyTransactionArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive1']


class SubscriptionIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive2']


class SubscriptionIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive3']


class SubscriptionIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDatasetRecursive4']


class SubscriptionIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class SubscriptionArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManySubscriptionArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']


class NotificationIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']


class NotificationIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']


class NotificationIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']


class NotificationIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class NotificationArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyNotificationArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive1']


class AuthTokenIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive2']


class AuthTokenIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive3']


class AuthTokenIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    user: Union[bool, 'UserArgsFromDatasetRecursive4']


class AuthTokenIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class AuthTokenArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyAuthTokenArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    uploader: Union[bool, 'UserArgsFromDatasetRecursive1']


class FileIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    uploader: Union[bool, 'UserArgsFromDatasetRecursive2']


class FileIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    uploader: Union[bool, 'UserArgsFromDatasetRecursive3']


class FileIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    uploader: Union[bool, 'UserArgsFromDatasetRecursive4']


class FileIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class FileArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyFileArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromDataset(TypedDict, total=False):
    """Relational arguments for Dataset"""
    actor: Union[bool, 'UserArgsFromDatasetRecursive1']


class AuditLogIncludeFromDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for Dataset"""
    actor: Union[bool, 'UserArgsFromDatasetRecursive2']


class AuditLogIncludeFromDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for Dataset"""
    actor: Union[bool, 'UserArgsFromDatasetRecursive3']


class AuditLogIncludeFromDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for Dataset"""
    actor: Union[bool, 'UserArgsFromDatasetRecursive4']


class AuditLogIncludeFromDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for Dataset"""

    

class AuditLogArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    
    

class FindManyAuditLogArgsFromDataset(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromDatasetRecursive1(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromDatasetRecursive2(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromDatasetRecursive3(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromDatasetRecursive4(TypedDict, total=False):
    """Arguments for Dataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyDatasetArgs = FindManyDatasetArgsFromDataset
FindFirstDatasetArgs = FindManyDatasetArgsFromDataset


    

class DatasetWhereInput(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    sourceType: Union[_str, 'types.StringFilter']
    sourceUrl: Union[None, _str, 'types.StringFilter']
    filePath: Union[None, _str, 'types.StringFilter']
    schema_: Union[None, 'fields.Json', 'types.JsonFilter']
    previewRows: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    dashboardLinks: 'DashboardDatasetListRelationFilter'
    mlModels: 'MLModelListRelationFilter'

    # should be noted that AND and NOT should be Union['DatasetWhereInputRecursive1', List['DatasetWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['DatasetWhereInputRecursive1']
    OR: List['DatasetWhereInputRecursive1']
    NOT: List['DatasetWhereInputRecursive1']


class DatasetWhereInputRecursive1(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    sourceType: Union[_str, 'types.StringFilter']
    sourceUrl: Union[None, _str, 'types.StringFilter']
    filePath: Union[None, _str, 'types.StringFilter']
    schema_: Union[None, 'fields.Json', 'types.JsonFilter']
    previewRows: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    dashboardLinks: 'DashboardDatasetListRelationFilter'
    mlModels: 'MLModelListRelationFilter'

    # should be noted that AND and NOT should be Union['DatasetWhereInputRecursive2', List['DatasetWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['DatasetWhereInputRecursive2']
    OR: List['DatasetWhereInputRecursive2']
    NOT: List['DatasetWhereInputRecursive2']


class DatasetWhereInputRecursive2(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    sourceType: Union[_str, 'types.StringFilter']
    sourceUrl: Union[None, _str, 'types.StringFilter']
    filePath: Union[None, _str, 'types.StringFilter']
    schema_: Union[None, 'fields.Json', 'types.JsonFilter']
    previewRows: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    dashboardLinks: 'DashboardDatasetListRelationFilter'
    mlModels: 'MLModelListRelationFilter'

    # should be noted that AND and NOT should be Union['DatasetWhereInputRecursive3', List['DatasetWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['DatasetWhereInputRecursive3']
    OR: List['DatasetWhereInputRecursive3']
    NOT: List['DatasetWhereInputRecursive3']


class DatasetWhereInputRecursive3(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    sourceType: Union[_str, 'types.StringFilter']
    sourceUrl: Union[None, _str, 'types.StringFilter']
    filePath: Union[None, _str, 'types.StringFilter']
    schema_: Union[None, 'fields.Json', 'types.JsonFilter']
    previewRows: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    dashboardLinks: 'DashboardDatasetListRelationFilter'
    mlModels: 'MLModelListRelationFilter'

    # should be noted that AND and NOT should be Union['DatasetWhereInputRecursive4', List['DatasetWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['DatasetWhereInputRecursive4']
    OR: List['DatasetWhereInputRecursive4']
    NOT: List['DatasetWhereInputRecursive4']


class DatasetWhereInputRecursive4(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    sourceType: Union[_str, 'types.StringFilter']
    sourceUrl: Union[None, _str, 'types.StringFilter']
    filePath: Union[None, _str, 'types.StringFilter']
    schema_: Union[None, 'fields.Json', 'types.JsonFilter']
    previewRows: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    dashboardLinks: 'DashboardDatasetListRelationFilter'
    mlModels: 'MLModelListRelationFilter'



# aggregate Dataset types


    

class DatasetScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    sourceType: Union[_str, 'types.StringWithAggregatesFilter']
    sourceUrl: Union[_str, 'types.StringWithAggregatesFilter']
    filePath: Union[_str, 'types.StringWithAggregatesFilter']
    schema_: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    previewRows: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DatasetScalarWhereWithAggregatesInputRecursive1']
    OR: List['DatasetScalarWhereWithAggregatesInputRecursive1']
    NOT: List['DatasetScalarWhereWithAggregatesInputRecursive1']


class DatasetScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    sourceType: Union[_str, 'types.StringWithAggregatesFilter']
    sourceUrl: Union[_str, 'types.StringWithAggregatesFilter']
    filePath: Union[_str, 'types.StringWithAggregatesFilter']
    schema_: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    previewRows: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DatasetScalarWhereWithAggregatesInputRecursive2']
    OR: List['DatasetScalarWhereWithAggregatesInputRecursive2']
    NOT: List['DatasetScalarWhereWithAggregatesInputRecursive2']


class DatasetScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    sourceType: Union[_str, 'types.StringWithAggregatesFilter']
    sourceUrl: Union[_str, 'types.StringWithAggregatesFilter']
    filePath: Union[_str, 'types.StringWithAggregatesFilter']
    schema_: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    previewRows: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DatasetScalarWhereWithAggregatesInputRecursive3']
    OR: List['DatasetScalarWhereWithAggregatesInputRecursive3']
    NOT: List['DatasetScalarWhereWithAggregatesInputRecursive3']


class DatasetScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    sourceType: Union[_str, 'types.StringWithAggregatesFilter']
    sourceUrl: Union[_str, 'types.StringWithAggregatesFilter']
    filePath: Union[_str, 'types.StringWithAggregatesFilter']
    schema_: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    previewRows: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DatasetScalarWhereWithAggregatesInputRecursive4']
    OR: List['DatasetScalarWhereWithAggregatesInputRecursive4']
    NOT: List['DatasetScalarWhereWithAggregatesInputRecursive4']


class DatasetScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Dataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    sourceType: Union[_str, 'types.StringWithAggregatesFilter']
    sourceUrl: Union[_str, 'types.StringWithAggregatesFilter']
    filePath: Union[_str, 'types.StringWithAggregatesFilter']
    schema_: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    previewRows: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    processingStatus: 'enums.DatasetStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class DatasetGroupByOutput(TypedDict, total=False):
    id: _int
    name: _str
    slug: _str
    description: _str
    userId: _int
    organizationId: _int
    sourceType: _str
    sourceUrl: _str
    filePath: _str
    schema_: 'fields.Json'
    previewRows: 'fields.Json'
    metadata: 'fields.Json'
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'DatasetSumAggregateOutput'
    _avg: 'DatasetAvgAggregateOutput'
    _min: 'DatasetMinAggregateOutput'
    _max: 'DatasetMaxAggregateOutput'
    _count: 'DatasetCountAggregateOutput'


class DatasetAvgAggregateOutput(TypedDict, total=False):
    """Dataset output for aggregating averages"""
    id: float
    userId: float
    organizationId: float


class DatasetSumAggregateOutput(TypedDict, total=False):
    """Dataset output for aggregating sums"""
    id: _int
    userId: _int
    organizationId: _int


class DatasetScalarAggregateOutput(TypedDict, total=False):
    """Dataset output including scalar fields"""
    id: _int
    name: _str
    slug: _str
    description: _str
    userId: _int
    organizationId: _int
    sourceType: _str
    sourceUrl: _str
    filePath: _str
    schema_: 'fields.Json'
    previewRows: 'fields.Json'
    metadata: 'fields.Json'
    processingStatus: 'enums.DatasetStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


DatasetMinAggregateOutput = DatasetScalarAggregateOutput
DatasetMaxAggregateOutput = DatasetScalarAggregateOutput


class DatasetMaxAggregateInput(TypedDict, total=False):
    """Dataset input for aggregating by max"""
    id: bool
    name: bool
    slug: bool
    description: bool
    userId: bool
    organizationId: bool
    sourceType: bool
    sourceUrl: bool
    filePath: bool
    schema_: bool
    previewRows: bool
    metadata: bool
    processingStatus: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class DatasetMinAggregateInput(TypedDict, total=False):
    """Dataset input for aggregating by min"""
    id: bool
    name: bool
    slug: bool
    description: bool
    userId: bool
    organizationId: bool
    sourceType: bool
    sourceUrl: bool
    filePath: bool
    schema_: bool
    previewRows: bool
    metadata: bool
    processingStatus: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class DatasetNumberAggregateInput(TypedDict, total=False):
    """Dataset input for aggregating numbers"""
    id: bool
    userId: bool
    organizationId: bool


DatasetAvgAggregateInput = DatasetNumberAggregateInput
DatasetSumAggregateInput = DatasetNumberAggregateInput


DatasetCountAggregateInput = TypedDict(
    'DatasetCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'slug': bool,
        'description': bool,
        'userId': bool,
        'organizationId': bool,
        'sourceType': bool,
        'sourceUrl': bool,
        'filePath': bool,
        'schema_': bool,
        'previewRows': bool,
        'metadata': bool,
        'processingStatus': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

DatasetCountAggregateOutput = TypedDict(
    'DatasetCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'slug': int,
        'description': int,
        'userId': int,
        'organizationId': int,
        'sourceType': int,
        'sourceUrl': int,
        'filePath': int,
        'schema_': int,
        'previewRows': int,
        'metadata': int,
        'processingStatus': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


DatasetKeys = Literal[
    'id',
    'name',
    'slug',
    'description',
    'userId',
    'organizationId',
    'sourceType',
    'sourceUrl',
    'filePath',
    'schema_',
    'previewRows',
    'metadata',
    'processingStatus',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'ownerUser',
    'organization',
    'widgets',
    'dashboardLinks',
    'mlModels',
]
DatasetScalarFieldKeys = Literal[
    'id',
    'name',
    'slug',
    'description',
    'userId',
    'organizationId',
    'sourceType',
    'sourceUrl',
    'filePath',
    'schema_',
    'previewRows',
    'metadata',
    'processingStatus',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
DatasetScalarFieldKeysT = TypeVar('DatasetScalarFieldKeysT', bound=DatasetScalarFieldKeys)

DatasetRelationalFieldKeys = Literal[
        'ownerUser',
        'organization',
        'widgets',
        'dashboardLinks',
        'mlModels',
    ]

# Dashboard types

class DashboardOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Dashboard create method"""
    id: _int
    description: Optional[_str]
    ownerId: Optional[_int]
    organizationId: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerUser: 'UserCreateNestedWithoutRelationsInput'
    organization: 'OrganizationCreateNestedWithoutRelationsInput'
    widgets: 'WidgetCreateManyNestedWithoutRelationsInput'
    datasetLinks: 'DashboardDatasetCreateManyNestedWithoutRelationsInput'
    insights: 'InsightCreateManyNestedWithoutRelationsInput'


class DashboardCreateInput(DashboardOptionalCreateInput):
    """Required arguments to the Dashboard create method"""
    title: _str
    slug: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class DashboardOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Dashboard create method, without relations"""
    id: _int
    description: Optional[_str]
    ownerId: Optional[_int]
    organizationId: Optional[_int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DashboardCreateWithoutRelationsInput(DashboardOptionalCreateWithoutRelationsInput):
    """Required arguments to the Dashboard create method, without relations"""
    title: _str
    slug: _str

class DashboardConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'DashboardCreateWithoutRelationsInput'
    where: 'DashboardWhereUniqueInput'

class DashboardCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'DashboardCreateWithoutRelationsInput'
    connect: 'DashboardWhereUniqueInput'
    connect_or_create: 'DashboardConnectOrCreateWithoutRelationsInput'


class DashboardCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['DashboardCreateWithoutRelationsInput', List['DashboardCreateWithoutRelationsInput']]
    connect: Union['DashboardWhereUniqueInput', List['DashboardWhereUniqueInput']]
    connect_or_create: Union['DashboardConnectOrCreateWithoutRelationsInput', List['DashboardConnectOrCreateWithoutRelationsInput']]

_DashboardWhereUnique_id_Input = TypedDict(
    '_DashboardWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_DashboardWhereUnique_slug_Input = TypedDict(
    '_DashboardWhereUnique_slug_Input',
    {
        'slug': '_str',
    },
    total=True
)

DashboardWhereUniqueInput = Union[
    '_DashboardWhereUnique_id_Input',
    '_DashboardWhereUnique_slug_Input',
]


class DashboardUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    ownerUser: 'UserUpdateOneWithoutRelationsInput'
    organization: 'OrganizationUpdateOneWithoutRelationsInput'
    widgets: 'WidgetUpdateManyWithoutRelationsInput'
    datasetLinks: 'DashboardDatasetUpdateManyWithoutRelationsInput'
    insights: 'InsightUpdateManyWithoutRelationsInput'


class DashboardUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    title: _str
    slug: _str
    description: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class DashboardUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['DashboardCreateWithoutRelationsInput']
    connect: List['DashboardWhereUniqueInput']
    connect_or_create: List['DashboardConnectOrCreateWithoutRelationsInput']
    set: List['DashboardWhereUniqueInput']
    disconnect: List['DashboardWhereUniqueInput']
    delete: List['DashboardWhereUniqueInput']

    # TODO
    # update: List['DashboardUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['DashboardUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['DashboardScalarWhereInput']
    # upsert: List['DashboardUpserteWithWhereUniqueWithoutRelationsInput']


class DashboardUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'DashboardCreateWithoutRelationsInput'
    connect: 'DashboardWhereUniqueInput'
    connect_or_create: 'DashboardConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'DashboardUpdateInput'
    # upsert: 'DashboardUpsertWithoutRelationsInput'


class DashboardUpsertInput(TypedDict):
    create: 'DashboardCreateInput'
    update: 'DashboardUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Dashboard_id_OrderByInput = TypedDict(
    '_Dashboard_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Dashboard_title_OrderByInput = TypedDict(
    '_Dashboard_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Dashboard_slug_OrderByInput = TypedDict(
    '_Dashboard_slug_OrderByInput',
    {
        'slug': 'SortOrder',
    },
    total=True
)

_Dashboard_description_OrderByInput = TypedDict(
    '_Dashboard_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Dashboard_ownerId_OrderByInput = TypedDict(
    '_Dashboard_ownerId_OrderByInput',
    {
        'ownerId': 'SortOrder',
    },
    total=True
)

_Dashboard_organizationId_OrderByInput = TypedDict(
    '_Dashboard_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_Dashboard_createdAt_OrderByInput = TypedDict(
    '_Dashboard_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Dashboard_updatedAt_OrderByInput = TypedDict(
    '_Dashboard_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Dashboard_deletedAt_OrderByInput = TypedDict(
    '_Dashboard_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Dashboard_RelevanceInner = TypedDict(
    '_Dashboard_RelevanceInner',
    {
        'fields': 'List[DashboardScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Dashboard_RelevanceOrderByInput = TypedDict(
    '_Dashboard_RelevanceOrderByInput',
    {
        '_relevance': '_Dashboard_RelevanceInner',
    },
    total=True
)

DashboardOrderByInput = Union[
    '_Dashboard_id_OrderByInput',
    '_Dashboard_title_OrderByInput',
    '_Dashboard_slug_OrderByInput',
    '_Dashboard_description_OrderByInput',
    '_Dashboard_ownerId_OrderByInput',
    '_Dashboard_organizationId_OrderByInput',
    '_Dashboard_createdAt_OrderByInput',
    '_Dashboard_updatedAt_OrderByInput',
    '_Dashboard_deletedAt_OrderByInput',
    '_Dashboard_RelevanceOrderByInput',
]



# recursive Dashboard types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

DashboardRelationFilter = TypedDict(
    'DashboardRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class DashboardListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class DashboardInclude(TypedDict, total=False):
    """Dashboard relational arguments"""
    ownerUser: Union[bool, 'UserArgsFromDashboard']
    organization: Union[bool, 'OrganizationArgsFromDashboard']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboard']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboard']
    insights: Union[bool, 'FindManyInsightArgsFromDashboard']


    

class UserIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardRecursive1']
    files: Union[bool, 'FindManyFileArgsFromDashboardRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardRecursive1']


class UserIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardRecursive2']
    files: Union[bool, 'FindManyFileArgsFromDashboardRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardRecursive2']


class UserIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardRecursive3']
    files: Union[bool, 'FindManyFileArgsFromDashboardRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardRecursive3']


class UserIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardRecursive4']
    files: Union[bool, 'FindManyFileArgsFromDashboardRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardRecursive4']


class UserIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class UserArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyUserArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive1']


class OrganizationIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive2']


class OrganizationIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive3']


class OrganizationIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardRecursive4']


class OrganizationIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class OrganizationArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyOrganizationArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    invitedBy: Union[bool, 'UserArgsFromDashboardRecursive1']


class OrganizationMemberIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    invitedBy: Union[bool, 'UserArgsFromDashboardRecursive2']


class OrganizationMemberIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    invitedBy: Union[bool, 'UserArgsFromDashboardRecursive3']


class OrganizationMemberIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    invitedBy: Union[bool, 'UserArgsFromDashboardRecursive4']


class OrganizationMemberIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class OrganizationMemberArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyOrganizationMemberArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive1']


class PathIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive2']


class PathIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive3']


class PathIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive4']


class PathIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class PathArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyPathArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    instructor: Union[bool, 'UserArgsFromDashboardRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive1']


class ModuleIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    instructor: Union[bool, 'UserArgsFromDashboardRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive2']


class ModuleIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    instructor: Union[bool, 'UserArgsFromDashboardRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive3']


class ModuleIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    instructor: Union[bool, 'UserArgsFromDashboardRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardRecursive4']


class ModuleIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class ModuleArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyModuleArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    path: Union[bool, 'PathArgsFromDashboardRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive1']


class PathModuleIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    path: Union[bool, 'PathArgsFromDashboardRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive2']


class PathModuleIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    path: Union[bool, 'PathArgsFromDashboardRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive3']


class PathModuleIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    path: Union[bool, 'PathArgsFromDashboardRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive4']


class PathModuleIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class PathModuleArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyPathModuleArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    module: Union[bool, 'ModuleArgsFromDashboardRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive1']


class LessonIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    module: Union[bool, 'ModuleArgsFromDashboardRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive2']


class LessonIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    module: Union[bool, 'ModuleArgsFromDashboardRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive3']


class LessonIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    module: Union[bool, 'ModuleArgsFromDashboardRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardRecursive4']


class LessonIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class LessonArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyLessonArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive1']
    path: Union[bool, 'PathArgsFromDashboardRecursive1']


class EnrollmentIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive2']
    path: Union[bool, 'PathArgsFromDashboardRecursive2']


class EnrollmentIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive3']
    path: Union[bool, 'PathArgsFromDashboardRecursive3']


class EnrollmentIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive4']
    path: Union[bool, 'PathArgsFromDashboardRecursive4']


class EnrollmentIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class EnrollmentArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyEnrollmentArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    lesson: Union[bool, 'LessonArgsFromDashboardRecursive1']


class LessonProgressIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    lesson: Union[bool, 'LessonArgsFromDashboardRecursive2']


class LessonProgressIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    lesson: Union[bool, 'LessonArgsFromDashboardRecursive3']


class LessonProgressIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    lesson: Union[bool, 'LessonArgsFromDashboardRecursive4']


class LessonProgressIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class LessonProgressArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyLessonProgressArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive1']


class CertificateIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive2']


class CertificateIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive3']


class CertificateIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardRecursive4']


class CertificateIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class CertificateArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyCertificateArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardRecursive1']


class ProjectIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardRecursive2']


class ProjectIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardRecursive3']


class ProjectIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    owner: Union[bool, 'UserArgsFromDashboardRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardRecursive4']


class ProjectIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class ProjectArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyProjectArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive1']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive1']


class ProposalIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive2']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive2']


class ProposalIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive3']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive3']


class ProposalIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive4']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive4']


class ProposalIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class ProposalArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyProposalArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive1']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive1']
    client: Union[bool, 'UserArgsFromDashboardRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardRecursive1']


class ContractIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive2']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive2']
    client: Union[bool, 'UserArgsFromDashboardRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardRecursive2']


class ContractIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive3']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive3']
    client: Union[bool, 'UserArgsFromDashboardRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardRecursive3']


class ContractIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    project: Union[bool, 'ProjectArgsFromDashboardRecursive4']
    freelancer: Union[bool, 'UserArgsFromDashboardRecursive4']
    client: Union[bool, 'UserArgsFromDashboardRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardRecursive4']


class ContractIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class ContractArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyContractArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    contract: Union[bool, 'ContractArgsFromDashboardRecursive1']


class DeliveryIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    contract: Union[bool, 'ContractArgsFromDashboardRecursive2']


class DeliveryIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    contract: Union[bool, 'ContractArgsFromDashboardRecursive3']


class DeliveryIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    contract: Union[bool, 'ContractArgsFromDashboardRecursive4']


class DeliveryIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class DeliveryArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyDeliveryArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']


class UserSkillIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']


class UserSkillIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']


class UserSkillIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']


class UserSkillIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class UserSkillArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyUserSkillArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive1']


class DatasetIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive2']


class DatasetIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive3']


class DatasetIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardRecursive4']


class DatasetIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class DatasetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyDatasetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive1']


class DashboardIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive2']


class DashboardIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive3']


class DashboardIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    ownerUser: Union[bool, 'UserArgsFromDashboardRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardRecursive4']


class DashboardIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class DashboardArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyDashboardArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive1']


class DashboardDatasetIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive2']


class DashboardDatasetIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive3']


class DashboardDatasetIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive4']


class DashboardDatasetIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class DashboardDatasetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyDashboardDatasetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive1']


class WidgetIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive2']


class WidgetIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive3']


class WidgetIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive4']


class WidgetIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class WidgetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyWidgetArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive1']
    author: Union[bool, 'UserArgsFromDashboardRecursive1']


class InsightIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive2']
    author: Union[bool, 'UserArgsFromDashboardRecursive2']


class InsightIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive3']
    author: Union[bool, 'UserArgsFromDashboardRecursive3']


class InsightIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardRecursive4']
    author: Union[bool, 'UserArgsFromDashboardRecursive4']


class InsightIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class InsightArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyInsightArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive1']
    creator: Union[bool, 'UserArgsFromDashboardRecursive1']


class MLModelIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive2']
    creator: Union[bool, 'UserArgsFromDashboardRecursive2']


class MLModelIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive3']
    creator: Union[bool, 'UserArgsFromDashboardRecursive3']


class MLModelIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    dataset: Union[bool, 'DatasetArgsFromDashboardRecursive4']
    creator: Union[bool, 'UserArgsFromDashboardRecursive4']


class MLModelIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class MLModelArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyMLModelArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']


class TransactionIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']


class TransactionIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']


class TransactionIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']


class TransactionIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class TransactionArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyTransactionArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive1']


class SubscriptionIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive2']


class SubscriptionIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive3']


class SubscriptionIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardRecursive4']


class SubscriptionIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class SubscriptionArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManySubscriptionArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']


class NotificationIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']


class NotificationIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']


class NotificationIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']


class NotificationIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class NotificationArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyNotificationArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive1']


class AuthTokenIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive2']


class AuthTokenIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive3']


class AuthTokenIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    user: Union[bool, 'UserArgsFromDashboardRecursive4']


class AuthTokenIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class AuthTokenArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyAuthTokenArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    uploader: Union[bool, 'UserArgsFromDashboardRecursive1']


class FileIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    uploader: Union[bool, 'UserArgsFromDashboardRecursive2']


class FileIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    uploader: Union[bool, 'UserArgsFromDashboardRecursive3']


class FileIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    uploader: Union[bool, 'UserArgsFromDashboardRecursive4']


class FileIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class FileArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyFileArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromDashboard(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    actor: Union[bool, 'UserArgsFromDashboardRecursive1']


class AuditLogIncludeFromDashboardRecursive1(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    actor: Union[bool, 'UserArgsFromDashboardRecursive2']


class AuditLogIncludeFromDashboardRecursive2(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    actor: Union[bool, 'UserArgsFromDashboardRecursive3']


class AuditLogIncludeFromDashboardRecursive3(TypedDict, total=False):
    """Relational arguments for Dashboard"""
    actor: Union[bool, 'UserArgsFromDashboardRecursive4']


class AuditLogIncludeFromDashboardRecursive4(TypedDict, total=False):
    """Relational arguments for Dashboard"""

    

class AuditLogArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    
    

class FindManyAuditLogArgsFromDashboard(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromDashboardRecursive1(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromDashboardRecursive2(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromDashboardRecursive3(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromDashboardRecursive4(TypedDict, total=False):
    """Arguments for Dashboard"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyDashboardArgs = FindManyDashboardArgsFromDashboard
FindFirstDashboardArgs = FindManyDashboardArgsFromDashboard


    

class DashboardWhereInput(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    datasetLinks: 'DashboardDatasetListRelationFilter'
    insights: 'InsightListRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardWhereInputRecursive1', List['DashboardWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['DashboardWhereInputRecursive1']
    OR: List['DashboardWhereInputRecursive1']
    NOT: List['DashboardWhereInputRecursive1']


class DashboardWhereInputRecursive1(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    datasetLinks: 'DashboardDatasetListRelationFilter'
    insights: 'InsightListRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardWhereInputRecursive2', List['DashboardWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['DashboardWhereInputRecursive2']
    OR: List['DashboardWhereInputRecursive2']
    NOT: List['DashboardWhereInputRecursive2']


class DashboardWhereInputRecursive2(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    datasetLinks: 'DashboardDatasetListRelationFilter'
    insights: 'InsightListRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardWhereInputRecursive3', List['DashboardWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['DashboardWhereInputRecursive3']
    OR: List['DashboardWhereInputRecursive3']
    NOT: List['DashboardWhereInputRecursive3']


class DashboardWhereInputRecursive3(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    datasetLinks: 'DashboardDatasetListRelationFilter'
    insights: 'InsightListRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardWhereInputRecursive4', List['DashboardWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['DashboardWhereInputRecursive4']
    OR: List['DashboardWhereInputRecursive4']
    NOT: List['DashboardWhereInputRecursive4']


class DashboardWhereInputRecursive4(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    title: Union[_str, 'types.StringFilter']
    slug: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    ownerId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    ownerUser: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'
    widgets: 'WidgetListRelationFilter'
    datasetLinks: 'DashboardDatasetListRelationFilter'
    insights: 'InsightListRelationFilter'



# aggregate Dashboard types


    

class DashboardScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardScalarWhereWithAggregatesInputRecursive1']
    OR: List['DashboardScalarWhereWithAggregatesInputRecursive1']
    NOT: List['DashboardScalarWhereWithAggregatesInputRecursive1']


class DashboardScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardScalarWhereWithAggregatesInputRecursive2']
    OR: List['DashboardScalarWhereWithAggregatesInputRecursive2']
    NOT: List['DashboardScalarWhereWithAggregatesInputRecursive2']


class DashboardScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardScalarWhereWithAggregatesInputRecursive3']
    OR: List['DashboardScalarWhereWithAggregatesInputRecursive3']
    NOT: List['DashboardScalarWhereWithAggregatesInputRecursive3']


class DashboardScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardScalarWhereWithAggregatesInputRecursive4']
    OR: List['DashboardScalarWhereWithAggregatesInputRecursive4']
    NOT: List['DashboardScalarWhereWithAggregatesInputRecursive4']


class DashboardScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Dashboard arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    slug: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    ownerId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class DashboardGroupByOutput(TypedDict, total=False):
    id: _int
    title: _str
    slug: _str
    description: _str
    ownerId: _int
    organizationId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'DashboardSumAggregateOutput'
    _avg: 'DashboardAvgAggregateOutput'
    _min: 'DashboardMinAggregateOutput'
    _max: 'DashboardMaxAggregateOutput'
    _count: 'DashboardCountAggregateOutput'


class DashboardAvgAggregateOutput(TypedDict, total=False):
    """Dashboard output for aggregating averages"""
    id: float
    ownerId: float
    organizationId: float


class DashboardSumAggregateOutput(TypedDict, total=False):
    """Dashboard output for aggregating sums"""
    id: _int
    ownerId: _int
    organizationId: _int


class DashboardScalarAggregateOutput(TypedDict, total=False):
    """Dashboard output including scalar fields"""
    id: _int
    title: _str
    slug: _str
    description: _str
    ownerId: _int
    organizationId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


DashboardMinAggregateOutput = DashboardScalarAggregateOutput
DashboardMaxAggregateOutput = DashboardScalarAggregateOutput


class DashboardMaxAggregateInput(TypedDict, total=False):
    """Dashboard input for aggregating by max"""
    id: bool
    title: bool
    slug: bool
    description: bool
    ownerId: bool
    organizationId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class DashboardMinAggregateInput(TypedDict, total=False):
    """Dashboard input for aggregating by min"""
    id: bool
    title: bool
    slug: bool
    description: bool
    ownerId: bool
    organizationId: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class DashboardNumberAggregateInput(TypedDict, total=False):
    """Dashboard input for aggregating numbers"""
    id: bool
    ownerId: bool
    organizationId: bool


DashboardAvgAggregateInput = DashboardNumberAggregateInput
DashboardSumAggregateInput = DashboardNumberAggregateInput


DashboardCountAggregateInput = TypedDict(
    'DashboardCountAggregateInput',
    {
        'id': bool,
        'title': bool,
        'slug': bool,
        'description': bool,
        'ownerId': bool,
        'organizationId': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

DashboardCountAggregateOutput = TypedDict(
    'DashboardCountAggregateOutput',
    {
        'id': int,
        'title': int,
        'slug': int,
        'description': int,
        'ownerId': int,
        'organizationId': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


DashboardKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'ownerId',
    'organizationId',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'ownerUser',
    'organization',
    'widgets',
    'datasetLinks',
    'insights',
]
DashboardScalarFieldKeys = Literal[
    'id',
    'title',
    'slug',
    'description',
    'ownerId',
    'organizationId',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
DashboardScalarFieldKeysT = TypeVar('DashboardScalarFieldKeysT', bound=DashboardScalarFieldKeys)

DashboardRelationalFieldKeys = Literal[
        'ownerUser',
        'organization',
        'widgets',
        'datasetLinks',
        'insights',
    ]

# DashboardDataset types

class DashboardDatasetOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the DashboardDataset create method"""
    id: _int
    dashboardId: _int
    datasetId: _int
    addedAt: datetime.datetime
    dashboard: 'DashboardCreateNestedWithoutRelationsInput'
    dataset: 'DatasetCreateNestedWithoutRelationsInput'


class DashboardDatasetCreateInput(DashboardDatasetOptionalCreateInput):
    """Required arguments to the DashboardDataset create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class DashboardDatasetOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the DashboardDataset create method, without relations"""
    id: _int
    dashboardId: _int
    datasetId: _int
    addedAt: datetime.datetime


class DashboardDatasetCreateWithoutRelationsInput(DashboardDatasetOptionalCreateWithoutRelationsInput):
    """Required arguments to the DashboardDataset create method, without relations"""

class DashboardDatasetConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'DashboardDatasetCreateWithoutRelationsInput'
    where: 'DashboardDatasetWhereUniqueInput'

class DashboardDatasetCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'DashboardDatasetCreateWithoutRelationsInput'
    connect: 'DashboardDatasetWhereUniqueInput'
    connect_or_create: 'DashboardDatasetConnectOrCreateWithoutRelationsInput'


class DashboardDatasetCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['DashboardDatasetCreateWithoutRelationsInput', List['DashboardDatasetCreateWithoutRelationsInput']]
    connect: Union['DashboardDatasetWhereUniqueInput', List['DashboardDatasetWhereUniqueInput']]
    connect_or_create: Union['DashboardDatasetConnectOrCreateWithoutRelationsInput', List['DashboardDatasetConnectOrCreateWithoutRelationsInput']]

_DashboardDatasetWhereUnique_id_Input = TypedDict(
    '_DashboardDatasetWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_DashboardDatasetCompounddashboardId_datasetIdKeyInner = TypedDict(
    '_DashboardDatasetCompounddashboardId_datasetIdKeyInner',
    {
        'dashboardId': '_int',
        'datasetId': '_int',
    },
    total=True
)

_DashboardDatasetCompounddashboardId_datasetIdKey = TypedDict(
    '_DashboardDatasetCompounddashboardId_datasetIdKey',
    {
        'dashboardId_datasetId': '_DashboardDatasetCompounddashboardId_datasetIdKeyInner',
    },
    total=True
)

DashboardDatasetWhereUniqueInput = Union[
    '_DashboardDatasetWhereUnique_id_Input',
    '_DashboardDatasetCompounddashboardId_datasetIdKey',
]


class DashboardDatasetUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    addedAt: datetime.datetime
    dashboard: 'DashboardUpdateOneWithoutRelationsInput'
    dataset: 'DatasetUpdateOneWithoutRelationsInput'


class DashboardDatasetUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    addedAt: datetime.datetime


class DashboardDatasetUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['DashboardDatasetCreateWithoutRelationsInput']
    connect: List['DashboardDatasetWhereUniqueInput']
    connect_or_create: List['DashboardDatasetConnectOrCreateWithoutRelationsInput']
    set: List['DashboardDatasetWhereUniqueInput']
    disconnect: List['DashboardDatasetWhereUniqueInput']
    delete: List['DashboardDatasetWhereUniqueInput']

    # TODO
    # update: List['DashboardDatasetUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['DashboardDatasetUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['DashboardDatasetScalarWhereInput']
    # upsert: List['DashboardDatasetUpserteWithWhereUniqueWithoutRelationsInput']


class DashboardDatasetUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'DashboardDatasetCreateWithoutRelationsInput'
    connect: 'DashboardDatasetWhereUniqueInput'
    connect_or_create: 'DashboardDatasetConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'DashboardDatasetUpdateInput'
    # upsert: 'DashboardDatasetUpsertWithoutRelationsInput'


class DashboardDatasetUpsertInput(TypedDict):
    create: 'DashboardDatasetCreateInput'
    update: 'DashboardDatasetUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_DashboardDataset_id_OrderByInput = TypedDict(
    '_DashboardDataset_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_DashboardDataset_dashboardId_OrderByInput = TypedDict(
    '_DashboardDataset_dashboardId_OrderByInput',
    {
        'dashboardId': 'SortOrder',
    },
    total=True
)

_DashboardDataset_datasetId_OrderByInput = TypedDict(
    '_DashboardDataset_datasetId_OrderByInput',
    {
        'datasetId': 'SortOrder',
    },
    total=True
)

_DashboardDataset_addedAt_OrderByInput = TypedDict(
    '_DashboardDataset_addedAt_OrderByInput',
    {
        'addedAt': 'SortOrder',
    },
    total=True
)

_DashboardDataset_RelevanceInner = TypedDict(
    '_DashboardDataset_RelevanceInner',
    {
        'fields': 'List[DashboardDatasetScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_DashboardDataset_RelevanceOrderByInput = TypedDict(
    '_DashboardDataset_RelevanceOrderByInput',
    {
        '_relevance': '_DashboardDataset_RelevanceInner',
    },
    total=True
)

DashboardDatasetOrderByInput = Union[
    '_DashboardDataset_id_OrderByInput',
    '_DashboardDataset_dashboardId_OrderByInput',
    '_DashboardDataset_datasetId_OrderByInput',
    '_DashboardDataset_addedAt_OrderByInput',
    '_DashboardDataset_RelevanceOrderByInput',
]



# recursive DashboardDataset types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

DashboardDatasetRelationFilter = TypedDict(
    'DashboardDatasetRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class DashboardDatasetListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class DashboardDatasetInclude(TypedDict, total=False):
    """DashboardDataset relational arguments"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDataset']
    dataset: Union[bool, 'DatasetArgsFromDashboardDataset']


    

class UserIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardDatasetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardDatasetRecursive1']
    files: Union[bool, 'FindManyFileArgsFromDashboardDatasetRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardDatasetRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardDatasetRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardDatasetRecursive1']


class UserIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardDatasetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardDatasetRecursive2']
    files: Union[bool, 'FindManyFileArgsFromDashboardDatasetRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardDatasetRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardDatasetRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardDatasetRecursive2']


class UserIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardDatasetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardDatasetRecursive3']
    files: Union[bool, 'FindManyFileArgsFromDashboardDatasetRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardDatasetRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardDatasetRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardDatasetRecursive3']


class UserIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromDashboardDatasetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromDashboardDatasetRecursive4']
    files: Union[bool, 'FindManyFileArgsFromDashboardDatasetRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromDashboardDatasetRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromDashboardDatasetRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromDashboardDatasetRecursive4']


class UserIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class UserArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyUserArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardDatasetRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive1']


class OrganizationIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardDatasetRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive2']


class OrganizationIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardDatasetRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive3']


class OrganizationIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromDashboardDatasetRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromDashboardDatasetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromDashboardDatasetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromDashboardDatasetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromDashboardDatasetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromDashboardDatasetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromDashboardDatasetRecursive4']


class OrganizationIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class OrganizationArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyOrganizationArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    invitedBy: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class OrganizationMemberIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    invitedBy: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class OrganizationMemberIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    invitedBy: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class OrganizationMemberIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    invitedBy: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class OrganizationMemberIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class OrganizationMemberArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyOrganizationMemberArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive1']


class PathIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive2']


class PathIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive3']


class PathIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    modules: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive4']


class PathIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class PathArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyPathArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    instructor: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardDatasetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive1']


class ModuleIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    instructor: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardDatasetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive2']


class ModuleIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    instructor: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardDatasetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive3']


class ModuleIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    instructor: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromDashboardDatasetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromDashboardDatasetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromDashboardDatasetRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromDashboardDatasetRecursive4']


class ModuleIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class ModuleArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyModuleArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive1']


class PathModuleIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive2']


class PathModuleIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive3']


class PathModuleIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive4']


class PathModuleIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class PathModuleArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyPathModuleArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive1']


class LessonIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive2']


class LessonIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive3']


class LessonIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromDashboardDatasetRecursive4']


class LessonIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class LessonArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyLessonArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive1']
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive1']


class EnrollmentIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive2']
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive2']


class EnrollmentIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive3']
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive3']


class EnrollmentIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive4']
    path: Union[bool, 'PathArgsFromDashboardDatasetRecursive4']


class EnrollmentIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class EnrollmentArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyEnrollmentArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    lesson: Union[bool, 'LessonArgsFromDashboardDatasetRecursive1']


class LessonProgressIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    lesson: Union[bool, 'LessonArgsFromDashboardDatasetRecursive2']


class LessonProgressIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    lesson: Union[bool, 'LessonArgsFromDashboardDatasetRecursive3']


class LessonProgressIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    lesson: Union[bool, 'LessonArgsFromDashboardDatasetRecursive4']


class LessonProgressIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class LessonProgressArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyLessonProgressArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive1']


class CertificateIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive2']


class CertificateIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive3']


class CertificateIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    module: Union[bool, 'ModuleArgsFromDashboardDatasetRecursive4']


class CertificateIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class CertificateArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyCertificateArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive1']


class ProjectIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive2']


class ProjectIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive3']


class ProjectIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    owner: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromDashboardDatasetRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromDashboardDatasetRecursive4']


class ProjectIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class ProjectArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyProjectArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive1']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class ProposalIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive2']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class ProposalIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive3']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class ProposalIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive4']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class ProposalIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class ProposalArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyProposalArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive1']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    client: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardDatasetRecursive1']


class ContractIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive2']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    client: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardDatasetRecursive2']


class ContractIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive3']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    client: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardDatasetRecursive3']


class ContractIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    project: Union[bool, 'ProjectArgsFromDashboardDatasetRecursive4']
    freelancer: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    client: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromDashboardDatasetRecursive4']


class ContractIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class ContractArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyContractArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    contract: Union[bool, 'ContractArgsFromDashboardDatasetRecursive1']


class DeliveryIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    contract: Union[bool, 'ContractArgsFromDashboardDatasetRecursive2']


class DeliveryIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    contract: Union[bool, 'ContractArgsFromDashboardDatasetRecursive3']


class DeliveryIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    contract: Union[bool, 'ContractArgsFromDashboardDatasetRecursive4']


class DeliveryIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class DeliveryArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyDeliveryArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class UserSkillIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class UserSkillIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class UserSkillIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class UserSkillIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class UserSkillArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyUserSkillArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive1']


class DatasetIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive2']


class DatasetIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive3']


class DatasetIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromDashboardDatasetRecursive4']


class DatasetIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class DatasetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyDatasetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive1']


class DashboardIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive2']


class DashboardIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive3']


class DashboardIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    ownerUser: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromDashboardDatasetRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromDashboardDatasetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromDashboardDatasetRecursive4']


class DashboardIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class DashboardArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyDashboardArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive1']


class DashboardDatasetIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive2']


class DashboardDatasetIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive3']


class DashboardDatasetIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive4']


class DashboardDatasetIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class DashboardDatasetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyDashboardDatasetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive1']


class WidgetIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive2']


class WidgetIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive3']


class WidgetIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive4']


class WidgetIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class WidgetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyWidgetArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive1']
    author: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class InsightIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive2']
    author: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class InsightIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive3']
    author: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class InsightIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dashboard: Union[bool, 'DashboardArgsFromDashboardDatasetRecursive4']
    author: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class InsightIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class InsightArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyInsightArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive1']
    creator: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class MLModelIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive2']
    creator: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class MLModelIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive3']
    creator: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class MLModelIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    dataset: Union[bool, 'DatasetArgsFromDashboardDatasetRecursive4']
    creator: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class MLModelIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class MLModelArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyMLModelArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']


class TransactionIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']


class TransactionIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']


class TransactionIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']


class TransactionIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class TransactionArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyTransactionArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive1']


class SubscriptionIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive2']


class SubscriptionIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive3']


class SubscriptionIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromDashboardDatasetRecursive4']


class SubscriptionIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class SubscriptionArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManySubscriptionArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class NotificationIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class NotificationIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class NotificationIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class NotificationIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class NotificationArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyNotificationArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class AuthTokenIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class AuthTokenIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class AuthTokenIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    user: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class AuthTokenIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class AuthTokenArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyAuthTokenArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    uploader: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class FileIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    uploader: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class FileIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    uploader: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class FileIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    uploader: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class FileIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class FileArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyFileArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromDashboardDataset(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    actor: Union[bool, 'UserArgsFromDashboardDatasetRecursive1']


class AuditLogIncludeFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    actor: Union[bool, 'UserArgsFromDashboardDatasetRecursive2']


class AuditLogIncludeFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    actor: Union[bool, 'UserArgsFromDashboardDatasetRecursive3']


class AuditLogIncludeFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""
    actor: Union[bool, 'UserArgsFromDashboardDatasetRecursive4']


class AuditLogIncludeFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Relational arguments for DashboardDataset"""

    

class AuditLogArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    
    

class FindManyAuditLogArgsFromDashboardDataset(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromDashboardDatasetRecursive1(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromDashboardDatasetRecursive2(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromDashboardDatasetRecursive3(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromDashboardDatasetRecursive4(TypedDict, total=False):
    """Arguments for DashboardDataset"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyDashboardDatasetArgs = FindManyDashboardDatasetArgsFromDashboardDataset
FindFirstDashboardDatasetArgs = FindManyDashboardDatasetArgsFromDashboardDataset


    

class DashboardDatasetWhereInput(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardDatasetWhereInputRecursive1', List['DashboardDatasetWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['DashboardDatasetWhereInputRecursive1']
    OR: List['DashboardDatasetWhereInputRecursive1']
    NOT: List['DashboardDatasetWhereInputRecursive1']


class DashboardDatasetWhereInputRecursive1(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardDatasetWhereInputRecursive2', List['DashboardDatasetWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['DashboardDatasetWhereInputRecursive2']
    OR: List['DashboardDatasetWhereInputRecursive2']
    NOT: List['DashboardDatasetWhereInputRecursive2']


class DashboardDatasetWhereInputRecursive2(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardDatasetWhereInputRecursive3', List['DashboardDatasetWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['DashboardDatasetWhereInputRecursive3']
    OR: List['DashboardDatasetWhereInputRecursive3']
    NOT: List['DashboardDatasetWhereInputRecursive3']


class DashboardDatasetWhereInputRecursive3(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['DashboardDatasetWhereInputRecursive4', List['DashboardDatasetWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['DashboardDatasetWhereInputRecursive4']
    OR: List['DashboardDatasetWhereInputRecursive4']
    NOT: List['DashboardDatasetWhereInputRecursive4']


class DashboardDatasetWhereInputRecursive4(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'



# aggregate DashboardDataset types


    

class DashboardDatasetScalarWhereWithAggregatesInput(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive1']
    OR: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive1']
    NOT: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive1']


class DashboardDatasetScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive2']
    OR: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive2']
    NOT: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive2']


class DashboardDatasetScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive3']
    OR: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive3']
    NOT: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive3']


class DashboardDatasetScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive4']
    OR: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive4']
    NOT: List['DashboardDatasetScalarWhereWithAggregatesInputRecursive4']


class DashboardDatasetScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """DashboardDataset arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    addedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class DashboardDatasetGroupByOutput(TypedDict, total=False):
    id: _int
    dashboardId: _int
    datasetId: _int
    addedAt: datetime.datetime
    _sum: 'DashboardDatasetSumAggregateOutput'
    _avg: 'DashboardDatasetAvgAggregateOutput'
    _min: 'DashboardDatasetMinAggregateOutput'
    _max: 'DashboardDatasetMaxAggregateOutput'
    _count: 'DashboardDatasetCountAggregateOutput'


class DashboardDatasetAvgAggregateOutput(TypedDict, total=False):
    """DashboardDataset output for aggregating averages"""
    id: float
    dashboardId: float
    datasetId: float


class DashboardDatasetSumAggregateOutput(TypedDict, total=False):
    """DashboardDataset output for aggregating sums"""
    id: _int
    dashboardId: _int
    datasetId: _int


class DashboardDatasetScalarAggregateOutput(TypedDict, total=False):
    """DashboardDataset output including scalar fields"""
    id: _int
    dashboardId: _int
    datasetId: _int
    addedAt: datetime.datetime


DashboardDatasetMinAggregateOutput = DashboardDatasetScalarAggregateOutput
DashboardDatasetMaxAggregateOutput = DashboardDatasetScalarAggregateOutput


class DashboardDatasetMaxAggregateInput(TypedDict, total=False):
    """DashboardDataset input for aggregating by max"""
    id: bool
    dashboardId: bool
    datasetId: bool
    addedAt: bool


class DashboardDatasetMinAggregateInput(TypedDict, total=False):
    """DashboardDataset input for aggregating by min"""
    id: bool
    dashboardId: bool
    datasetId: bool
    addedAt: bool


class DashboardDatasetNumberAggregateInput(TypedDict, total=False):
    """DashboardDataset input for aggregating numbers"""
    id: bool
    dashboardId: bool
    datasetId: bool


DashboardDatasetAvgAggregateInput = DashboardDatasetNumberAggregateInput
DashboardDatasetSumAggregateInput = DashboardDatasetNumberAggregateInput


DashboardDatasetCountAggregateInput = TypedDict(
    'DashboardDatasetCountAggregateInput',
    {
        'id': bool,
        'dashboardId': bool,
        'datasetId': bool,
        'addedAt': bool,
        '_all': bool,
    },
    total=False,
)

DashboardDatasetCountAggregateOutput = TypedDict(
    'DashboardDatasetCountAggregateOutput',
    {
        'id': int,
        'dashboardId': int,
        'datasetId': int,
        'addedAt': int,
        '_all': int,
    },
    total=False,
)


DashboardDatasetKeys = Literal[
    'id',
    'dashboardId',
    'datasetId',
    'addedAt',
    'dashboard',
    'dataset',
]
DashboardDatasetScalarFieldKeys = Literal[
    'id',
    'dashboardId',
    'datasetId',
    'addedAt',
]
DashboardDatasetScalarFieldKeysT = TypeVar('DashboardDatasetScalarFieldKeysT', bound=DashboardDatasetScalarFieldKeys)

DashboardDatasetRelationalFieldKeys = Literal[
        'dashboard',
        'dataset',
    ]

# Widget types

class WidgetOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Widget create method"""
    id: _int
    dashboardId: Optional[_int]
    datasetId: Optional[_int]
    order: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dashboard: 'DashboardCreateNestedWithoutRelationsInput'
    dataset: 'DatasetCreateNestedWithoutRelationsInput'


class WidgetCreateInput(WidgetOptionalCreateInput):
    """Required arguments to the Widget create method"""
    type: 'enums.WidgetType'
    config: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class WidgetOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Widget create method, without relations"""
    id: _int
    dashboardId: Optional[_int]
    datasetId: Optional[_int]
    order: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class WidgetCreateWithoutRelationsInput(WidgetOptionalCreateWithoutRelationsInput):
    """Required arguments to the Widget create method, without relations"""
    type: 'enums.WidgetType'
    config: 'fields.Json'

class WidgetConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'WidgetCreateWithoutRelationsInput'
    where: 'WidgetWhereUniqueInput'

class WidgetCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'WidgetCreateWithoutRelationsInput'
    connect: 'WidgetWhereUniqueInput'
    connect_or_create: 'WidgetConnectOrCreateWithoutRelationsInput'


class WidgetCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['WidgetCreateWithoutRelationsInput', List['WidgetCreateWithoutRelationsInput']]
    connect: Union['WidgetWhereUniqueInput', List['WidgetWhereUniqueInput']]
    connect_or_create: Union['WidgetConnectOrCreateWithoutRelationsInput', List['WidgetConnectOrCreateWithoutRelationsInput']]

_WidgetWhereUnique_id_Input = TypedDict(
    '_WidgetWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

WidgetWhereUniqueInput = _WidgetWhereUnique_id_Input


class WidgetUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    type: 'enums.WidgetType'
    config: 'fields.Json'
    order: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dashboard: 'DashboardUpdateOneWithoutRelationsInput'
    dataset: 'DatasetUpdateOneWithoutRelationsInput'


class WidgetUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    type: 'enums.WidgetType'
    config: 'fields.Json'
    order: Union[AtomicIntInput, _int]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class WidgetUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['WidgetCreateWithoutRelationsInput']
    connect: List['WidgetWhereUniqueInput']
    connect_or_create: List['WidgetConnectOrCreateWithoutRelationsInput']
    set: List['WidgetWhereUniqueInput']
    disconnect: List['WidgetWhereUniqueInput']
    delete: List['WidgetWhereUniqueInput']

    # TODO
    # update: List['WidgetUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['WidgetUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['WidgetScalarWhereInput']
    # upsert: List['WidgetUpserteWithWhereUniqueWithoutRelationsInput']


class WidgetUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'WidgetCreateWithoutRelationsInput'
    connect: 'WidgetWhereUniqueInput'
    connect_or_create: 'WidgetConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'WidgetUpdateInput'
    # upsert: 'WidgetUpsertWithoutRelationsInput'


class WidgetUpsertInput(TypedDict):
    create: 'WidgetCreateInput'
    update: 'WidgetUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Widget_id_OrderByInput = TypedDict(
    '_Widget_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Widget_dashboardId_OrderByInput = TypedDict(
    '_Widget_dashboardId_OrderByInput',
    {
        'dashboardId': 'SortOrder',
    },
    total=True
)

_Widget_datasetId_OrderByInput = TypedDict(
    '_Widget_datasetId_OrderByInput',
    {
        'datasetId': 'SortOrder',
    },
    total=True
)

_Widget_type_OrderByInput = TypedDict(
    '_Widget_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Widget_config_OrderByInput = TypedDict(
    '_Widget_config_OrderByInput',
    {
        'config': 'SortOrder',
    },
    total=True
)

_Widget_order_OrderByInput = TypedDict(
    '_Widget_order_OrderByInput',
    {
        'order': 'SortOrder',
    },
    total=True
)

_Widget_createdAt_OrderByInput = TypedDict(
    '_Widget_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Widget_updatedAt_OrderByInput = TypedDict(
    '_Widget_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Widget_deletedAt_OrderByInput = TypedDict(
    '_Widget_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Widget_RelevanceInner = TypedDict(
    '_Widget_RelevanceInner',
    {
        'fields': 'List[WidgetScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Widget_RelevanceOrderByInput = TypedDict(
    '_Widget_RelevanceOrderByInput',
    {
        '_relevance': '_Widget_RelevanceInner',
    },
    total=True
)

WidgetOrderByInput = Union[
    '_Widget_id_OrderByInput',
    '_Widget_dashboardId_OrderByInput',
    '_Widget_datasetId_OrderByInput',
    '_Widget_type_OrderByInput',
    '_Widget_config_OrderByInput',
    '_Widget_order_OrderByInput',
    '_Widget_createdAt_OrderByInput',
    '_Widget_updatedAt_OrderByInput',
    '_Widget_deletedAt_OrderByInput',
    '_Widget_RelevanceOrderByInput',
]



# recursive Widget types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

WidgetRelationFilter = TypedDict(
    'WidgetRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class WidgetListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class WidgetInclude(TypedDict, total=False):
    """Widget relational arguments"""
    dashboard: Union[bool, 'DashboardArgsFromWidget']
    dataset: Union[bool, 'DatasetArgsFromWidget']


    

class UserIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromWidgetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromWidgetRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromWidgetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromWidgetRecursive1']
    files: Union[bool, 'FindManyFileArgsFromWidgetRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromWidgetRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWidgetRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromWidgetRecursive1']


class UserIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromWidgetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromWidgetRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromWidgetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromWidgetRecursive2']
    files: Union[bool, 'FindManyFileArgsFromWidgetRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromWidgetRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWidgetRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromWidgetRecursive2']


class UserIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromWidgetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromWidgetRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromWidgetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromWidgetRecursive3']
    files: Union[bool, 'FindManyFileArgsFromWidgetRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromWidgetRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWidgetRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromWidgetRecursive3']


class UserIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromWidgetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromWidgetRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromWidgetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromWidgetRecursive4']
    files: Union[bool, 'FindManyFileArgsFromWidgetRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromWidgetRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromWidgetRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromWidgetRecursive4']


class UserIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class UserArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyUserArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromWidgetRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive1']


class OrganizationIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromWidgetRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive2']


class OrganizationIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromWidgetRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive3']


class OrganizationIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromWidgetRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromWidgetRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromWidgetRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromWidgetRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromWidgetRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromWidgetRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromWidgetRecursive4']


class OrganizationIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class OrganizationArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyOrganizationArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    invitedBy: Union[bool, 'UserArgsFromWidgetRecursive1']


class OrganizationMemberIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    invitedBy: Union[bool, 'UserArgsFromWidgetRecursive2']


class OrganizationMemberIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    invitedBy: Union[bool, 'UserArgsFromWidgetRecursive3']


class OrganizationMemberIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    invitedBy: Union[bool, 'UserArgsFromWidgetRecursive4']


class OrganizationMemberIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class OrganizationMemberArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyOrganizationMemberArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    modules: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive1']


class PathIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    modules: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive2']


class PathIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    modules: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive3']


class PathIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    modules: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive4']


class PathIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class PathArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyPathArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    instructor: Union[bool, 'UserArgsFromWidgetRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromWidgetRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive1']


class ModuleIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    instructor: Union[bool, 'UserArgsFromWidgetRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromWidgetRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive2']


class ModuleIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    instructor: Union[bool, 'UserArgsFromWidgetRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromWidgetRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive3']


class ModuleIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    instructor: Union[bool, 'UserArgsFromWidgetRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromWidgetRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromWidgetRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromWidgetRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromWidgetRecursive4']


class ModuleIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class ModuleArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyModuleArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    path: Union[bool, 'PathArgsFromWidgetRecursive1']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive1']


class PathModuleIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    path: Union[bool, 'PathArgsFromWidgetRecursive2']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive2']


class PathModuleIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    path: Union[bool, 'PathArgsFromWidgetRecursive3']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive3']


class PathModuleIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    path: Union[bool, 'PathArgsFromWidgetRecursive4']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive4']


class PathModuleIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class PathModuleArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyPathModuleArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    module: Union[bool, 'ModuleArgsFromWidgetRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive1']


class LessonIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    module: Union[bool, 'ModuleArgsFromWidgetRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive2']


class LessonIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    module: Union[bool, 'ModuleArgsFromWidgetRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive3']


class LessonIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    module: Union[bool, 'ModuleArgsFromWidgetRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromWidgetRecursive4']


class LessonIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class LessonArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyLessonArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive1']
    path: Union[bool, 'PathArgsFromWidgetRecursive1']


class EnrollmentIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive2']
    path: Union[bool, 'PathArgsFromWidgetRecursive2']


class EnrollmentIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive3']
    path: Union[bool, 'PathArgsFromWidgetRecursive3']


class EnrollmentIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive4']
    path: Union[bool, 'PathArgsFromWidgetRecursive4']


class EnrollmentIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class EnrollmentArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyEnrollmentArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    lesson: Union[bool, 'LessonArgsFromWidgetRecursive1']


class LessonProgressIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    lesson: Union[bool, 'LessonArgsFromWidgetRecursive2']


class LessonProgressIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    lesson: Union[bool, 'LessonArgsFromWidgetRecursive3']


class LessonProgressIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    lesson: Union[bool, 'LessonArgsFromWidgetRecursive4']


class LessonProgressIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class LessonProgressArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyLessonProgressArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive1']


class CertificateIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive2']


class CertificateIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive3']


class CertificateIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    module: Union[bool, 'ModuleArgsFromWidgetRecursive4']


class CertificateIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class CertificateArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyCertificateArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromWidgetRecursive1']


class ProjectIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromWidgetRecursive2']


class ProjectIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromWidgetRecursive3']


class ProjectIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    owner: Union[bool, 'UserArgsFromWidgetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromWidgetRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromWidgetRecursive4']


class ProjectIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class ProjectArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyProjectArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive1']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive1']


class ProposalIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive2']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive2']


class ProposalIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive3']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive3']


class ProposalIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive4']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive4']


class ProposalIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class ProposalArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyProposalArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive1']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive1']
    client: Union[bool, 'UserArgsFromWidgetRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromWidgetRecursive1']


class ContractIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive2']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive2']
    client: Union[bool, 'UserArgsFromWidgetRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromWidgetRecursive2']


class ContractIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive3']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive3']
    client: Union[bool, 'UserArgsFromWidgetRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromWidgetRecursive3']


class ContractIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    project: Union[bool, 'ProjectArgsFromWidgetRecursive4']
    freelancer: Union[bool, 'UserArgsFromWidgetRecursive4']
    client: Union[bool, 'UserArgsFromWidgetRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromWidgetRecursive4']


class ContractIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class ContractArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyContractArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    contract: Union[bool, 'ContractArgsFromWidgetRecursive1']


class DeliveryIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    contract: Union[bool, 'ContractArgsFromWidgetRecursive2']


class DeliveryIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    contract: Union[bool, 'ContractArgsFromWidgetRecursive3']


class DeliveryIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    contract: Union[bool, 'ContractArgsFromWidgetRecursive4']


class DeliveryIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class DeliveryArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyDeliveryArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']


class UserSkillIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']


class UserSkillIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']


class UserSkillIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']


class UserSkillIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class UserSkillArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyUserSkillArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive1']


class DatasetIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive2']


class DatasetIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive3']


class DatasetIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromWidgetRecursive4']


class DatasetIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class DatasetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyDatasetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive1']


class DashboardIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive2']


class DashboardIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive3']


class DashboardIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    ownerUser: Union[bool, 'UserArgsFromWidgetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromWidgetRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromWidgetRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromWidgetRecursive4']


class DashboardIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class DashboardArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyDashboardArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive1']


class DashboardDatasetIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive2']


class DashboardDatasetIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive3']


class DashboardDatasetIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive4']


class DashboardDatasetIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class DashboardDatasetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyDashboardDatasetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive1']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive1']


class WidgetIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive2']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive2']


class WidgetIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive3']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive3']


class WidgetIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive4']
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive4']


class WidgetIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class WidgetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyWidgetArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive1']
    author: Union[bool, 'UserArgsFromWidgetRecursive1']


class InsightIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive2']
    author: Union[bool, 'UserArgsFromWidgetRecursive2']


class InsightIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive3']
    author: Union[bool, 'UserArgsFromWidgetRecursive3']


class InsightIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    dashboard: Union[bool, 'DashboardArgsFromWidgetRecursive4']
    author: Union[bool, 'UserArgsFromWidgetRecursive4']


class InsightIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class InsightArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyInsightArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive1']
    creator: Union[bool, 'UserArgsFromWidgetRecursive1']


class MLModelIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive2']
    creator: Union[bool, 'UserArgsFromWidgetRecursive2']


class MLModelIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive3']
    creator: Union[bool, 'UserArgsFromWidgetRecursive3']


class MLModelIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    dataset: Union[bool, 'DatasetArgsFromWidgetRecursive4']
    creator: Union[bool, 'UserArgsFromWidgetRecursive4']


class MLModelIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class MLModelArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyMLModelArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']


class TransactionIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']


class TransactionIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']


class TransactionIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']


class TransactionIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class TransactionArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyTransactionArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive1']


class SubscriptionIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive2']


class SubscriptionIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive3']


class SubscriptionIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']
    organization: Union[bool, 'OrganizationArgsFromWidgetRecursive4']


class SubscriptionIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class SubscriptionArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManySubscriptionArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']


class NotificationIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']


class NotificationIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']


class NotificationIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']


class NotificationIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class NotificationArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyNotificationArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive1']


class AuthTokenIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive2']


class AuthTokenIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive3']


class AuthTokenIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    user: Union[bool, 'UserArgsFromWidgetRecursive4']


class AuthTokenIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class AuthTokenArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyAuthTokenArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    uploader: Union[bool, 'UserArgsFromWidgetRecursive1']


class FileIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    uploader: Union[bool, 'UserArgsFromWidgetRecursive2']


class FileIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    uploader: Union[bool, 'UserArgsFromWidgetRecursive3']


class FileIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    uploader: Union[bool, 'UserArgsFromWidgetRecursive4']


class FileIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class FileArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyFileArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromWidget(TypedDict, total=False):
    """Relational arguments for Widget"""
    actor: Union[bool, 'UserArgsFromWidgetRecursive1']


class AuditLogIncludeFromWidgetRecursive1(TypedDict, total=False):
    """Relational arguments for Widget"""
    actor: Union[bool, 'UserArgsFromWidgetRecursive2']


class AuditLogIncludeFromWidgetRecursive2(TypedDict, total=False):
    """Relational arguments for Widget"""
    actor: Union[bool, 'UserArgsFromWidgetRecursive3']


class AuditLogIncludeFromWidgetRecursive3(TypedDict, total=False):
    """Relational arguments for Widget"""
    actor: Union[bool, 'UserArgsFromWidgetRecursive4']


class AuditLogIncludeFromWidgetRecursive4(TypedDict, total=False):
    """Relational arguments for Widget"""

    

class AuditLogArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    
    

class FindManyAuditLogArgsFromWidget(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromWidgetRecursive1(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromWidgetRecursive2(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromWidgetRecursive3(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromWidgetRecursive4(TypedDict, total=False):
    """Arguments for Widget"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyWidgetArgs = FindManyWidgetArgsFromWidget
FindFirstWidgetArgs = FindManyWidgetArgsFromWidget


    

class WidgetWhereInput(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[None, _int, 'types.IntFilter']
    datasetId: Union[None, _int, 'types.IntFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonFilter']
    order: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['WidgetWhereInputRecursive1', List['WidgetWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['WidgetWhereInputRecursive1']
    OR: List['WidgetWhereInputRecursive1']
    NOT: List['WidgetWhereInputRecursive1']


class WidgetWhereInputRecursive1(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[None, _int, 'types.IntFilter']
    datasetId: Union[None, _int, 'types.IntFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonFilter']
    order: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['WidgetWhereInputRecursive2', List['WidgetWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['WidgetWhereInputRecursive2']
    OR: List['WidgetWhereInputRecursive2']
    NOT: List['WidgetWhereInputRecursive2']


class WidgetWhereInputRecursive2(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[None, _int, 'types.IntFilter']
    datasetId: Union[None, _int, 'types.IntFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonFilter']
    order: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['WidgetWhereInputRecursive3', List['WidgetWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['WidgetWhereInputRecursive3']
    OR: List['WidgetWhereInputRecursive3']
    NOT: List['WidgetWhereInputRecursive3']


class WidgetWhereInputRecursive3(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[None, _int, 'types.IntFilter']
    datasetId: Union[None, _int, 'types.IntFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonFilter']
    order: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'

    # should be noted that AND and NOT should be Union['WidgetWhereInputRecursive4', List['WidgetWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['WidgetWhereInputRecursive4']
    OR: List['WidgetWhereInputRecursive4']
    NOT: List['WidgetWhereInputRecursive4']


class WidgetWhereInputRecursive4(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[None, _int, 'types.IntFilter']
    datasetId: Union[None, _int, 'types.IntFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonFilter']
    order: Union[_int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    dataset: 'DatasetRelationFilter'



# aggregate Widget types


    

class WidgetScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WidgetScalarWhereWithAggregatesInputRecursive1']
    OR: List['WidgetScalarWhereWithAggregatesInputRecursive1']
    NOT: List['WidgetScalarWhereWithAggregatesInputRecursive1']


class WidgetScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WidgetScalarWhereWithAggregatesInputRecursive2']
    OR: List['WidgetScalarWhereWithAggregatesInputRecursive2']
    NOT: List['WidgetScalarWhereWithAggregatesInputRecursive2']


class WidgetScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WidgetScalarWhereWithAggregatesInputRecursive3']
    OR: List['WidgetScalarWhereWithAggregatesInputRecursive3']
    NOT: List['WidgetScalarWhereWithAggregatesInputRecursive3']


class WidgetScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WidgetScalarWhereWithAggregatesInputRecursive4']
    OR: List['WidgetScalarWhereWithAggregatesInputRecursive4']
    NOT: List['WidgetScalarWhereWithAggregatesInputRecursive4']


class WidgetScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Widget arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    type: 'enums.WidgetType'
    config: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    order: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class WidgetGroupByOutput(TypedDict, total=False):
    id: _int
    dashboardId: _int
    datasetId: _int
    type: 'enums.WidgetType'
    config: 'fields.Json'
    order: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'WidgetSumAggregateOutput'
    _avg: 'WidgetAvgAggregateOutput'
    _min: 'WidgetMinAggregateOutput'
    _max: 'WidgetMaxAggregateOutput'
    _count: 'WidgetCountAggregateOutput'


class WidgetAvgAggregateOutput(TypedDict, total=False):
    """Widget output for aggregating averages"""
    id: float
    dashboardId: float
    datasetId: float
    order: float


class WidgetSumAggregateOutput(TypedDict, total=False):
    """Widget output for aggregating sums"""
    id: _int
    dashboardId: _int
    datasetId: _int
    order: _int


class WidgetScalarAggregateOutput(TypedDict, total=False):
    """Widget output including scalar fields"""
    id: _int
    dashboardId: _int
    datasetId: _int
    type: 'enums.WidgetType'
    config: 'fields.Json'
    order: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


WidgetMinAggregateOutput = WidgetScalarAggregateOutput
WidgetMaxAggregateOutput = WidgetScalarAggregateOutput


class WidgetMaxAggregateInput(TypedDict, total=False):
    """Widget input for aggregating by max"""
    id: bool
    dashboardId: bool
    datasetId: bool
    type: bool
    config: bool
    order: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class WidgetMinAggregateInput(TypedDict, total=False):
    """Widget input for aggregating by min"""
    id: bool
    dashboardId: bool
    datasetId: bool
    type: bool
    config: bool
    order: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class WidgetNumberAggregateInput(TypedDict, total=False):
    """Widget input for aggregating numbers"""
    id: bool
    dashboardId: bool
    datasetId: bool
    order: bool


WidgetAvgAggregateInput = WidgetNumberAggregateInput
WidgetSumAggregateInput = WidgetNumberAggregateInput


WidgetCountAggregateInput = TypedDict(
    'WidgetCountAggregateInput',
    {
        'id': bool,
        'dashboardId': bool,
        'datasetId': bool,
        'type': bool,
        'config': bool,
        'order': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

WidgetCountAggregateOutput = TypedDict(
    'WidgetCountAggregateOutput',
    {
        'id': int,
        'dashboardId': int,
        'datasetId': int,
        'type': int,
        'config': int,
        'order': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


WidgetKeys = Literal[
    'id',
    'dashboardId',
    'datasetId',
    'type',
    'config',
    'order',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'dashboard',
    'dataset',
]
WidgetScalarFieldKeys = Literal[
    'id',
    'dashboardId',
    'datasetId',
    'type',
    'config',
    'order',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
WidgetScalarFieldKeysT = TypeVar('WidgetScalarFieldKeysT', bound=WidgetScalarFieldKeys)

WidgetRelationalFieldKeys = Literal[
        'dashboard',
        'dataset',
    ]

# Insight types

class InsightOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Insight create method"""
    id: _int
    dashboardId: _int
    userId: Optional[_int]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dashboard: 'DashboardCreateNestedWithoutRelationsInput'
    author: 'UserCreateNestedWithoutRelationsInput'


class InsightCreateInput(InsightOptionalCreateInput):
    """Required arguments to the Insight create method"""
    content: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class InsightOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Insight create method, without relations"""
    id: _int
    dashboardId: _int
    userId: Optional[_int]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class InsightCreateWithoutRelationsInput(InsightOptionalCreateWithoutRelationsInput):
    """Required arguments to the Insight create method, without relations"""
    content: _str

class InsightConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'InsightCreateWithoutRelationsInput'
    where: 'InsightWhereUniqueInput'

class InsightCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'InsightCreateWithoutRelationsInput'
    connect: 'InsightWhereUniqueInput'
    connect_or_create: 'InsightConnectOrCreateWithoutRelationsInput'


class InsightCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['InsightCreateWithoutRelationsInput', List['InsightCreateWithoutRelationsInput']]
    connect: Union['InsightWhereUniqueInput', List['InsightWhereUniqueInput']]
    connect_or_create: Union['InsightConnectOrCreateWithoutRelationsInput', List['InsightConnectOrCreateWithoutRelationsInput']]

_InsightWhereUnique_id_Input = TypedDict(
    '_InsightWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

InsightWhereUniqueInput = _InsightWhereUnique_id_Input


class InsightUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    content: _str
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dashboard: 'DashboardUpdateOneWithoutRelationsInput'
    author: 'UserUpdateOneWithoutRelationsInput'


class InsightUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    content: _str
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class InsightUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['InsightCreateWithoutRelationsInput']
    connect: List['InsightWhereUniqueInput']
    connect_or_create: List['InsightConnectOrCreateWithoutRelationsInput']
    set: List['InsightWhereUniqueInput']
    disconnect: List['InsightWhereUniqueInput']
    delete: List['InsightWhereUniqueInput']

    # TODO
    # update: List['InsightUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['InsightUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['InsightScalarWhereInput']
    # upsert: List['InsightUpserteWithWhereUniqueWithoutRelationsInput']


class InsightUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'InsightCreateWithoutRelationsInput'
    connect: 'InsightWhereUniqueInput'
    connect_or_create: 'InsightConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'InsightUpdateInput'
    # upsert: 'InsightUpsertWithoutRelationsInput'


class InsightUpsertInput(TypedDict):
    create: 'InsightCreateInput'
    update: 'InsightUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Insight_id_OrderByInput = TypedDict(
    '_Insight_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Insight_dashboardId_OrderByInput = TypedDict(
    '_Insight_dashboardId_OrderByInput',
    {
        'dashboardId': 'SortOrder',
    },
    total=True
)

_Insight_userId_OrderByInput = TypedDict(
    '_Insight_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Insight_content_OrderByInput = TypedDict(
    '_Insight_content_OrderByInput',
    {
        'content': 'SortOrder',
    },
    total=True
)

_Insight_metadata_OrderByInput = TypedDict(
    '_Insight_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Insight_createdAt_OrderByInput = TypedDict(
    '_Insight_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Insight_updatedAt_OrderByInput = TypedDict(
    '_Insight_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Insight_deletedAt_OrderByInput = TypedDict(
    '_Insight_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Insight_RelevanceInner = TypedDict(
    '_Insight_RelevanceInner',
    {
        'fields': 'List[InsightScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Insight_RelevanceOrderByInput = TypedDict(
    '_Insight_RelevanceOrderByInput',
    {
        '_relevance': '_Insight_RelevanceInner',
    },
    total=True
)

InsightOrderByInput = Union[
    '_Insight_id_OrderByInput',
    '_Insight_dashboardId_OrderByInput',
    '_Insight_userId_OrderByInput',
    '_Insight_content_OrderByInput',
    '_Insight_metadata_OrderByInput',
    '_Insight_createdAt_OrderByInput',
    '_Insight_updatedAt_OrderByInput',
    '_Insight_deletedAt_OrderByInput',
    '_Insight_RelevanceOrderByInput',
]



# recursive Insight types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

InsightRelationFilter = TypedDict(
    'InsightRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class InsightListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class InsightInclude(TypedDict, total=False):
    """Insight relational arguments"""
    dashboard: Union[bool, 'DashboardArgsFromInsight']
    author: Union[bool, 'UserArgsFromInsight']


    

class UserIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromInsightRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromInsightRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromInsightRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromInsightRecursive1']
    files: Union[bool, 'FindManyFileArgsFromInsightRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromInsightRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromInsightRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromInsightRecursive1']


class UserIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromInsightRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromInsightRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromInsightRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromInsightRecursive2']
    files: Union[bool, 'FindManyFileArgsFromInsightRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromInsightRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromInsightRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromInsightRecursive2']


class UserIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromInsightRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromInsightRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromInsightRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromInsightRecursive3']
    files: Union[bool, 'FindManyFileArgsFromInsightRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromInsightRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromInsightRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromInsightRecursive3']


class UserIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromInsightRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromInsightRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromInsightRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromInsightRecursive4']
    files: Union[bool, 'FindManyFileArgsFromInsightRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromInsightRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromInsightRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromInsightRecursive4']


class UserIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class UserArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyUserArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromInsightRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive1']


class OrganizationIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromInsightRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive2']


class OrganizationIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromInsightRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive3']


class OrganizationIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromInsightRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromInsightRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromInsightRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromInsightRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromInsightRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromInsightRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromInsightRecursive4']


class OrganizationIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class OrganizationArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyOrganizationArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    invitedBy: Union[bool, 'UserArgsFromInsightRecursive1']


class OrganizationMemberIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    invitedBy: Union[bool, 'UserArgsFromInsightRecursive2']


class OrganizationMemberIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    invitedBy: Union[bool, 'UserArgsFromInsightRecursive3']


class OrganizationMemberIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    invitedBy: Union[bool, 'UserArgsFromInsightRecursive4']


class OrganizationMemberIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class OrganizationMemberArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyOrganizationMemberArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    modules: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive1']


class PathIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    modules: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive2']


class PathIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    modules: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive3']


class PathIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    modules: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive4']


class PathIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class PathArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyPathArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    instructor: Union[bool, 'UserArgsFromInsightRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromInsightRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive1']


class ModuleIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    instructor: Union[bool, 'UserArgsFromInsightRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromInsightRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive2']


class ModuleIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    instructor: Union[bool, 'UserArgsFromInsightRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromInsightRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive3']


class ModuleIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    instructor: Union[bool, 'UserArgsFromInsightRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromInsightRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromInsightRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromInsightRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromInsightRecursive4']


class ModuleIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class ModuleArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyModuleArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    path: Union[bool, 'PathArgsFromInsightRecursive1']
    module: Union[bool, 'ModuleArgsFromInsightRecursive1']


class PathModuleIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    path: Union[bool, 'PathArgsFromInsightRecursive2']
    module: Union[bool, 'ModuleArgsFromInsightRecursive2']


class PathModuleIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    path: Union[bool, 'PathArgsFromInsightRecursive3']
    module: Union[bool, 'ModuleArgsFromInsightRecursive3']


class PathModuleIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    path: Union[bool, 'PathArgsFromInsightRecursive4']
    module: Union[bool, 'ModuleArgsFromInsightRecursive4']


class PathModuleIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class PathModuleArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyPathModuleArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    module: Union[bool, 'ModuleArgsFromInsightRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive1']


class LessonIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    module: Union[bool, 'ModuleArgsFromInsightRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive2']


class LessonIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    module: Union[bool, 'ModuleArgsFromInsightRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive3']


class LessonIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    module: Union[bool, 'ModuleArgsFromInsightRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromInsightRecursive4']


class LessonIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class LessonArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyLessonArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    module: Union[bool, 'ModuleArgsFromInsightRecursive1']
    path: Union[bool, 'PathArgsFromInsightRecursive1']


class EnrollmentIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    module: Union[bool, 'ModuleArgsFromInsightRecursive2']
    path: Union[bool, 'PathArgsFromInsightRecursive2']


class EnrollmentIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    module: Union[bool, 'ModuleArgsFromInsightRecursive3']
    path: Union[bool, 'PathArgsFromInsightRecursive3']


class EnrollmentIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    module: Union[bool, 'ModuleArgsFromInsightRecursive4']
    path: Union[bool, 'PathArgsFromInsightRecursive4']


class EnrollmentIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class EnrollmentArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyEnrollmentArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    lesson: Union[bool, 'LessonArgsFromInsightRecursive1']


class LessonProgressIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    lesson: Union[bool, 'LessonArgsFromInsightRecursive2']


class LessonProgressIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    lesson: Union[bool, 'LessonArgsFromInsightRecursive3']


class LessonProgressIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    lesson: Union[bool, 'LessonArgsFromInsightRecursive4']


class LessonProgressIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class LessonProgressArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyLessonProgressArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    module: Union[bool, 'ModuleArgsFromInsightRecursive1']


class CertificateIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    module: Union[bool, 'ModuleArgsFromInsightRecursive2']


class CertificateIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    module: Union[bool, 'ModuleArgsFromInsightRecursive3']


class CertificateIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    module: Union[bool, 'ModuleArgsFromInsightRecursive4']


class CertificateIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class CertificateArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyCertificateArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive1']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromInsightRecursive1']


class ProjectIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive2']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromInsightRecursive2']


class ProjectIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive3']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromInsightRecursive3']


class ProjectIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    owner: Union[bool, 'UserArgsFromInsightRecursive4']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromInsightRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromInsightRecursive4']


class ProjectIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class ProjectArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyProjectArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive1']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive1']


class ProposalIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive2']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive2']


class ProposalIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive3']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive3']


class ProposalIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive4']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive4']


class ProposalIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class ProposalArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyProposalArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive1']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive1']
    client: Union[bool, 'UserArgsFromInsightRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromInsightRecursive1']


class ContractIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive2']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive2']
    client: Union[bool, 'UserArgsFromInsightRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromInsightRecursive2']


class ContractIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive3']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive3']
    client: Union[bool, 'UserArgsFromInsightRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromInsightRecursive3']


class ContractIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    project: Union[bool, 'ProjectArgsFromInsightRecursive4']
    freelancer: Union[bool, 'UserArgsFromInsightRecursive4']
    client: Union[bool, 'UserArgsFromInsightRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromInsightRecursive4']


class ContractIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class ContractArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyContractArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    contract: Union[bool, 'ContractArgsFromInsightRecursive1']


class DeliveryIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    contract: Union[bool, 'ContractArgsFromInsightRecursive2']


class DeliveryIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    contract: Union[bool, 'ContractArgsFromInsightRecursive3']


class DeliveryIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    contract: Union[bool, 'ContractArgsFromInsightRecursive4']


class DeliveryIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class DeliveryArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyDeliveryArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']


class UserSkillIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']


class UserSkillIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']


class UserSkillIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']


class UserSkillIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class UserSkillArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyUserSkillArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive1']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive1']


class DatasetIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive2']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive2']


class DatasetIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive3']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive3']


class DatasetIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive4']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromInsightRecursive4']


class DatasetIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class DatasetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyDatasetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive1']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive1']


class DashboardIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive2']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive2']


class DashboardIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive3']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive3']


class DashboardIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    ownerUser: Union[bool, 'UserArgsFromInsightRecursive4']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromInsightRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromInsightRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromInsightRecursive4']


class DashboardIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class DashboardArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyDashboardArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive1']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive1']


class DashboardDatasetIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive2']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive2']


class DashboardDatasetIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive3']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive3']


class DashboardDatasetIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive4']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive4']


class DashboardDatasetIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class DashboardDatasetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyDashboardDatasetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive1']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive1']


class WidgetIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive2']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive2']


class WidgetIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive3']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive3']


class WidgetIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive4']
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive4']


class WidgetIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class WidgetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyWidgetArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive1']
    author: Union[bool, 'UserArgsFromInsightRecursive1']


class InsightIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive2']
    author: Union[bool, 'UserArgsFromInsightRecursive2']


class InsightIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive3']
    author: Union[bool, 'UserArgsFromInsightRecursive3']


class InsightIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    dashboard: Union[bool, 'DashboardArgsFromInsightRecursive4']
    author: Union[bool, 'UserArgsFromInsightRecursive4']


class InsightIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class InsightArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyInsightArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive1']
    creator: Union[bool, 'UserArgsFromInsightRecursive1']


class MLModelIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive2']
    creator: Union[bool, 'UserArgsFromInsightRecursive2']


class MLModelIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive3']
    creator: Union[bool, 'UserArgsFromInsightRecursive3']


class MLModelIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    dataset: Union[bool, 'DatasetArgsFromInsightRecursive4']
    creator: Union[bool, 'UserArgsFromInsightRecursive4']


class MLModelIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class MLModelArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyMLModelArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']


class TransactionIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']


class TransactionIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']


class TransactionIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']


class TransactionIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class TransactionArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyTransactionArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive1']


class SubscriptionIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive2']


class SubscriptionIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive3']


class SubscriptionIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']
    organization: Union[bool, 'OrganizationArgsFromInsightRecursive4']


class SubscriptionIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class SubscriptionArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManySubscriptionArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']


class NotificationIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']


class NotificationIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']


class NotificationIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']


class NotificationIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class NotificationArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyNotificationArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive1']


class AuthTokenIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive2']


class AuthTokenIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive3']


class AuthTokenIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    user: Union[bool, 'UserArgsFromInsightRecursive4']


class AuthTokenIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class AuthTokenArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyAuthTokenArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    uploader: Union[bool, 'UserArgsFromInsightRecursive1']


class FileIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    uploader: Union[bool, 'UserArgsFromInsightRecursive2']


class FileIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    uploader: Union[bool, 'UserArgsFromInsightRecursive3']


class FileIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    uploader: Union[bool, 'UserArgsFromInsightRecursive4']


class FileIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class FileArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyFileArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromInsight(TypedDict, total=False):
    """Relational arguments for Insight"""
    actor: Union[bool, 'UserArgsFromInsightRecursive1']


class AuditLogIncludeFromInsightRecursive1(TypedDict, total=False):
    """Relational arguments for Insight"""
    actor: Union[bool, 'UserArgsFromInsightRecursive2']


class AuditLogIncludeFromInsightRecursive2(TypedDict, total=False):
    """Relational arguments for Insight"""
    actor: Union[bool, 'UserArgsFromInsightRecursive3']


class AuditLogIncludeFromInsightRecursive3(TypedDict, total=False):
    """Relational arguments for Insight"""
    actor: Union[bool, 'UserArgsFromInsightRecursive4']


class AuditLogIncludeFromInsightRecursive4(TypedDict, total=False):
    """Relational arguments for Insight"""

    

class AuditLogArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    
    

class FindManyAuditLogArgsFromInsight(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromInsightRecursive1(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromInsightRecursive2(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromInsightRecursive3(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromInsightRecursive4(TypedDict, total=False):
    """Arguments for Insight"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyInsightArgs = FindManyInsightArgsFromInsight
FindFirstInsightArgs = FindManyInsightArgsFromInsight


    

class InsightWhereInput(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    author: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['InsightWhereInputRecursive1', List['InsightWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['InsightWhereInputRecursive1']
    OR: List['InsightWhereInputRecursive1']
    NOT: List['InsightWhereInputRecursive1']


class InsightWhereInputRecursive1(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    author: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['InsightWhereInputRecursive2', List['InsightWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['InsightWhereInputRecursive2']
    OR: List['InsightWhereInputRecursive2']
    NOT: List['InsightWhereInputRecursive2']


class InsightWhereInputRecursive2(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    author: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['InsightWhereInputRecursive3', List['InsightWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['InsightWhereInputRecursive3']
    OR: List['InsightWhereInputRecursive3']
    NOT: List['InsightWhereInputRecursive3']


class InsightWhereInputRecursive3(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    author: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['InsightWhereInputRecursive4', List['InsightWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['InsightWhereInputRecursive4']
    OR: List['InsightWhereInputRecursive4']
    NOT: List['InsightWhereInputRecursive4']


class InsightWhereInputRecursive4(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    dashboardId: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dashboard: 'DashboardRelationFilter'
    author: 'UserRelationFilter'



# aggregate Insight types


    

class InsightScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['InsightScalarWhereWithAggregatesInputRecursive1']
    OR: List['InsightScalarWhereWithAggregatesInputRecursive1']
    NOT: List['InsightScalarWhereWithAggregatesInputRecursive1']


class InsightScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['InsightScalarWhereWithAggregatesInputRecursive2']
    OR: List['InsightScalarWhereWithAggregatesInputRecursive2']
    NOT: List['InsightScalarWhereWithAggregatesInputRecursive2']


class InsightScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['InsightScalarWhereWithAggregatesInputRecursive3']
    OR: List['InsightScalarWhereWithAggregatesInputRecursive3']
    NOT: List['InsightScalarWhereWithAggregatesInputRecursive3']


class InsightScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['InsightScalarWhereWithAggregatesInputRecursive4']
    OR: List['InsightScalarWhereWithAggregatesInputRecursive4']
    NOT: List['InsightScalarWhereWithAggregatesInputRecursive4']


class InsightScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Insight arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    dashboardId: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class InsightGroupByOutput(TypedDict, total=False):
    id: _int
    dashboardId: _int
    userId: _int
    content: _str
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'InsightSumAggregateOutput'
    _avg: 'InsightAvgAggregateOutput'
    _min: 'InsightMinAggregateOutput'
    _max: 'InsightMaxAggregateOutput'
    _count: 'InsightCountAggregateOutput'


class InsightAvgAggregateOutput(TypedDict, total=False):
    """Insight output for aggregating averages"""
    id: float
    dashboardId: float
    userId: float


class InsightSumAggregateOutput(TypedDict, total=False):
    """Insight output for aggregating sums"""
    id: _int
    dashboardId: _int
    userId: _int


class InsightScalarAggregateOutput(TypedDict, total=False):
    """Insight output including scalar fields"""
    id: _int
    dashboardId: _int
    userId: _int
    content: _str
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


InsightMinAggregateOutput = InsightScalarAggregateOutput
InsightMaxAggregateOutput = InsightScalarAggregateOutput


class InsightMaxAggregateInput(TypedDict, total=False):
    """Insight input for aggregating by max"""
    id: bool
    dashboardId: bool
    userId: bool
    content: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class InsightMinAggregateInput(TypedDict, total=False):
    """Insight input for aggregating by min"""
    id: bool
    dashboardId: bool
    userId: bool
    content: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class InsightNumberAggregateInput(TypedDict, total=False):
    """Insight input for aggregating numbers"""
    id: bool
    dashboardId: bool
    userId: bool


InsightAvgAggregateInput = InsightNumberAggregateInput
InsightSumAggregateInput = InsightNumberAggregateInput


InsightCountAggregateInput = TypedDict(
    'InsightCountAggregateInput',
    {
        'id': bool,
        'dashboardId': bool,
        'userId': bool,
        'content': bool,
        'metadata': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

InsightCountAggregateOutput = TypedDict(
    'InsightCountAggregateOutput',
    {
        'id': int,
        'dashboardId': int,
        'userId': int,
        'content': int,
        'metadata': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


InsightKeys = Literal[
    'id',
    'dashboardId',
    'userId',
    'content',
    'metadata',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'dashboard',
    'author',
]
InsightScalarFieldKeys = Literal[
    'id',
    'dashboardId',
    'userId',
    'content',
    'metadata',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
InsightScalarFieldKeysT = TypeVar('InsightScalarFieldKeysT', bound=InsightScalarFieldKeys)

InsightRelationalFieldKeys = Literal[
        'dashboard',
        'author',
    ]

# MLModel types

class MLModelOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the MLModel create method"""
    id: _int
    datasetId: _int
    creatorId: Optional[_int]
    modelPath: Optional[_str]
    metrics: Optional['fields.Json']
    params: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dataset: 'DatasetCreateNestedWithoutRelationsInput'
    creator: 'UserCreateNestedWithoutRelationsInput'


class MLModelCreateInput(MLModelOptionalCreateInput):
    """Required arguments to the MLModel create method"""
    name: _str
    type: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class MLModelOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the MLModel create method, without relations"""
    id: _int
    datasetId: _int
    creatorId: Optional[_int]
    modelPath: Optional[_str]
    metrics: Optional['fields.Json']
    params: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class MLModelCreateWithoutRelationsInput(MLModelOptionalCreateWithoutRelationsInput):
    """Required arguments to the MLModel create method, without relations"""
    name: _str
    type: _str

class MLModelConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'MLModelCreateWithoutRelationsInput'
    where: 'MLModelWhereUniqueInput'

class MLModelCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'MLModelCreateWithoutRelationsInput'
    connect: 'MLModelWhereUniqueInput'
    connect_or_create: 'MLModelConnectOrCreateWithoutRelationsInput'


class MLModelCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['MLModelCreateWithoutRelationsInput', List['MLModelCreateWithoutRelationsInput']]
    connect: Union['MLModelWhereUniqueInput', List['MLModelWhereUniqueInput']]
    connect_or_create: Union['MLModelConnectOrCreateWithoutRelationsInput', List['MLModelConnectOrCreateWithoutRelationsInput']]

_MLModelWhereUnique_id_Input = TypedDict(
    '_MLModelWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

MLModelWhereUniqueInput = _MLModelWhereUnique_id_Input


class MLModelUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    name: _str
    type: _str
    modelPath: Optional[_str]
    metrics: Optional['fields.Json']
    params: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    dataset: 'DatasetUpdateOneWithoutRelationsInput'
    creator: 'UserUpdateOneWithoutRelationsInput'


class MLModelUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    name: _str
    type: _str
    modelPath: Optional[_str]
    metrics: Optional['fields.Json']
    params: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class MLModelUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['MLModelCreateWithoutRelationsInput']
    connect: List['MLModelWhereUniqueInput']
    connect_or_create: List['MLModelConnectOrCreateWithoutRelationsInput']
    set: List['MLModelWhereUniqueInput']
    disconnect: List['MLModelWhereUniqueInput']
    delete: List['MLModelWhereUniqueInput']

    # TODO
    # update: List['MLModelUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['MLModelUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['MLModelScalarWhereInput']
    # upsert: List['MLModelUpserteWithWhereUniqueWithoutRelationsInput']


class MLModelUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'MLModelCreateWithoutRelationsInput'
    connect: 'MLModelWhereUniqueInput'
    connect_or_create: 'MLModelConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'MLModelUpdateInput'
    # upsert: 'MLModelUpsertWithoutRelationsInput'


class MLModelUpsertInput(TypedDict):
    create: 'MLModelCreateInput'
    update: 'MLModelUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_MLModel_id_OrderByInput = TypedDict(
    '_MLModel_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_MLModel_datasetId_OrderByInput = TypedDict(
    '_MLModel_datasetId_OrderByInput',
    {
        'datasetId': 'SortOrder',
    },
    total=True
)

_MLModel_creatorId_OrderByInput = TypedDict(
    '_MLModel_creatorId_OrderByInput',
    {
        'creatorId': 'SortOrder',
    },
    total=True
)

_MLModel_name_OrderByInput = TypedDict(
    '_MLModel_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_MLModel_type_OrderByInput = TypedDict(
    '_MLModel_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_MLModel_modelPath_OrderByInput = TypedDict(
    '_MLModel_modelPath_OrderByInput',
    {
        'modelPath': 'SortOrder',
    },
    total=True
)

_MLModel_metrics_OrderByInput = TypedDict(
    '_MLModel_metrics_OrderByInput',
    {
        'metrics': 'SortOrder',
    },
    total=True
)

_MLModel_params_OrderByInput = TypedDict(
    '_MLModel_params_OrderByInput',
    {
        'params': 'SortOrder',
    },
    total=True
)

_MLModel_createdAt_OrderByInput = TypedDict(
    '_MLModel_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_MLModel_updatedAt_OrderByInput = TypedDict(
    '_MLModel_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_MLModel_deletedAt_OrderByInput = TypedDict(
    '_MLModel_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_MLModel_RelevanceInner = TypedDict(
    '_MLModel_RelevanceInner',
    {
        'fields': 'List[MLModelScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_MLModel_RelevanceOrderByInput = TypedDict(
    '_MLModel_RelevanceOrderByInput',
    {
        '_relevance': '_MLModel_RelevanceInner',
    },
    total=True
)

MLModelOrderByInput = Union[
    '_MLModel_id_OrderByInput',
    '_MLModel_datasetId_OrderByInput',
    '_MLModel_creatorId_OrderByInput',
    '_MLModel_name_OrderByInput',
    '_MLModel_type_OrderByInput',
    '_MLModel_modelPath_OrderByInput',
    '_MLModel_metrics_OrderByInput',
    '_MLModel_params_OrderByInput',
    '_MLModel_createdAt_OrderByInput',
    '_MLModel_updatedAt_OrderByInput',
    '_MLModel_deletedAt_OrderByInput',
    '_MLModel_RelevanceOrderByInput',
]



# recursive MLModel types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

MLModelRelationFilter = TypedDict(
    'MLModelRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class MLModelListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class MLModelInclude(TypedDict, total=False):
    """MLModel relational arguments"""
    dataset: Union[bool, 'DatasetArgsFromMLModel']
    creator: Union[bool, 'UserArgsFromMLModel']


    

class UserIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromMLModelRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromMLModelRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromMLModelRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromMLModelRecursive1']
    files: Union[bool, 'FindManyFileArgsFromMLModelRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromMLModelRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMLModelRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromMLModelRecursive1']


class UserIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromMLModelRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromMLModelRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromMLModelRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromMLModelRecursive2']
    files: Union[bool, 'FindManyFileArgsFromMLModelRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromMLModelRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMLModelRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromMLModelRecursive2']


class UserIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromMLModelRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromMLModelRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromMLModelRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromMLModelRecursive3']
    files: Union[bool, 'FindManyFileArgsFromMLModelRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromMLModelRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMLModelRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromMLModelRecursive3']


class UserIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromMLModelRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromMLModelRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromMLModelRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromMLModelRecursive4']
    files: Union[bool, 'FindManyFileArgsFromMLModelRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromMLModelRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromMLModelRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromMLModelRecursive4']


class UserIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class UserArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyUserArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromMLModelRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive1']


class OrganizationIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromMLModelRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive2']


class OrganizationIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromMLModelRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive3']


class OrganizationIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromMLModelRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromMLModelRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromMLModelRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromMLModelRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromMLModelRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromMLModelRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromMLModelRecursive4']


class OrganizationIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class OrganizationArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyOrganizationArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    invitedBy: Union[bool, 'UserArgsFromMLModelRecursive1']


class OrganizationMemberIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    invitedBy: Union[bool, 'UserArgsFromMLModelRecursive2']


class OrganizationMemberIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    invitedBy: Union[bool, 'UserArgsFromMLModelRecursive3']


class OrganizationMemberIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    invitedBy: Union[bool, 'UserArgsFromMLModelRecursive4']


class OrganizationMemberIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class OrganizationMemberArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyOrganizationMemberArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    modules: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive1']


class PathIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    modules: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive2']


class PathIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    modules: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive3']


class PathIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    modules: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive4']


class PathIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class PathArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyPathArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    instructor: Union[bool, 'UserArgsFromMLModelRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromMLModelRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive1']


class ModuleIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    instructor: Union[bool, 'UserArgsFromMLModelRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromMLModelRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive2']


class ModuleIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    instructor: Union[bool, 'UserArgsFromMLModelRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromMLModelRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive3']


class ModuleIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    instructor: Union[bool, 'UserArgsFromMLModelRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromMLModelRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromMLModelRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromMLModelRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromMLModelRecursive4']


class ModuleIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class ModuleArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyModuleArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    path: Union[bool, 'PathArgsFromMLModelRecursive1']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive1']


class PathModuleIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    path: Union[bool, 'PathArgsFromMLModelRecursive2']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive2']


class PathModuleIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    path: Union[bool, 'PathArgsFromMLModelRecursive3']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive3']


class PathModuleIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    path: Union[bool, 'PathArgsFromMLModelRecursive4']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive4']


class PathModuleIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class PathModuleArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyPathModuleArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    module: Union[bool, 'ModuleArgsFromMLModelRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive1']


class LessonIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    module: Union[bool, 'ModuleArgsFromMLModelRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive2']


class LessonIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    module: Union[bool, 'ModuleArgsFromMLModelRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive3']


class LessonIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    module: Union[bool, 'ModuleArgsFromMLModelRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromMLModelRecursive4']


class LessonIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class LessonArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyLessonArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive1']
    path: Union[bool, 'PathArgsFromMLModelRecursive1']


class EnrollmentIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive2']
    path: Union[bool, 'PathArgsFromMLModelRecursive2']


class EnrollmentIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive3']
    path: Union[bool, 'PathArgsFromMLModelRecursive3']


class EnrollmentIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive4']
    path: Union[bool, 'PathArgsFromMLModelRecursive4']


class EnrollmentIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class EnrollmentArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyEnrollmentArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    lesson: Union[bool, 'LessonArgsFromMLModelRecursive1']


class LessonProgressIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    lesson: Union[bool, 'LessonArgsFromMLModelRecursive2']


class LessonProgressIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    lesson: Union[bool, 'LessonArgsFromMLModelRecursive3']


class LessonProgressIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    lesson: Union[bool, 'LessonArgsFromMLModelRecursive4']


class LessonProgressIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class LessonProgressArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyLessonProgressArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive1']


class CertificateIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive2']


class CertificateIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive3']


class CertificateIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    module: Union[bool, 'ModuleArgsFromMLModelRecursive4']


class CertificateIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class CertificateArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyCertificateArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive1']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromMLModelRecursive1']


class ProjectIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive2']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromMLModelRecursive2']


class ProjectIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive3']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromMLModelRecursive3']


class ProjectIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    owner: Union[bool, 'UserArgsFromMLModelRecursive4']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromMLModelRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromMLModelRecursive4']


class ProjectIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class ProjectArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyProjectArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive1']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive1']


class ProposalIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive2']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive2']


class ProposalIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive3']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive3']


class ProposalIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive4']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive4']


class ProposalIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class ProposalArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyProposalArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive1']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive1']
    client: Union[bool, 'UserArgsFromMLModelRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromMLModelRecursive1']


class ContractIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive2']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive2']
    client: Union[bool, 'UserArgsFromMLModelRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromMLModelRecursive2']


class ContractIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive3']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive3']
    client: Union[bool, 'UserArgsFromMLModelRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromMLModelRecursive3']


class ContractIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    project: Union[bool, 'ProjectArgsFromMLModelRecursive4']
    freelancer: Union[bool, 'UserArgsFromMLModelRecursive4']
    client: Union[bool, 'UserArgsFromMLModelRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromMLModelRecursive4']


class ContractIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class ContractArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyContractArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    contract: Union[bool, 'ContractArgsFromMLModelRecursive1']


class DeliveryIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    contract: Union[bool, 'ContractArgsFromMLModelRecursive2']


class DeliveryIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    contract: Union[bool, 'ContractArgsFromMLModelRecursive3']


class DeliveryIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    contract: Union[bool, 'ContractArgsFromMLModelRecursive4']


class DeliveryIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class DeliveryArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyDeliveryArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']


class UserSkillIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']


class UserSkillIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']


class UserSkillIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']


class UserSkillIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class UserSkillArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyUserSkillArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive1']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive1']


class DatasetIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive2']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive2']


class DatasetIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive3']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive3']


class DatasetIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive4']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromMLModelRecursive4']


class DatasetIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class DatasetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyDatasetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive1']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive1']


class DashboardIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive2']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive2']


class DashboardIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive3']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive3']


class DashboardIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    ownerUser: Union[bool, 'UserArgsFromMLModelRecursive4']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromMLModelRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromMLModelRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromMLModelRecursive4']


class DashboardIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class DashboardArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyDashboardArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive1']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive1']


class DashboardDatasetIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive2']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive2']


class DashboardDatasetIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive3']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive3']


class DashboardDatasetIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive4']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive4']


class DashboardDatasetIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class DashboardDatasetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyDashboardDatasetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive1']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive1']


class WidgetIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive2']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive2']


class WidgetIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive3']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive3']


class WidgetIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive4']
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive4']


class WidgetIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class WidgetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyWidgetArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive1']
    author: Union[bool, 'UserArgsFromMLModelRecursive1']


class InsightIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive2']
    author: Union[bool, 'UserArgsFromMLModelRecursive2']


class InsightIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive3']
    author: Union[bool, 'UserArgsFromMLModelRecursive3']


class InsightIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dashboard: Union[bool, 'DashboardArgsFromMLModelRecursive4']
    author: Union[bool, 'UserArgsFromMLModelRecursive4']


class InsightIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class InsightArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyInsightArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive1']
    creator: Union[bool, 'UserArgsFromMLModelRecursive1']


class MLModelIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive2']
    creator: Union[bool, 'UserArgsFromMLModelRecursive2']


class MLModelIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive3']
    creator: Union[bool, 'UserArgsFromMLModelRecursive3']


class MLModelIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    dataset: Union[bool, 'DatasetArgsFromMLModelRecursive4']
    creator: Union[bool, 'UserArgsFromMLModelRecursive4']


class MLModelIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class MLModelArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyMLModelArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']


class TransactionIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']


class TransactionIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']


class TransactionIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']


class TransactionIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class TransactionArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyTransactionArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive1']


class SubscriptionIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive2']


class SubscriptionIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive3']


class SubscriptionIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']
    organization: Union[bool, 'OrganizationArgsFromMLModelRecursive4']


class SubscriptionIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class SubscriptionArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManySubscriptionArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']


class NotificationIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']


class NotificationIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']


class NotificationIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']


class NotificationIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class NotificationArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyNotificationArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive1']


class AuthTokenIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive2']


class AuthTokenIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive3']


class AuthTokenIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    user: Union[bool, 'UserArgsFromMLModelRecursive4']


class AuthTokenIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class AuthTokenArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyAuthTokenArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    uploader: Union[bool, 'UserArgsFromMLModelRecursive1']


class FileIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    uploader: Union[bool, 'UserArgsFromMLModelRecursive2']


class FileIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    uploader: Union[bool, 'UserArgsFromMLModelRecursive3']


class FileIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    uploader: Union[bool, 'UserArgsFromMLModelRecursive4']


class FileIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class FileArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyFileArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromMLModel(TypedDict, total=False):
    """Relational arguments for MLModel"""
    actor: Union[bool, 'UserArgsFromMLModelRecursive1']


class AuditLogIncludeFromMLModelRecursive1(TypedDict, total=False):
    """Relational arguments for MLModel"""
    actor: Union[bool, 'UserArgsFromMLModelRecursive2']


class AuditLogIncludeFromMLModelRecursive2(TypedDict, total=False):
    """Relational arguments for MLModel"""
    actor: Union[bool, 'UserArgsFromMLModelRecursive3']


class AuditLogIncludeFromMLModelRecursive3(TypedDict, total=False):
    """Relational arguments for MLModel"""
    actor: Union[bool, 'UserArgsFromMLModelRecursive4']


class AuditLogIncludeFromMLModelRecursive4(TypedDict, total=False):
    """Relational arguments for MLModel"""

    

class AuditLogArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    
    

class FindManyAuditLogArgsFromMLModel(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromMLModelRecursive1(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromMLModelRecursive2(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromMLModelRecursive3(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromMLModelRecursive4(TypedDict, total=False):
    """Arguments for MLModel"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyMLModelArgs = FindManyMLModelArgsFromMLModel
FindFirstMLModelArgs = FindManyMLModelArgsFromMLModel


    

class MLModelWhereInput(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    creatorId: Union[None, _int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    modelPath: Union[None, _str, 'types.StringFilter']
    metrics: Union[None, 'fields.Json', 'types.JsonFilter']
    params: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dataset: 'DatasetRelationFilter'
    creator: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['MLModelWhereInputRecursive1', List['MLModelWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['MLModelWhereInputRecursive1']
    OR: List['MLModelWhereInputRecursive1']
    NOT: List['MLModelWhereInputRecursive1']


class MLModelWhereInputRecursive1(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    creatorId: Union[None, _int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    modelPath: Union[None, _str, 'types.StringFilter']
    metrics: Union[None, 'fields.Json', 'types.JsonFilter']
    params: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dataset: 'DatasetRelationFilter'
    creator: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['MLModelWhereInputRecursive2', List['MLModelWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['MLModelWhereInputRecursive2']
    OR: List['MLModelWhereInputRecursive2']
    NOT: List['MLModelWhereInputRecursive2']


class MLModelWhereInputRecursive2(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    creatorId: Union[None, _int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    modelPath: Union[None, _str, 'types.StringFilter']
    metrics: Union[None, 'fields.Json', 'types.JsonFilter']
    params: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dataset: 'DatasetRelationFilter'
    creator: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['MLModelWhereInputRecursive3', List['MLModelWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['MLModelWhereInputRecursive3']
    OR: List['MLModelWhereInputRecursive3']
    NOT: List['MLModelWhereInputRecursive3']


class MLModelWhereInputRecursive3(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    creatorId: Union[None, _int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    modelPath: Union[None, _str, 'types.StringFilter']
    metrics: Union[None, 'fields.Json', 'types.JsonFilter']
    params: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dataset: 'DatasetRelationFilter'
    creator: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['MLModelWhereInputRecursive4', List['MLModelWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['MLModelWhereInputRecursive4']
    OR: List['MLModelWhereInputRecursive4']
    NOT: List['MLModelWhereInputRecursive4']


class MLModelWhereInputRecursive4(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    datasetId: Union[_int, 'types.IntFilter']
    creatorId: Union[None, _int, 'types.IntFilter']
    name: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    modelPath: Union[None, _str, 'types.StringFilter']
    metrics: Union[None, 'fields.Json', 'types.JsonFilter']
    params: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    dataset: 'DatasetRelationFilter'
    creator: 'UserRelationFilter'



# aggregate MLModel types


    

class MLModelScalarWhereWithAggregatesInput(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    creatorId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    modelPath: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    params: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MLModelScalarWhereWithAggregatesInputRecursive1']
    OR: List['MLModelScalarWhereWithAggregatesInputRecursive1']
    NOT: List['MLModelScalarWhereWithAggregatesInputRecursive1']


class MLModelScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    creatorId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    modelPath: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    params: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MLModelScalarWhereWithAggregatesInputRecursive2']
    OR: List['MLModelScalarWhereWithAggregatesInputRecursive2']
    NOT: List['MLModelScalarWhereWithAggregatesInputRecursive2']


class MLModelScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    creatorId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    modelPath: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    params: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MLModelScalarWhereWithAggregatesInputRecursive3']
    OR: List['MLModelScalarWhereWithAggregatesInputRecursive3']
    NOT: List['MLModelScalarWhereWithAggregatesInputRecursive3']


class MLModelScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    creatorId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    modelPath: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    params: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MLModelScalarWhereWithAggregatesInputRecursive4']
    OR: List['MLModelScalarWhereWithAggregatesInputRecursive4']
    NOT: List['MLModelScalarWhereWithAggregatesInputRecursive4']


class MLModelScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """MLModel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    datasetId: Union[_int, 'types.IntWithAggregatesFilter']
    creatorId: Union[_int, 'types.IntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    modelPath: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    params: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class MLModelGroupByOutput(TypedDict, total=False):
    id: _int
    datasetId: _int
    creatorId: _int
    name: _str
    type: _str
    modelPath: _str
    metrics: 'fields.Json'
    params: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'MLModelSumAggregateOutput'
    _avg: 'MLModelAvgAggregateOutput'
    _min: 'MLModelMinAggregateOutput'
    _max: 'MLModelMaxAggregateOutput'
    _count: 'MLModelCountAggregateOutput'


class MLModelAvgAggregateOutput(TypedDict, total=False):
    """MLModel output for aggregating averages"""
    id: float
    datasetId: float
    creatorId: float


class MLModelSumAggregateOutput(TypedDict, total=False):
    """MLModel output for aggregating sums"""
    id: _int
    datasetId: _int
    creatorId: _int


class MLModelScalarAggregateOutput(TypedDict, total=False):
    """MLModel output including scalar fields"""
    id: _int
    datasetId: _int
    creatorId: _int
    name: _str
    type: _str
    modelPath: _str
    metrics: 'fields.Json'
    params: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


MLModelMinAggregateOutput = MLModelScalarAggregateOutput
MLModelMaxAggregateOutput = MLModelScalarAggregateOutput


class MLModelMaxAggregateInput(TypedDict, total=False):
    """MLModel input for aggregating by max"""
    id: bool
    datasetId: bool
    creatorId: bool
    name: bool
    type: bool
    modelPath: bool
    metrics: bool
    params: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class MLModelMinAggregateInput(TypedDict, total=False):
    """MLModel input for aggregating by min"""
    id: bool
    datasetId: bool
    creatorId: bool
    name: bool
    type: bool
    modelPath: bool
    metrics: bool
    params: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class MLModelNumberAggregateInput(TypedDict, total=False):
    """MLModel input for aggregating numbers"""
    id: bool
    datasetId: bool
    creatorId: bool


MLModelAvgAggregateInput = MLModelNumberAggregateInput
MLModelSumAggregateInput = MLModelNumberAggregateInput


MLModelCountAggregateInput = TypedDict(
    'MLModelCountAggregateInput',
    {
        'id': bool,
        'datasetId': bool,
        'creatorId': bool,
        'name': bool,
        'type': bool,
        'modelPath': bool,
        'metrics': bool,
        'params': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

MLModelCountAggregateOutput = TypedDict(
    'MLModelCountAggregateOutput',
    {
        'id': int,
        'datasetId': int,
        'creatorId': int,
        'name': int,
        'type': int,
        'modelPath': int,
        'metrics': int,
        'params': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


MLModelKeys = Literal[
    'id',
    'datasetId',
    'creatorId',
    'name',
    'type',
    'modelPath',
    'metrics',
    'params',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'dataset',
    'creator',
]
MLModelScalarFieldKeys = Literal[
    'id',
    'datasetId',
    'creatorId',
    'name',
    'type',
    'modelPath',
    'metrics',
    'params',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
MLModelScalarFieldKeysT = TypeVar('MLModelScalarFieldKeysT', bound=MLModelScalarFieldKeys)

MLModelRelationalFieldKeys = Literal[
        'dataset',
        'creator',
    ]

# Transaction types

class TransactionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Transaction create method"""
    id: _int
    userId: Optional[_int]
    organizationId: Optional[_int]
    currency: _str
    status: 'enums.PaymentStatus'
    providerData: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'
    organization: 'OrganizationCreateNestedWithoutRelationsInput'


class TransactionCreateInput(TransactionOptionalCreateInput):
    """Required arguments to the Transaction create method"""
    amountCents: _int
    type: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class TransactionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Transaction create method, without relations"""
    id: _int
    userId: Optional[_int]
    organizationId: Optional[_int]
    currency: _str
    status: 'enums.PaymentStatus'
    providerData: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class TransactionCreateWithoutRelationsInput(TransactionOptionalCreateWithoutRelationsInput):
    """Required arguments to the Transaction create method, without relations"""
    amountCents: _int
    type: _str

class TransactionConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'TransactionCreateWithoutRelationsInput'
    where: 'TransactionWhereUniqueInput'

class TransactionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'TransactionCreateWithoutRelationsInput'
    connect: 'TransactionWhereUniqueInput'
    connect_or_create: 'TransactionConnectOrCreateWithoutRelationsInput'


class TransactionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['TransactionCreateWithoutRelationsInput', List['TransactionCreateWithoutRelationsInput']]
    connect: Union['TransactionWhereUniqueInput', List['TransactionWhereUniqueInput']]
    connect_or_create: Union['TransactionConnectOrCreateWithoutRelationsInput', List['TransactionConnectOrCreateWithoutRelationsInput']]

_TransactionWhereUnique_id_Input = TypedDict(
    '_TransactionWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

TransactionWhereUniqueInput = _TransactionWhereUnique_id_Input


class TransactionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    amountCents: Union[AtomicIntInput, _int]
    currency: _str
    type: _str
    status: 'enums.PaymentStatus'
    providerData: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'
    organization: 'OrganizationUpdateOneWithoutRelationsInput'


class TransactionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    amountCents: Union[AtomicIntInput, _int]
    currency: _str
    type: _str
    status: 'enums.PaymentStatus'
    providerData: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class TransactionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['TransactionCreateWithoutRelationsInput']
    connect: List['TransactionWhereUniqueInput']
    connect_or_create: List['TransactionConnectOrCreateWithoutRelationsInput']
    set: List['TransactionWhereUniqueInput']
    disconnect: List['TransactionWhereUniqueInput']
    delete: List['TransactionWhereUniqueInput']

    # TODO
    # update: List['TransactionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['TransactionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['TransactionScalarWhereInput']
    # upsert: List['TransactionUpserteWithWhereUniqueWithoutRelationsInput']


class TransactionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'TransactionCreateWithoutRelationsInput'
    connect: 'TransactionWhereUniqueInput'
    connect_or_create: 'TransactionConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'TransactionUpdateInput'
    # upsert: 'TransactionUpsertWithoutRelationsInput'


class TransactionUpsertInput(TypedDict):
    create: 'TransactionCreateInput'
    update: 'TransactionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Transaction_id_OrderByInput = TypedDict(
    '_Transaction_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Transaction_userId_OrderByInput = TypedDict(
    '_Transaction_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Transaction_organizationId_OrderByInput = TypedDict(
    '_Transaction_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_Transaction_amountCents_OrderByInput = TypedDict(
    '_Transaction_amountCents_OrderByInput',
    {
        'amountCents': 'SortOrder',
    },
    total=True
)

_Transaction_currency_OrderByInput = TypedDict(
    '_Transaction_currency_OrderByInput',
    {
        'currency': 'SortOrder',
    },
    total=True
)

_Transaction_type_OrderByInput = TypedDict(
    '_Transaction_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Transaction_status_OrderByInput = TypedDict(
    '_Transaction_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Transaction_providerData_OrderByInput = TypedDict(
    '_Transaction_providerData_OrderByInput',
    {
        'providerData': 'SortOrder',
    },
    total=True
)

_Transaction_createdAt_OrderByInput = TypedDict(
    '_Transaction_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Transaction_updatedAt_OrderByInput = TypedDict(
    '_Transaction_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Transaction_deletedAt_OrderByInput = TypedDict(
    '_Transaction_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Transaction_RelevanceInner = TypedDict(
    '_Transaction_RelevanceInner',
    {
        'fields': 'List[TransactionScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Transaction_RelevanceOrderByInput = TypedDict(
    '_Transaction_RelevanceOrderByInput',
    {
        '_relevance': '_Transaction_RelevanceInner',
    },
    total=True
)

TransactionOrderByInput = Union[
    '_Transaction_id_OrderByInput',
    '_Transaction_userId_OrderByInput',
    '_Transaction_organizationId_OrderByInput',
    '_Transaction_amountCents_OrderByInput',
    '_Transaction_currency_OrderByInput',
    '_Transaction_type_OrderByInput',
    '_Transaction_status_OrderByInput',
    '_Transaction_providerData_OrderByInput',
    '_Transaction_createdAt_OrderByInput',
    '_Transaction_updatedAt_OrderByInput',
    '_Transaction_deletedAt_OrderByInput',
    '_Transaction_RelevanceOrderByInput',
]



# recursive Transaction types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

TransactionRelationFilter = TypedDict(
    'TransactionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class TransactionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class TransactionInclude(TypedDict, total=False):
    """Transaction relational arguments"""
    user: Union[bool, 'UserArgsFromTransaction']
    organization: Union[bool, 'OrganizationArgsFromTransaction']


    

class UserIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromTransactionRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromTransactionRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromTransactionRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromTransactionRecursive1']
    files: Union[bool, 'FindManyFileArgsFromTransactionRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromTransactionRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTransactionRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromTransactionRecursive1']


class UserIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromTransactionRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromTransactionRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromTransactionRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromTransactionRecursive2']
    files: Union[bool, 'FindManyFileArgsFromTransactionRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromTransactionRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTransactionRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromTransactionRecursive2']


class UserIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromTransactionRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromTransactionRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromTransactionRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromTransactionRecursive3']
    files: Union[bool, 'FindManyFileArgsFromTransactionRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromTransactionRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTransactionRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromTransactionRecursive3']


class UserIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromTransactionRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromTransactionRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromTransactionRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromTransactionRecursive4']
    files: Union[bool, 'FindManyFileArgsFromTransactionRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromTransactionRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromTransactionRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromTransactionRecursive4']


class UserIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class UserArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyUserArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromTransactionRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive1']


class OrganizationIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromTransactionRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive2']


class OrganizationIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromTransactionRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive3']


class OrganizationIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromTransactionRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromTransactionRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromTransactionRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromTransactionRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromTransactionRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromTransactionRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromTransactionRecursive4']


class OrganizationIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class OrganizationArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyOrganizationArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    invitedBy: Union[bool, 'UserArgsFromTransactionRecursive1']


class OrganizationMemberIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    invitedBy: Union[bool, 'UserArgsFromTransactionRecursive2']


class OrganizationMemberIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    invitedBy: Union[bool, 'UserArgsFromTransactionRecursive3']


class OrganizationMemberIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    invitedBy: Union[bool, 'UserArgsFromTransactionRecursive4']


class OrganizationMemberIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class OrganizationMemberArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyOrganizationMemberArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    modules: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive1']


class PathIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    modules: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive2']


class PathIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    modules: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive3']


class PathIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    modules: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive4']


class PathIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class PathArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyPathArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    instructor: Union[bool, 'UserArgsFromTransactionRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromTransactionRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive1']


class ModuleIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    instructor: Union[bool, 'UserArgsFromTransactionRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromTransactionRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive2']


class ModuleIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    instructor: Union[bool, 'UserArgsFromTransactionRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromTransactionRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive3']


class ModuleIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    instructor: Union[bool, 'UserArgsFromTransactionRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromTransactionRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromTransactionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromTransactionRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromTransactionRecursive4']


class ModuleIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class ModuleArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyModuleArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    path: Union[bool, 'PathArgsFromTransactionRecursive1']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive1']


class PathModuleIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    path: Union[bool, 'PathArgsFromTransactionRecursive2']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive2']


class PathModuleIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    path: Union[bool, 'PathArgsFromTransactionRecursive3']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive3']


class PathModuleIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    path: Union[bool, 'PathArgsFromTransactionRecursive4']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive4']


class PathModuleIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class PathModuleArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyPathModuleArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    module: Union[bool, 'ModuleArgsFromTransactionRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive1']


class LessonIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    module: Union[bool, 'ModuleArgsFromTransactionRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive2']


class LessonIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    module: Union[bool, 'ModuleArgsFromTransactionRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive3']


class LessonIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    module: Union[bool, 'ModuleArgsFromTransactionRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromTransactionRecursive4']


class LessonIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class LessonArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyLessonArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive1']
    path: Union[bool, 'PathArgsFromTransactionRecursive1']


class EnrollmentIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive2']
    path: Union[bool, 'PathArgsFromTransactionRecursive2']


class EnrollmentIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive3']
    path: Union[bool, 'PathArgsFromTransactionRecursive3']


class EnrollmentIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive4']
    path: Union[bool, 'PathArgsFromTransactionRecursive4']


class EnrollmentIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class EnrollmentArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyEnrollmentArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    lesson: Union[bool, 'LessonArgsFromTransactionRecursive1']


class LessonProgressIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    lesson: Union[bool, 'LessonArgsFromTransactionRecursive2']


class LessonProgressIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    lesson: Union[bool, 'LessonArgsFromTransactionRecursive3']


class LessonProgressIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    lesson: Union[bool, 'LessonArgsFromTransactionRecursive4']


class LessonProgressIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class LessonProgressArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyLessonProgressArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive1']


class CertificateIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive2']


class CertificateIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive3']


class CertificateIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    module: Union[bool, 'ModuleArgsFromTransactionRecursive4']


class CertificateIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class CertificateArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyCertificateArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromTransactionRecursive1']


class ProjectIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromTransactionRecursive2']


class ProjectIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromTransactionRecursive3']


class ProjectIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    owner: Union[bool, 'UserArgsFromTransactionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromTransactionRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromTransactionRecursive4']


class ProjectIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class ProjectArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyProjectArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive1']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive1']


class ProposalIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive2']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive2']


class ProposalIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive3']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive3']


class ProposalIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive4']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive4']


class ProposalIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class ProposalArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyProposalArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive1']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive1']
    client: Union[bool, 'UserArgsFromTransactionRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromTransactionRecursive1']


class ContractIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive2']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive2']
    client: Union[bool, 'UserArgsFromTransactionRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromTransactionRecursive2']


class ContractIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive3']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive3']
    client: Union[bool, 'UserArgsFromTransactionRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromTransactionRecursive3']


class ContractIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    project: Union[bool, 'ProjectArgsFromTransactionRecursive4']
    freelancer: Union[bool, 'UserArgsFromTransactionRecursive4']
    client: Union[bool, 'UserArgsFromTransactionRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromTransactionRecursive4']


class ContractIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class ContractArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyContractArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    contract: Union[bool, 'ContractArgsFromTransactionRecursive1']


class DeliveryIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    contract: Union[bool, 'ContractArgsFromTransactionRecursive2']


class DeliveryIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    contract: Union[bool, 'ContractArgsFromTransactionRecursive3']


class DeliveryIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    contract: Union[bool, 'ContractArgsFromTransactionRecursive4']


class DeliveryIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class DeliveryArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyDeliveryArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']


class UserSkillIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']


class UserSkillIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']


class UserSkillIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']


class UserSkillIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class UserSkillArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyUserSkillArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive1']


class DatasetIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive2']


class DatasetIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive3']


class DatasetIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromTransactionRecursive4']


class DatasetIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class DatasetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyDatasetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive1']


class DashboardIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive2']


class DashboardIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive3']


class DashboardIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    ownerUser: Union[bool, 'UserArgsFromTransactionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromTransactionRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromTransactionRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromTransactionRecursive4']


class DashboardIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class DashboardArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyDashboardArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive1']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive1']


class DashboardDatasetIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive2']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive2']


class DashboardDatasetIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive3']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive3']


class DashboardDatasetIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive4']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive4']


class DashboardDatasetIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class DashboardDatasetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyDashboardDatasetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive1']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive1']


class WidgetIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive2']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive2']


class WidgetIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive3']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive3']


class WidgetIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive4']
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive4']


class WidgetIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class WidgetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyWidgetArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive1']
    author: Union[bool, 'UserArgsFromTransactionRecursive1']


class InsightIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive2']
    author: Union[bool, 'UserArgsFromTransactionRecursive2']


class InsightIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive3']
    author: Union[bool, 'UserArgsFromTransactionRecursive3']


class InsightIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dashboard: Union[bool, 'DashboardArgsFromTransactionRecursive4']
    author: Union[bool, 'UserArgsFromTransactionRecursive4']


class InsightIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class InsightArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyInsightArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive1']
    creator: Union[bool, 'UserArgsFromTransactionRecursive1']


class MLModelIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive2']
    creator: Union[bool, 'UserArgsFromTransactionRecursive2']


class MLModelIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive3']
    creator: Union[bool, 'UserArgsFromTransactionRecursive3']


class MLModelIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    dataset: Union[bool, 'DatasetArgsFromTransactionRecursive4']
    creator: Union[bool, 'UserArgsFromTransactionRecursive4']


class MLModelIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class MLModelArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyMLModelArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']


class TransactionIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']


class TransactionIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']


class TransactionIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']


class TransactionIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class TransactionArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyTransactionArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive1']


class SubscriptionIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive2']


class SubscriptionIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive3']


class SubscriptionIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromTransactionRecursive4']


class SubscriptionIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class SubscriptionArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManySubscriptionArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']


class NotificationIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']


class NotificationIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']


class NotificationIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']


class NotificationIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class NotificationArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyNotificationArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive1']


class AuthTokenIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive2']


class AuthTokenIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive3']


class AuthTokenIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    user: Union[bool, 'UserArgsFromTransactionRecursive4']


class AuthTokenIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class AuthTokenArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyAuthTokenArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    uploader: Union[bool, 'UserArgsFromTransactionRecursive1']


class FileIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    uploader: Union[bool, 'UserArgsFromTransactionRecursive2']


class FileIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    uploader: Union[bool, 'UserArgsFromTransactionRecursive3']


class FileIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    uploader: Union[bool, 'UserArgsFromTransactionRecursive4']


class FileIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class FileArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyFileArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromTransaction(TypedDict, total=False):
    """Relational arguments for Transaction"""
    actor: Union[bool, 'UserArgsFromTransactionRecursive1']


class AuditLogIncludeFromTransactionRecursive1(TypedDict, total=False):
    """Relational arguments for Transaction"""
    actor: Union[bool, 'UserArgsFromTransactionRecursive2']


class AuditLogIncludeFromTransactionRecursive2(TypedDict, total=False):
    """Relational arguments for Transaction"""
    actor: Union[bool, 'UserArgsFromTransactionRecursive3']


class AuditLogIncludeFromTransactionRecursive3(TypedDict, total=False):
    """Relational arguments for Transaction"""
    actor: Union[bool, 'UserArgsFromTransactionRecursive4']


class AuditLogIncludeFromTransactionRecursive4(TypedDict, total=False):
    """Relational arguments for Transaction"""

    

class AuditLogArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    
    

class FindManyAuditLogArgsFromTransaction(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromTransactionRecursive1(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromTransactionRecursive2(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromTransactionRecursive3(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromTransactionRecursive4(TypedDict, total=False):
    """Arguments for Transaction"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyTransactionArgs = FindManyTransactionArgsFromTransaction
FindFirstTransactionArgs = FindManyTransactionArgsFromTransaction


    

class TransactionWhereInput(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    amountCents: Union[_int, 'types.IntFilter']
    currency: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    status: 'enums.PaymentStatus'
    providerData: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['TransactionWhereInputRecursive1', List['TransactionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['TransactionWhereInputRecursive1']
    OR: List['TransactionWhereInputRecursive1']
    NOT: List['TransactionWhereInputRecursive1']


class TransactionWhereInputRecursive1(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    amountCents: Union[_int, 'types.IntFilter']
    currency: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    status: 'enums.PaymentStatus'
    providerData: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['TransactionWhereInputRecursive2', List['TransactionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['TransactionWhereInputRecursive2']
    OR: List['TransactionWhereInputRecursive2']
    NOT: List['TransactionWhereInputRecursive2']


class TransactionWhereInputRecursive2(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    amountCents: Union[_int, 'types.IntFilter']
    currency: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    status: 'enums.PaymentStatus'
    providerData: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['TransactionWhereInputRecursive3', List['TransactionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['TransactionWhereInputRecursive3']
    OR: List['TransactionWhereInputRecursive3']
    NOT: List['TransactionWhereInputRecursive3']


class TransactionWhereInputRecursive3(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    amountCents: Union[_int, 'types.IntFilter']
    currency: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    status: 'enums.PaymentStatus'
    providerData: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['TransactionWhereInputRecursive4', List['TransactionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['TransactionWhereInputRecursive4']
    OR: List['TransactionWhereInputRecursive4']
    NOT: List['TransactionWhereInputRecursive4']


class TransactionWhereInputRecursive4(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    amountCents: Union[_int, 'types.IntFilter']
    currency: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    status: 'enums.PaymentStatus'
    providerData: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'



# aggregate Transaction types


    

class TransactionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    currency: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.PaymentStatus'
    providerData: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TransactionScalarWhereWithAggregatesInputRecursive1']
    OR: List['TransactionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['TransactionScalarWhereWithAggregatesInputRecursive1']


class TransactionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    currency: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.PaymentStatus'
    providerData: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TransactionScalarWhereWithAggregatesInputRecursive2']
    OR: List['TransactionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['TransactionScalarWhereWithAggregatesInputRecursive2']


class TransactionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    currency: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.PaymentStatus'
    providerData: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TransactionScalarWhereWithAggregatesInputRecursive3']
    OR: List['TransactionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['TransactionScalarWhereWithAggregatesInputRecursive3']


class TransactionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    currency: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.PaymentStatus'
    providerData: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['TransactionScalarWhereWithAggregatesInputRecursive4']
    OR: List['TransactionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['TransactionScalarWhereWithAggregatesInputRecursive4']


class TransactionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Transaction arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    amountCents: Union[_int, 'types.IntWithAggregatesFilter']
    currency: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.PaymentStatus'
    providerData: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class TransactionGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    organizationId: _int
    amountCents: _int
    currency: _str
    type: _str
    status: 'enums.PaymentStatus'
    providerData: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'TransactionSumAggregateOutput'
    _avg: 'TransactionAvgAggregateOutput'
    _min: 'TransactionMinAggregateOutput'
    _max: 'TransactionMaxAggregateOutput'
    _count: 'TransactionCountAggregateOutput'


class TransactionAvgAggregateOutput(TypedDict, total=False):
    """Transaction output for aggregating averages"""
    id: float
    userId: float
    organizationId: float
    amountCents: float


class TransactionSumAggregateOutput(TypedDict, total=False):
    """Transaction output for aggregating sums"""
    id: _int
    userId: _int
    organizationId: _int
    amountCents: _int


class TransactionScalarAggregateOutput(TypedDict, total=False):
    """Transaction output including scalar fields"""
    id: _int
    userId: _int
    organizationId: _int
    amountCents: _int
    currency: _str
    type: _str
    status: 'enums.PaymentStatus'
    providerData: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


TransactionMinAggregateOutput = TransactionScalarAggregateOutput
TransactionMaxAggregateOutput = TransactionScalarAggregateOutput


class TransactionMaxAggregateInput(TypedDict, total=False):
    """Transaction input for aggregating by max"""
    id: bool
    userId: bool
    organizationId: bool
    amountCents: bool
    currency: bool
    type: bool
    status: bool
    providerData: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class TransactionMinAggregateInput(TypedDict, total=False):
    """Transaction input for aggregating by min"""
    id: bool
    userId: bool
    organizationId: bool
    amountCents: bool
    currency: bool
    type: bool
    status: bool
    providerData: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class TransactionNumberAggregateInput(TypedDict, total=False):
    """Transaction input for aggregating numbers"""
    id: bool
    userId: bool
    organizationId: bool
    amountCents: bool


TransactionAvgAggregateInput = TransactionNumberAggregateInput
TransactionSumAggregateInput = TransactionNumberAggregateInput


TransactionCountAggregateInput = TypedDict(
    'TransactionCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'organizationId': bool,
        'amountCents': bool,
        'currency': bool,
        'type': bool,
        'status': bool,
        'providerData': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

TransactionCountAggregateOutput = TypedDict(
    'TransactionCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'organizationId': int,
        'amountCents': int,
        'currency': int,
        'type': int,
        'status': int,
        'providerData': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


TransactionKeys = Literal[
    'id',
    'userId',
    'organizationId',
    'amountCents',
    'currency',
    'type',
    'status',
    'providerData',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'user',
    'organization',
]
TransactionScalarFieldKeys = Literal[
    'id',
    'userId',
    'organizationId',
    'amountCents',
    'currency',
    'type',
    'status',
    'providerData',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
TransactionScalarFieldKeysT = TypeVar('TransactionScalarFieldKeysT', bound=TransactionScalarFieldKeys)

TransactionRelationalFieldKeys = Literal[
        'user',
        'organization',
    ]

# Subscription types

class SubscriptionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Subscription create method"""
    id: _int
    userId: Optional[_int]
    organizationId: Optional[_int]
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: Optional[datetime.datetime]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'
    organization: 'OrganizationCreateNestedWithoutRelationsInput'


class SubscriptionCreateInput(SubscriptionOptionalCreateInput):
    """Required arguments to the Subscription create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class SubscriptionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Subscription create method, without relations"""
    id: _int
    userId: Optional[_int]
    organizationId: Optional[_int]
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: Optional[datetime.datetime]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class SubscriptionCreateWithoutRelationsInput(SubscriptionOptionalCreateWithoutRelationsInput):
    """Required arguments to the Subscription create method, without relations"""

class SubscriptionConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'SubscriptionCreateWithoutRelationsInput'
    where: 'SubscriptionWhereUniqueInput'

class SubscriptionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'SubscriptionCreateWithoutRelationsInput'
    connect: 'SubscriptionWhereUniqueInput'
    connect_or_create: 'SubscriptionConnectOrCreateWithoutRelationsInput'


class SubscriptionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['SubscriptionCreateWithoutRelationsInput', List['SubscriptionCreateWithoutRelationsInput']]
    connect: Union['SubscriptionWhereUniqueInput', List['SubscriptionWhereUniqueInput']]
    connect_or_create: Union['SubscriptionConnectOrCreateWithoutRelationsInput', List['SubscriptionConnectOrCreateWithoutRelationsInput']]

_SubscriptionWhereUnique_id_Input = TypedDict(
    '_SubscriptionWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

SubscriptionWhereUniqueInput = _SubscriptionWhereUnique_id_Input


class SubscriptionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: Optional[datetime.datetime]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'
    organization: 'OrganizationUpdateOneWithoutRelationsInput'


class SubscriptionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: Optional[datetime.datetime]
    metadata: Optional['fields.Json']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class SubscriptionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['SubscriptionCreateWithoutRelationsInput']
    connect: List['SubscriptionWhereUniqueInput']
    connect_or_create: List['SubscriptionConnectOrCreateWithoutRelationsInput']
    set: List['SubscriptionWhereUniqueInput']
    disconnect: List['SubscriptionWhereUniqueInput']
    delete: List['SubscriptionWhereUniqueInput']

    # TODO
    # update: List['SubscriptionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['SubscriptionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['SubscriptionScalarWhereInput']
    # upsert: List['SubscriptionUpserteWithWhereUniqueWithoutRelationsInput']


class SubscriptionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'SubscriptionCreateWithoutRelationsInput'
    connect: 'SubscriptionWhereUniqueInput'
    connect_or_create: 'SubscriptionConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'SubscriptionUpdateInput'
    # upsert: 'SubscriptionUpsertWithoutRelationsInput'


class SubscriptionUpsertInput(TypedDict):
    create: 'SubscriptionCreateInput'
    update: 'SubscriptionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Subscription_id_OrderByInput = TypedDict(
    '_Subscription_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Subscription_userId_OrderByInput = TypedDict(
    '_Subscription_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Subscription_organizationId_OrderByInput = TypedDict(
    '_Subscription_organizationId_OrderByInput',
    {
        'organizationId': 'SortOrder',
    },
    total=True
)

_Subscription_plan_OrderByInput = TypedDict(
    '_Subscription_plan_OrderByInput',
    {
        'plan': 'SortOrder',
    },
    total=True
)

_Subscription_active_OrderByInput = TypedDict(
    '_Subscription_active_OrderByInput',
    {
        'active': 'SortOrder',
    },
    total=True
)

_Subscription_startedAt_OrderByInput = TypedDict(
    '_Subscription_startedAt_OrderByInput',
    {
        'startedAt': 'SortOrder',
    },
    total=True
)

_Subscription_endsAt_OrderByInput = TypedDict(
    '_Subscription_endsAt_OrderByInput',
    {
        'endsAt': 'SortOrder',
    },
    total=True
)

_Subscription_metadata_OrderByInput = TypedDict(
    '_Subscription_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Subscription_createdAt_OrderByInput = TypedDict(
    '_Subscription_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Subscription_updatedAt_OrderByInput = TypedDict(
    '_Subscription_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Subscription_deletedAt_OrderByInput = TypedDict(
    '_Subscription_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Subscription_RelevanceInner = TypedDict(
    '_Subscription_RelevanceInner',
    {
        'fields': 'List[SubscriptionScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Subscription_RelevanceOrderByInput = TypedDict(
    '_Subscription_RelevanceOrderByInput',
    {
        '_relevance': '_Subscription_RelevanceInner',
    },
    total=True
)

SubscriptionOrderByInput = Union[
    '_Subscription_id_OrderByInput',
    '_Subscription_userId_OrderByInput',
    '_Subscription_organizationId_OrderByInput',
    '_Subscription_plan_OrderByInput',
    '_Subscription_active_OrderByInput',
    '_Subscription_startedAt_OrderByInput',
    '_Subscription_endsAt_OrderByInput',
    '_Subscription_metadata_OrderByInput',
    '_Subscription_createdAt_OrderByInput',
    '_Subscription_updatedAt_OrderByInput',
    '_Subscription_deletedAt_OrderByInput',
    '_Subscription_RelevanceOrderByInput',
]



# recursive Subscription types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

SubscriptionRelationFilter = TypedDict(
    'SubscriptionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class SubscriptionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class SubscriptionInclude(TypedDict, total=False):
    """Subscription relational arguments"""
    user: Union[bool, 'UserArgsFromSubscription']
    organization: Union[bool, 'OrganizationArgsFromSubscription']


    

class UserIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromSubscriptionRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromSubscriptionRecursive1']
    files: Union[bool, 'FindManyFileArgsFromSubscriptionRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromSubscriptionRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromSubscriptionRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromSubscriptionRecursive1']


class UserIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromSubscriptionRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromSubscriptionRecursive2']
    files: Union[bool, 'FindManyFileArgsFromSubscriptionRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromSubscriptionRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromSubscriptionRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromSubscriptionRecursive2']


class UserIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromSubscriptionRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromSubscriptionRecursive3']
    files: Union[bool, 'FindManyFileArgsFromSubscriptionRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromSubscriptionRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromSubscriptionRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromSubscriptionRecursive3']


class UserIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromSubscriptionRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromSubscriptionRecursive4']
    files: Union[bool, 'FindManyFileArgsFromSubscriptionRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromSubscriptionRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromSubscriptionRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromSubscriptionRecursive4']


class UserIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class UserArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyUserArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromSubscriptionRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive1']


class OrganizationIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromSubscriptionRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive2']


class OrganizationIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromSubscriptionRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive3']


class OrganizationIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromSubscriptionRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromSubscriptionRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromSubscriptionRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromSubscriptionRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromSubscriptionRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromSubscriptionRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromSubscriptionRecursive4']


class OrganizationIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class OrganizationArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyOrganizationArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    invitedBy: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class OrganizationMemberIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    invitedBy: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class OrganizationMemberIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    invitedBy: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class OrganizationMemberIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    invitedBy: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class OrganizationMemberIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class OrganizationMemberArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyOrganizationMemberArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    modules: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive1']


class PathIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    modules: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive2']


class PathIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    modules: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive3']


class PathIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    modules: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive4']


class PathIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class PathArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyPathArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    instructor: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromSubscriptionRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive1']


class ModuleIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    instructor: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromSubscriptionRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive2']


class ModuleIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    instructor: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromSubscriptionRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive3']


class ModuleIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    instructor: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromSubscriptionRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromSubscriptionRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromSubscriptionRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromSubscriptionRecursive4']


class ModuleIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class ModuleArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyModuleArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    path: Union[bool, 'PathArgsFromSubscriptionRecursive1']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive1']


class PathModuleIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    path: Union[bool, 'PathArgsFromSubscriptionRecursive2']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive2']


class PathModuleIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    path: Union[bool, 'PathArgsFromSubscriptionRecursive3']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive3']


class PathModuleIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    path: Union[bool, 'PathArgsFromSubscriptionRecursive4']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive4']


class PathModuleIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class PathModuleArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyPathModuleArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive1']


class LessonIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive2']


class LessonIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive3']


class LessonIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromSubscriptionRecursive4']


class LessonIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class LessonArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyLessonArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive1']
    path: Union[bool, 'PathArgsFromSubscriptionRecursive1']


class EnrollmentIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive2']
    path: Union[bool, 'PathArgsFromSubscriptionRecursive2']


class EnrollmentIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive3']
    path: Union[bool, 'PathArgsFromSubscriptionRecursive3']


class EnrollmentIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive4']
    path: Union[bool, 'PathArgsFromSubscriptionRecursive4']


class EnrollmentIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class EnrollmentArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyEnrollmentArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    lesson: Union[bool, 'LessonArgsFromSubscriptionRecursive1']


class LessonProgressIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    lesson: Union[bool, 'LessonArgsFromSubscriptionRecursive2']


class LessonProgressIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    lesson: Union[bool, 'LessonArgsFromSubscriptionRecursive3']


class LessonProgressIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    lesson: Union[bool, 'LessonArgsFromSubscriptionRecursive4']


class LessonProgressIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class LessonProgressArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyLessonProgressArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive1']


class CertificateIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive2']


class CertificateIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive3']


class CertificateIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    module: Union[bool, 'ModuleArgsFromSubscriptionRecursive4']


class CertificateIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class CertificateArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyCertificateArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive1']


class ProjectIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive2']


class ProjectIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive3']


class ProjectIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    owner: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromSubscriptionRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromSubscriptionRecursive4']


class ProjectIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class ProjectArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyProjectArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive1']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class ProposalIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive2']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class ProposalIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive3']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class ProposalIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive4']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class ProposalIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class ProposalArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyProposalArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive1']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    client: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromSubscriptionRecursive1']


class ContractIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive2']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    client: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromSubscriptionRecursive2']


class ContractIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive3']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    client: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromSubscriptionRecursive3']


class ContractIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    project: Union[bool, 'ProjectArgsFromSubscriptionRecursive4']
    freelancer: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    client: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromSubscriptionRecursive4']


class ContractIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class ContractArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyContractArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    contract: Union[bool, 'ContractArgsFromSubscriptionRecursive1']


class DeliveryIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    contract: Union[bool, 'ContractArgsFromSubscriptionRecursive2']


class DeliveryIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    contract: Union[bool, 'ContractArgsFromSubscriptionRecursive3']


class DeliveryIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    contract: Union[bool, 'ContractArgsFromSubscriptionRecursive4']


class DeliveryIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class DeliveryArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyDeliveryArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class UserSkillIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class UserSkillIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class UserSkillIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class UserSkillIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class UserSkillArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyUserSkillArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive1']


class DatasetIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive2']


class DatasetIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive3']


class DatasetIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromSubscriptionRecursive4']


class DatasetIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class DatasetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyDatasetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive1']


class DashboardIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive2']


class DashboardIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive3']


class DashboardIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    ownerUser: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromSubscriptionRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromSubscriptionRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromSubscriptionRecursive4']


class DashboardIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class DashboardArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyDashboardArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive1']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive1']


class DashboardDatasetIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive2']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive2']


class DashboardDatasetIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive3']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive3']


class DashboardDatasetIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive4']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive4']


class DashboardDatasetIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class DashboardDatasetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyDashboardDatasetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive1']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive1']


class WidgetIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive2']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive2']


class WidgetIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive3']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive3']


class WidgetIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive4']
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive4']


class WidgetIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class WidgetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyWidgetArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive1']
    author: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class InsightIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive2']
    author: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class InsightIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive3']
    author: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class InsightIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dashboard: Union[bool, 'DashboardArgsFromSubscriptionRecursive4']
    author: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class InsightIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class InsightArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyInsightArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive1']
    creator: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class MLModelIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive2']
    creator: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class MLModelIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive3']
    creator: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class MLModelIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    dataset: Union[bool, 'DatasetArgsFromSubscriptionRecursive4']
    creator: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class MLModelIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class MLModelArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyMLModelArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']


class TransactionIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']


class TransactionIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']


class TransactionIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']


class TransactionIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class TransactionArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyTransactionArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive1']


class SubscriptionIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive2']


class SubscriptionIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive3']


class SubscriptionIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']
    organization: Union[bool, 'OrganizationArgsFromSubscriptionRecursive4']


class SubscriptionIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class SubscriptionArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManySubscriptionArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class NotificationIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class NotificationIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class NotificationIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class NotificationIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class NotificationArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyNotificationArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class AuthTokenIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class AuthTokenIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class AuthTokenIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    user: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class AuthTokenIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class AuthTokenArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyAuthTokenArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    uploader: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class FileIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    uploader: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class FileIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    uploader: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class FileIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    uploader: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class FileIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class FileArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyFileArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromSubscription(TypedDict, total=False):
    """Relational arguments for Subscription"""
    actor: Union[bool, 'UserArgsFromSubscriptionRecursive1']


class AuditLogIncludeFromSubscriptionRecursive1(TypedDict, total=False):
    """Relational arguments for Subscription"""
    actor: Union[bool, 'UserArgsFromSubscriptionRecursive2']


class AuditLogIncludeFromSubscriptionRecursive2(TypedDict, total=False):
    """Relational arguments for Subscription"""
    actor: Union[bool, 'UserArgsFromSubscriptionRecursive3']


class AuditLogIncludeFromSubscriptionRecursive3(TypedDict, total=False):
    """Relational arguments for Subscription"""
    actor: Union[bool, 'UserArgsFromSubscriptionRecursive4']


class AuditLogIncludeFromSubscriptionRecursive4(TypedDict, total=False):
    """Relational arguments for Subscription"""

    

class AuditLogArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    
    

class FindManyAuditLogArgsFromSubscription(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromSubscriptionRecursive1(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromSubscriptionRecursive2(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromSubscriptionRecursive3(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromSubscriptionRecursive4(TypedDict, total=False):
    """Arguments for Subscription"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManySubscriptionArgs = FindManySubscriptionArgsFromSubscription
FindFirstSubscriptionArgs = FindManySubscriptionArgsFromSubscription


    

class SubscriptionWhereInput(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    endsAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['SubscriptionWhereInputRecursive1', List['SubscriptionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['SubscriptionWhereInputRecursive1']
    OR: List['SubscriptionWhereInputRecursive1']
    NOT: List['SubscriptionWhereInputRecursive1']


class SubscriptionWhereInputRecursive1(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    endsAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['SubscriptionWhereInputRecursive2', List['SubscriptionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['SubscriptionWhereInputRecursive2']
    OR: List['SubscriptionWhereInputRecursive2']
    NOT: List['SubscriptionWhereInputRecursive2']


class SubscriptionWhereInputRecursive2(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    endsAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['SubscriptionWhereInputRecursive3', List['SubscriptionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['SubscriptionWhereInputRecursive3']
    OR: List['SubscriptionWhereInputRecursive3']
    NOT: List['SubscriptionWhereInputRecursive3']


class SubscriptionWhereInputRecursive3(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    endsAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'

    # should be noted that AND and NOT should be Union['SubscriptionWhereInputRecursive4', List['SubscriptionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['SubscriptionWhereInputRecursive4']
    OR: List['SubscriptionWhereInputRecursive4']
    NOT: List['SubscriptionWhereInputRecursive4']


class SubscriptionWhereInputRecursive4(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[None, _int, 'types.IntFilter']
    organizationId: Union[None, _int, 'types.IntFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    endsAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    metadata: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    organization: 'OrganizationRelationFilter'



# aggregate Subscription types


    

class SubscriptionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endsAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SubscriptionScalarWhereWithAggregatesInputRecursive1']
    OR: List['SubscriptionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['SubscriptionScalarWhereWithAggregatesInputRecursive1']


class SubscriptionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endsAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SubscriptionScalarWhereWithAggregatesInputRecursive2']
    OR: List['SubscriptionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['SubscriptionScalarWhereWithAggregatesInputRecursive2']


class SubscriptionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endsAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SubscriptionScalarWhereWithAggregatesInputRecursive3']
    OR: List['SubscriptionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['SubscriptionScalarWhereWithAggregatesInputRecursive3']


class SubscriptionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endsAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SubscriptionScalarWhereWithAggregatesInputRecursive4']
    OR: List['SubscriptionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['SubscriptionScalarWhereWithAggregatesInputRecursive4']


class SubscriptionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Subscription arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    organizationId: Union[_int, 'types.IntWithAggregatesFilter']
    plan: 'enums.SubscriptionPlan'
    active: Union[_bool, 'types.BooleanWithAggregatesFilter']
    startedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endsAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class SubscriptionGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    organizationId: _int
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: datetime.datetime
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'SubscriptionSumAggregateOutput'
    _avg: 'SubscriptionAvgAggregateOutput'
    _min: 'SubscriptionMinAggregateOutput'
    _max: 'SubscriptionMaxAggregateOutput'
    _count: 'SubscriptionCountAggregateOutput'


class SubscriptionAvgAggregateOutput(TypedDict, total=False):
    """Subscription output for aggregating averages"""
    id: float
    userId: float
    organizationId: float


class SubscriptionSumAggregateOutput(TypedDict, total=False):
    """Subscription output for aggregating sums"""
    id: _int
    userId: _int
    organizationId: _int


class SubscriptionScalarAggregateOutput(TypedDict, total=False):
    """Subscription output including scalar fields"""
    id: _int
    userId: _int
    organizationId: _int
    plan: 'enums.SubscriptionPlan'
    active: _bool
    startedAt: datetime.datetime
    endsAt: datetime.datetime
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    deletedAt: datetime.datetime


SubscriptionMinAggregateOutput = SubscriptionScalarAggregateOutput
SubscriptionMaxAggregateOutput = SubscriptionScalarAggregateOutput


class SubscriptionMaxAggregateInput(TypedDict, total=False):
    """Subscription input for aggregating by max"""
    id: bool
    userId: bool
    organizationId: bool
    plan: bool
    active: bool
    startedAt: bool
    endsAt: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class SubscriptionMinAggregateInput(TypedDict, total=False):
    """Subscription input for aggregating by min"""
    id: bool
    userId: bool
    organizationId: bool
    plan: bool
    active: bool
    startedAt: bool
    endsAt: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool
    deletedAt: bool


class SubscriptionNumberAggregateInput(TypedDict, total=False):
    """Subscription input for aggregating numbers"""
    id: bool
    userId: bool
    organizationId: bool


SubscriptionAvgAggregateInput = SubscriptionNumberAggregateInput
SubscriptionSumAggregateInput = SubscriptionNumberAggregateInput


SubscriptionCountAggregateInput = TypedDict(
    'SubscriptionCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'organizationId': bool,
        'plan': bool,
        'active': bool,
        'startedAt': bool,
        'endsAt': bool,
        'metadata': bool,
        'createdAt': bool,
        'updatedAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

SubscriptionCountAggregateOutput = TypedDict(
    'SubscriptionCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'organizationId': int,
        'plan': int,
        'active': int,
        'startedAt': int,
        'endsAt': int,
        'metadata': int,
        'createdAt': int,
        'updatedAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


SubscriptionKeys = Literal[
    'id',
    'userId',
    'organizationId',
    'plan',
    'active',
    'startedAt',
    'endsAt',
    'metadata',
    'createdAt',
    'updatedAt',
    'deletedAt',
    'user',
    'organization',
]
SubscriptionScalarFieldKeys = Literal[
    'id',
    'userId',
    'organizationId',
    'plan',
    'active',
    'startedAt',
    'endsAt',
    'metadata',
    'createdAt',
    'updatedAt',
    'deletedAt',
]
SubscriptionScalarFieldKeysT = TypeVar('SubscriptionScalarFieldKeysT', bound=SubscriptionScalarFieldKeys)

SubscriptionRelationalFieldKeys = Literal[
        'user',
        'organization',
    ]

# Notification types

class NotificationOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Notification create method"""
    id: _int
    userId: _int
    title: Optional[_str]
    data: Optional['fields.Json']
    isRead: _bool
    emailSent: _bool
    emailSentAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserCreateNestedWithoutRelationsInput'


class NotificationCreateInput(NotificationOptionalCreateInput):
    """Required arguments to the Notification create method"""
    type: _str
    body: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class NotificationOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Notification create method, without relations"""
    id: _int
    userId: _int
    title: Optional[_str]
    data: Optional['fields.Json']
    isRead: _bool
    emailSent: _bool
    emailSentAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class NotificationCreateWithoutRelationsInput(NotificationOptionalCreateWithoutRelationsInput):
    """Required arguments to the Notification create method, without relations"""
    type: _str
    body: _str

class NotificationConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'NotificationCreateWithoutRelationsInput'
    where: 'NotificationWhereUniqueInput'

class NotificationCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'NotificationCreateWithoutRelationsInput'
    connect: 'NotificationWhereUniqueInput'
    connect_or_create: 'NotificationConnectOrCreateWithoutRelationsInput'


class NotificationCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['NotificationCreateWithoutRelationsInput', List['NotificationCreateWithoutRelationsInput']]
    connect: Union['NotificationWhereUniqueInput', List['NotificationWhereUniqueInput']]
    connect_or_create: Union['NotificationConnectOrCreateWithoutRelationsInput', List['NotificationConnectOrCreateWithoutRelationsInput']]

_NotificationWhereUnique_id_Input = TypedDict(
    '_NotificationWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

NotificationWhereUniqueInput = _NotificationWhereUnique_id_Input


class NotificationUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    type: _str
    title: Optional[_str]
    body: _str
    data: Optional['fields.Json']
    isRead: _bool
    emailSent: _bool
    emailSentAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    user: 'UserUpdateOneWithoutRelationsInput'


class NotificationUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    type: _str
    title: Optional[_str]
    body: _str
    data: Optional['fields.Json']
    isRead: _bool
    emailSent: _bool
    emailSentAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class NotificationUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['NotificationCreateWithoutRelationsInput']
    connect: List['NotificationWhereUniqueInput']
    connect_or_create: List['NotificationConnectOrCreateWithoutRelationsInput']
    set: List['NotificationWhereUniqueInput']
    disconnect: List['NotificationWhereUniqueInput']
    delete: List['NotificationWhereUniqueInput']

    # TODO
    # update: List['NotificationUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['NotificationUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['NotificationScalarWhereInput']
    # upsert: List['NotificationUpserteWithWhereUniqueWithoutRelationsInput']


class NotificationUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'NotificationCreateWithoutRelationsInput'
    connect: 'NotificationWhereUniqueInput'
    connect_or_create: 'NotificationConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'NotificationUpdateInput'
    # upsert: 'NotificationUpsertWithoutRelationsInput'


class NotificationUpsertInput(TypedDict):
    create: 'NotificationCreateInput'
    update: 'NotificationUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Notification_id_OrderByInput = TypedDict(
    '_Notification_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Notification_userId_OrderByInput = TypedDict(
    '_Notification_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Notification_type_OrderByInput = TypedDict(
    '_Notification_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Notification_title_OrderByInput = TypedDict(
    '_Notification_title_OrderByInput',
    {
        'title': 'SortOrder',
    },
    total=True
)

_Notification_body_OrderByInput = TypedDict(
    '_Notification_body_OrderByInput',
    {
        'body': 'SortOrder',
    },
    total=True
)

_Notification_data_OrderByInput = TypedDict(
    '_Notification_data_OrderByInput',
    {
        'data': 'SortOrder',
    },
    total=True
)

_Notification_isRead_OrderByInput = TypedDict(
    '_Notification_isRead_OrderByInput',
    {
        'isRead': 'SortOrder',
    },
    total=True
)

_Notification_emailSent_OrderByInput = TypedDict(
    '_Notification_emailSent_OrderByInput',
    {
        'emailSent': 'SortOrder',
    },
    total=True
)

_Notification_emailSentAt_OrderByInput = TypedDict(
    '_Notification_emailSentAt_OrderByInput',
    {
        'emailSentAt': 'SortOrder',
    },
    total=True
)

_Notification_createdAt_OrderByInput = TypedDict(
    '_Notification_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Notification_deletedAt_OrderByInput = TypedDict(
    '_Notification_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_Notification_RelevanceInner = TypedDict(
    '_Notification_RelevanceInner',
    {
        'fields': 'List[NotificationScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Notification_RelevanceOrderByInput = TypedDict(
    '_Notification_RelevanceOrderByInput',
    {
        '_relevance': '_Notification_RelevanceInner',
    },
    total=True
)

NotificationOrderByInput = Union[
    '_Notification_id_OrderByInput',
    '_Notification_userId_OrderByInput',
    '_Notification_type_OrderByInput',
    '_Notification_title_OrderByInput',
    '_Notification_body_OrderByInput',
    '_Notification_data_OrderByInput',
    '_Notification_isRead_OrderByInput',
    '_Notification_emailSent_OrderByInput',
    '_Notification_emailSentAt_OrderByInput',
    '_Notification_createdAt_OrderByInput',
    '_Notification_deletedAt_OrderByInput',
    '_Notification_RelevanceOrderByInput',
]



# recursive Notification types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

NotificationRelationFilter = TypedDict(
    'NotificationRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class NotificationListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class NotificationInclude(TypedDict, total=False):
    """Notification relational arguments"""
    user: Union[bool, 'UserArgsFromNotification']


    

class UserIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromNotificationRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromNotificationRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromNotificationRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromNotificationRecursive1']
    files: Union[bool, 'FindManyFileArgsFromNotificationRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromNotificationRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromNotificationRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromNotificationRecursive1']


class UserIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromNotificationRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromNotificationRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromNotificationRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromNotificationRecursive2']
    files: Union[bool, 'FindManyFileArgsFromNotificationRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromNotificationRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromNotificationRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromNotificationRecursive2']


class UserIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromNotificationRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromNotificationRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromNotificationRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromNotificationRecursive3']
    files: Union[bool, 'FindManyFileArgsFromNotificationRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromNotificationRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromNotificationRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromNotificationRecursive3']


class UserIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromNotificationRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromNotificationRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromNotificationRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromNotificationRecursive4']
    files: Union[bool, 'FindManyFileArgsFromNotificationRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromNotificationRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromNotificationRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromNotificationRecursive4']


class UserIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class UserArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyUserArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromNotificationRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive1']


class OrganizationIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromNotificationRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive2']


class OrganizationIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromNotificationRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive3']


class OrganizationIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromNotificationRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromNotificationRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromNotificationRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromNotificationRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromNotificationRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromNotificationRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromNotificationRecursive4']


class OrganizationIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class OrganizationArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyOrganizationArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    invitedBy: Union[bool, 'UserArgsFromNotificationRecursive1']


class OrganizationMemberIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    invitedBy: Union[bool, 'UserArgsFromNotificationRecursive2']


class OrganizationMemberIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    invitedBy: Union[bool, 'UserArgsFromNotificationRecursive3']


class OrganizationMemberIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    invitedBy: Union[bool, 'UserArgsFromNotificationRecursive4']


class OrganizationMemberIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class OrganizationMemberArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyOrganizationMemberArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    modules: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive1']


class PathIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    modules: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive2']


class PathIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    modules: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive3']


class PathIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    modules: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive4']


class PathIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class PathArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyPathArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    instructor: Union[bool, 'UserArgsFromNotificationRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromNotificationRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive1']


class ModuleIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    instructor: Union[bool, 'UserArgsFromNotificationRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromNotificationRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive2']


class ModuleIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    instructor: Union[bool, 'UserArgsFromNotificationRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromNotificationRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive3']


class ModuleIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    instructor: Union[bool, 'UserArgsFromNotificationRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromNotificationRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromNotificationRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromNotificationRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromNotificationRecursive4']


class ModuleIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class ModuleArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyModuleArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    path: Union[bool, 'PathArgsFromNotificationRecursive1']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive1']


class PathModuleIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    path: Union[bool, 'PathArgsFromNotificationRecursive2']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive2']


class PathModuleIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    path: Union[bool, 'PathArgsFromNotificationRecursive3']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive3']


class PathModuleIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    path: Union[bool, 'PathArgsFromNotificationRecursive4']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive4']


class PathModuleIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class PathModuleArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyPathModuleArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    module: Union[bool, 'ModuleArgsFromNotificationRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive1']


class LessonIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    module: Union[bool, 'ModuleArgsFromNotificationRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive2']


class LessonIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    module: Union[bool, 'ModuleArgsFromNotificationRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive3']


class LessonIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    module: Union[bool, 'ModuleArgsFromNotificationRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromNotificationRecursive4']


class LessonIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class LessonArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyLessonArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive1']
    path: Union[bool, 'PathArgsFromNotificationRecursive1']


class EnrollmentIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive2']
    path: Union[bool, 'PathArgsFromNotificationRecursive2']


class EnrollmentIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive3']
    path: Union[bool, 'PathArgsFromNotificationRecursive3']


class EnrollmentIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive4']
    path: Union[bool, 'PathArgsFromNotificationRecursive4']


class EnrollmentIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class EnrollmentArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyEnrollmentArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    lesson: Union[bool, 'LessonArgsFromNotificationRecursive1']


class LessonProgressIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    lesson: Union[bool, 'LessonArgsFromNotificationRecursive2']


class LessonProgressIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    lesson: Union[bool, 'LessonArgsFromNotificationRecursive3']


class LessonProgressIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    lesson: Union[bool, 'LessonArgsFromNotificationRecursive4']


class LessonProgressIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class LessonProgressArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyLessonProgressArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive1']


class CertificateIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive2']


class CertificateIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive3']


class CertificateIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    module: Union[bool, 'ModuleArgsFromNotificationRecursive4']


class CertificateIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class CertificateArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyCertificateArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromNotificationRecursive1']


class ProjectIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromNotificationRecursive2']


class ProjectIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromNotificationRecursive3']


class ProjectIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    owner: Union[bool, 'UserArgsFromNotificationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromNotificationRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromNotificationRecursive4']


class ProjectIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class ProjectArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyProjectArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive1']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive1']


class ProposalIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive2']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive2']


class ProposalIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive3']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive3']


class ProposalIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive4']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive4']


class ProposalIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class ProposalArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyProposalArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive1']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive1']
    client: Union[bool, 'UserArgsFromNotificationRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromNotificationRecursive1']


class ContractIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive2']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive2']
    client: Union[bool, 'UserArgsFromNotificationRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromNotificationRecursive2']


class ContractIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive3']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive3']
    client: Union[bool, 'UserArgsFromNotificationRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromNotificationRecursive3']


class ContractIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    project: Union[bool, 'ProjectArgsFromNotificationRecursive4']
    freelancer: Union[bool, 'UserArgsFromNotificationRecursive4']
    client: Union[bool, 'UserArgsFromNotificationRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromNotificationRecursive4']


class ContractIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class ContractArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyContractArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    contract: Union[bool, 'ContractArgsFromNotificationRecursive1']


class DeliveryIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    contract: Union[bool, 'ContractArgsFromNotificationRecursive2']


class DeliveryIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    contract: Union[bool, 'ContractArgsFromNotificationRecursive3']


class DeliveryIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    contract: Union[bool, 'ContractArgsFromNotificationRecursive4']


class DeliveryIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class DeliveryArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyDeliveryArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']


class UserSkillIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']


class UserSkillIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']


class UserSkillIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']


class UserSkillIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class UserSkillArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyUserSkillArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive1']


class DatasetIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive2']


class DatasetIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive3']


class DatasetIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromNotificationRecursive4']


class DatasetIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class DatasetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyDatasetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive1']


class DashboardIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive2']


class DashboardIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive3']


class DashboardIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    ownerUser: Union[bool, 'UserArgsFromNotificationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromNotificationRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromNotificationRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromNotificationRecursive4']


class DashboardIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class DashboardArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyDashboardArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive1']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive1']


class DashboardDatasetIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive2']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive2']


class DashboardDatasetIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive3']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive3']


class DashboardDatasetIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive4']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive4']


class DashboardDatasetIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class DashboardDatasetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyDashboardDatasetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive1']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive1']


class WidgetIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive2']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive2']


class WidgetIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive3']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive3']


class WidgetIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive4']
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive4']


class WidgetIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class WidgetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyWidgetArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive1']
    author: Union[bool, 'UserArgsFromNotificationRecursive1']


class InsightIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive2']
    author: Union[bool, 'UserArgsFromNotificationRecursive2']


class InsightIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive3']
    author: Union[bool, 'UserArgsFromNotificationRecursive3']


class InsightIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    dashboard: Union[bool, 'DashboardArgsFromNotificationRecursive4']
    author: Union[bool, 'UserArgsFromNotificationRecursive4']


class InsightIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class InsightArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyInsightArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive1']
    creator: Union[bool, 'UserArgsFromNotificationRecursive1']


class MLModelIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive2']
    creator: Union[bool, 'UserArgsFromNotificationRecursive2']


class MLModelIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive3']
    creator: Union[bool, 'UserArgsFromNotificationRecursive3']


class MLModelIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    dataset: Union[bool, 'DatasetArgsFromNotificationRecursive4']
    creator: Union[bool, 'UserArgsFromNotificationRecursive4']


class MLModelIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class MLModelArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyMLModelArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']


class TransactionIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']


class TransactionIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']


class TransactionIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']


class TransactionIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class TransactionArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyTransactionArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive1']


class SubscriptionIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive2']


class SubscriptionIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive3']


class SubscriptionIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']
    organization: Union[bool, 'OrganizationArgsFromNotificationRecursive4']


class SubscriptionIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class SubscriptionArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManySubscriptionArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']


class NotificationIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']


class NotificationIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']


class NotificationIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']


class NotificationIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class NotificationArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyNotificationArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive1']


class AuthTokenIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive2']


class AuthTokenIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive3']


class AuthTokenIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    user: Union[bool, 'UserArgsFromNotificationRecursive4']


class AuthTokenIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class AuthTokenArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyAuthTokenArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    uploader: Union[bool, 'UserArgsFromNotificationRecursive1']


class FileIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    uploader: Union[bool, 'UserArgsFromNotificationRecursive2']


class FileIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    uploader: Union[bool, 'UserArgsFromNotificationRecursive3']


class FileIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    uploader: Union[bool, 'UserArgsFromNotificationRecursive4']


class FileIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class FileArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyFileArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromNotification(TypedDict, total=False):
    """Relational arguments for Notification"""
    actor: Union[bool, 'UserArgsFromNotificationRecursive1']


class AuditLogIncludeFromNotificationRecursive1(TypedDict, total=False):
    """Relational arguments for Notification"""
    actor: Union[bool, 'UserArgsFromNotificationRecursive2']


class AuditLogIncludeFromNotificationRecursive2(TypedDict, total=False):
    """Relational arguments for Notification"""
    actor: Union[bool, 'UserArgsFromNotificationRecursive3']


class AuditLogIncludeFromNotificationRecursive3(TypedDict, total=False):
    """Relational arguments for Notification"""
    actor: Union[bool, 'UserArgsFromNotificationRecursive4']


class AuditLogIncludeFromNotificationRecursive4(TypedDict, total=False):
    """Relational arguments for Notification"""

    

class AuditLogArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    
    

class FindManyAuditLogArgsFromNotification(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromNotificationRecursive1(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromNotificationRecursive2(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromNotificationRecursive3(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromNotificationRecursive4(TypedDict, total=False):
    """Arguments for Notification"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyNotificationArgs = FindManyNotificationArgsFromNotification
FindFirstNotificationArgs = FindManyNotificationArgsFromNotification


    

class NotificationWhereInput(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    title: Union[None, _str, 'types.StringFilter']
    body: Union[_str, 'types.StringFilter']
    data: Union[None, 'fields.Json', 'types.JsonFilter']
    isRead: Union[_bool, 'types.BooleanFilter']
    emailSent: Union[_bool, 'types.BooleanFilter']
    emailSentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['NotificationWhereInputRecursive1', List['NotificationWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['NotificationWhereInputRecursive1']
    OR: List['NotificationWhereInputRecursive1']
    NOT: List['NotificationWhereInputRecursive1']


class NotificationWhereInputRecursive1(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    title: Union[None, _str, 'types.StringFilter']
    body: Union[_str, 'types.StringFilter']
    data: Union[None, 'fields.Json', 'types.JsonFilter']
    isRead: Union[_bool, 'types.BooleanFilter']
    emailSent: Union[_bool, 'types.BooleanFilter']
    emailSentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['NotificationWhereInputRecursive2', List['NotificationWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['NotificationWhereInputRecursive2']
    OR: List['NotificationWhereInputRecursive2']
    NOT: List['NotificationWhereInputRecursive2']


class NotificationWhereInputRecursive2(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    title: Union[None, _str, 'types.StringFilter']
    body: Union[_str, 'types.StringFilter']
    data: Union[None, 'fields.Json', 'types.JsonFilter']
    isRead: Union[_bool, 'types.BooleanFilter']
    emailSent: Union[_bool, 'types.BooleanFilter']
    emailSentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['NotificationWhereInputRecursive3', List['NotificationWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['NotificationWhereInputRecursive3']
    OR: List['NotificationWhereInputRecursive3']
    NOT: List['NotificationWhereInputRecursive3']


class NotificationWhereInputRecursive3(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    title: Union[None, _str, 'types.StringFilter']
    body: Union[_str, 'types.StringFilter']
    data: Union[None, 'fields.Json', 'types.JsonFilter']
    isRead: Union[_bool, 'types.BooleanFilter']
    emailSent: Union[_bool, 'types.BooleanFilter']
    emailSentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['NotificationWhereInputRecursive4', List['NotificationWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['NotificationWhereInputRecursive4']
    OR: List['NotificationWhereInputRecursive4']
    NOT: List['NotificationWhereInputRecursive4']


class NotificationWhereInputRecursive4(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    type: Union[_str, 'types.StringFilter']
    title: Union[None, _str, 'types.StringFilter']
    body: Union[_str, 'types.StringFilter']
    data: Union[None, 'fields.Json', 'types.JsonFilter']
    isRead: Union[_bool, 'types.BooleanFilter']
    emailSent: Union[_bool, 'types.BooleanFilter']
    emailSentAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'



# aggregate Notification types


    

class NotificationScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    body: Union[_str, 'types.StringWithAggregatesFilter']
    data: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isRead: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSent: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NotificationScalarWhereWithAggregatesInputRecursive1']
    OR: List['NotificationScalarWhereWithAggregatesInputRecursive1']
    NOT: List['NotificationScalarWhereWithAggregatesInputRecursive1']


class NotificationScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    body: Union[_str, 'types.StringWithAggregatesFilter']
    data: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isRead: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSent: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NotificationScalarWhereWithAggregatesInputRecursive2']
    OR: List['NotificationScalarWhereWithAggregatesInputRecursive2']
    NOT: List['NotificationScalarWhereWithAggregatesInputRecursive2']


class NotificationScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    body: Union[_str, 'types.StringWithAggregatesFilter']
    data: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isRead: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSent: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NotificationScalarWhereWithAggregatesInputRecursive3']
    OR: List['NotificationScalarWhereWithAggregatesInputRecursive3']
    NOT: List['NotificationScalarWhereWithAggregatesInputRecursive3']


class NotificationScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    body: Union[_str, 'types.StringWithAggregatesFilter']
    data: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isRead: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSent: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NotificationScalarWhereWithAggregatesInputRecursive4']
    OR: List['NotificationScalarWhereWithAggregatesInputRecursive4']
    NOT: List['NotificationScalarWhereWithAggregatesInputRecursive4']


class NotificationScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Notification arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    title: Union[_str, 'types.StringWithAggregatesFilter']
    body: Union[_str, 'types.StringWithAggregatesFilter']
    data: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    isRead: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSent: Union[_bool, 'types.BooleanWithAggregatesFilter']
    emailSentAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class NotificationGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    type: _str
    title: _str
    body: _str
    data: 'fields.Json'
    isRead: _bool
    emailSent: _bool
    emailSentAt: datetime.datetime
    createdAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'NotificationSumAggregateOutput'
    _avg: 'NotificationAvgAggregateOutput'
    _min: 'NotificationMinAggregateOutput'
    _max: 'NotificationMaxAggregateOutput'
    _count: 'NotificationCountAggregateOutput'


class NotificationAvgAggregateOutput(TypedDict, total=False):
    """Notification output for aggregating averages"""
    id: float
    userId: float


class NotificationSumAggregateOutput(TypedDict, total=False):
    """Notification output for aggregating sums"""
    id: _int
    userId: _int


class NotificationScalarAggregateOutput(TypedDict, total=False):
    """Notification output including scalar fields"""
    id: _int
    userId: _int
    type: _str
    title: _str
    body: _str
    data: 'fields.Json'
    isRead: _bool
    emailSent: _bool
    emailSentAt: datetime.datetime
    createdAt: datetime.datetime
    deletedAt: datetime.datetime


NotificationMinAggregateOutput = NotificationScalarAggregateOutput
NotificationMaxAggregateOutput = NotificationScalarAggregateOutput


class NotificationMaxAggregateInput(TypedDict, total=False):
    """Notification input for aggregating by max"""
    id: bool
    userId: bool
    type: bool
    title: bool
    body: bool
    data: bool
    isRead: bool
    emailSent: bool
    emailSentAt: bool
    createdAt: bool
    deletedAt: bool


class NotificationMinAggregateInput(TypedDict, total=False):
    """Notification input for aggregating by min"""
    id: bool
    userId: bool
    type: bool
    title: bool
    body: bool
    data: bool
    isRead: bool
    emailSent: bool
    emailSentAt: bool
    createdAt: bool
    deletedAt: bool


class NotificationNumberAggregateInput(TypedDict, total=False):
    """Notification input for aggregating numbers"""
    id: bool
    userId: bool


NotificationAvgAggregateInput = NotificationNumberAggregateInput
NotificationSumAggregateInput = NotificationNumberAggregateInput


NotificationCountAggregateInput = TypedDict(
    'NotificationCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'type': bool,
        'title': bool,
        'body': bool,
        'data': bool,
        'isRead': bool,
        'emailSent': bool,
        'emailSentAt': bool,
        'createdAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

NotificationCountAggregateOutput = TypedDict(
    'NotificationCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'type': int,
        'title': int,
        'body': int,
        'data': int,
        'isRead': int,
        'emailSent': int,
        'emailSentAt': int,
        'createdAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


NotificationKeys = Literal[
    'id',
    'userId',
    'type',
    'title',
    'body',
    'data',
    'isRead',
    'emailSent',
    'emailSentAt',
    'createdAt',
    'deletedAt',
    'user',
]
NotificationScalarFieldKeys = Literal[
    'id',
    'userId',
    'type',
    'title',
    'body',
    'data',
    'isRead',
    'emailSent',
    'emailSentAt',
    'createdAt',
    'deletedAt',
]
NotificationScalarFieldKeysT = TypeVar('NotificationScalarFieldKeysT', bound=NotificationScalarFieldKeys)

NotificationRelationalFieldKeys = Literal[
        'user',
    ]

# AuthToken types

class AuthTokenOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the AuthToken create method"""
    id: _int
    userId: _int
    usedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    user: 'UserCreateNestedWithoutRelationsInput'


class AuthTokenCreateInput(AuthTokenOptionalCreateInput):
    """Required arguments to the AuthToken create method"""
    token: _str
    type: _str
    expiresAt: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AuthTokenOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the AuthToken create method, without relations"""
    id: _int
    userId: _int
    usedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime


class AuthTokenCreateWithoutRelationsInput(AuthTokenOptionalCreateWithoutRelationsInput):
    """Required arguments to the AuthToken create method, without relations"""
    token: _str
    type: _str
    expiresAt: datetime.datetime

class AuthTokenConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'AuthTokenCreateWithoutRelationsInput'
    where: 'AuthTokenWhereUniqueInput'

class AuthTokenCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AuthTokenCreateWithoutRelationsInput'
    connect: 'AuthTokenWhereUniqueInput'
    connect_or_create: 'AuthTokenConnectOrCreateWithoutRelationsInput'


class AuthTokenCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AuthTokenCreateWithoutRelationsInput', List['AuthTokenCreateWithoutRelationsInput']]
    connect: Union['AuthTokenWhereUniqueInput', List['AuthTokenWhereUniqueInput']]
    connect_or_create: Union['AuthTokenConnectOrCreateWithoutRelationsInput', List['AuthTokenConnectOrCreateWithoutRelationsInput']]

_AuthTokenWhereUnique_id_Input = TypedDict(
    '_AuthTokenWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

_AuthTokenWhereUnique_token_Input = TypedDict(
    '_AuthTokenWhereUnique_token_Input',
    {
        'token': '_str',
    },
    total=True
)

AuthTokenWhereUniqueInput = Union[
    '_AuthTokenWhereUnique_id_Input',
    '_AuthTokenWhereUnique_token_Input',
]


class AuthTokenUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    token: _str
    type: _str
    expiresAt: datetime.datetime
    usedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'


class AuthTokenUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    token: _str
    type: _str
    expiresAt: datetime.datetime
    usedAt: Optional[datetime.datetime]
    createdAt: datetime.datetime


class AuthTokenUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AuthTokenCreateWithoutRelationsInput']
    connect: List['AuthTokenWhereUniqueInput']
    connect_or_create: List['AuthTokenConnectOrCreateWithoutRelationsInput']
    set: List['AuthTokenWhereUniqueInput']
    disconnect: List['AuthTokenWhereUniqueInput']
    delete: List['AuthTokenWhereUniqueInput']

    # TODO
    # update: List['AuthTokenUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AuthTokenUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AuthTokenScalarWhereInput']
    # upsert: List['AuthTokenUpserteWithWhereUniqueWithoutRelationsInput']


class AuthTokenUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AuthTokenCreateWithoutRelationsInput'
    connect: 'AuthTokenWhereUniqueInput'
    connect_or_create: 'AuthTokenConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AuthTokenUpdateInput'
    # upsert: 'AuthTokenUpsertWithoutRelationsInput'


class AuthTokenUpsertInput(TypedDict):
    create: 'AuthTokenCreateInput'
    update: 'AuthTokenUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_AuthToken_id_OrderByInput = TypedDict(
    '_AuthToken_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_AuthToken_userId_OrderByInput = TypedDict(
    '_AuthToken_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_AuthToken_token_OrderByInput = TypedDict(
    '_AuthToken_token_OrderByInput',
    {
        'token': 'SortOrder',
    },
    total=True
)

_AuthToken_type_OrderByInput = TypedDict(
    '_AuthToken_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_AuthToken_expiresAt_OrderByInput = TypedDict(
    '_AuthToken_expiresAt_OrderByInput',
    {
        'expiresAt': 'SortOrder',
    },
    total=True
)

_AuthToken_usedAt_OrderByInput = TypedDict(
    '_AuthToken_usedAt_OrderByInput',
    {
        'usedAt': 'SortOrder',
    },
    total=True
)

_AuthToken_createdAt_OrderByInput = TypedDict(
    '_AuthToken_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_AuthToken_RelevanceInner = TypedDict(
    '_AuthToken_RelevanceInner',
    {
        'fields': 'List[AuthTokenScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_AuthToken_RelevanceOrderByInput = TypedDict(
    '_AuthToken_RelevanceOrderByInput',
    {
        '_relevance': '_AuthToken_RelevanceInner',
    },
    total=True
)

AuthTokenOrderByInput = Union[
    '_AuthToken_id_OrderByInput',
    '_AuthToken_userId_OrderByInput',
    '_AuthToken_token_OrderByInput',
    '_AuthToken_type_OrderByInput',
    '_AuthToken_expiresAt_OrderByInput',
    '_AuthToken_usedAt_OrderByInput',
    '_AuthToken_createdAt_OrderByInput',
    '_AuthToken_RelevanceOrderByInput',
]



# recursive AuthToken types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AuthTokenRelationFilter = TypedDict(
    'AuthTokenRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AuthTokenListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AuthTokenInclude(TypedDict, total=False):
    """AuthToken relational arguments"""
    user: Union[bool, 'UserArgsFromAuthToken']


    

class UserIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuthTokenRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuthTokenRecursive1']
    files: Union[bool, 'FindManyFileArgsFromAuthTokenRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuthTokenRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuthTokenRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuthTokenRecursive1']


class UserIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuthTokenRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuthTokenRecursive2']
    files: Union[bool, 'FindManyFileArgsFromAuthTokenRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuthTokenRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuthTokenRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuthTokenRecursive2']


class UserIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuthTokenRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuthTokenRecursive3']
    files: Union[bool, 'FindManyFileArgsFromAuthTokenRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuthTokenRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuthTokenRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuthTokenRecursive3']


class UserIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuthTokenRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuthTokenRecursive4']
    files: Union[bool, 'FindManyFileArgsFromAuthTokenRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuthTokenRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuthTokenRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuthTokenRecursive4']


class UserIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class UserArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyUserArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuthTokenRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive1']


class OrganizationIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuthTokenRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive2']


class OrganizationIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuthTokenRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive3']


class OrganizationIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuthTokenRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuthTokenRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuthTokenRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuthTokenRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromAuthTokenRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuthTokenRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuthTokenRecursive4']


class OrganizationIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class OrganizationArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyOrganizationArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    invitedBy: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class OrganizationMemberIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    invitedBy: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class OrganizationMemberIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    invitedBy: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class OrganizationMemberIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    invitedBy: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class OrganizationMemberIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class OrganizationMemberArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyOrganizationMemberArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive1']


class PathIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive2']


class PathIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive3']


class PathIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive4']


class PathIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class PathArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyPathArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    instructor: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromAuthTokenRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive1']


class ModuleIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    instructor: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromAuthTokenRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive2']


class ModuleIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    instructor: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromAuthTokenRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive3']


class ModuleIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    instructor: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromAuthTokenRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuthTokenRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuthTokenRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuthTokenRecursive4']


class ModuleIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class ModuleArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyModuleArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    path: Union[bool, 'PathArgsFromAuthTokenRecursive1']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive1']


class PathModuleIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    path: Union[bool, 'PathArgsFromAuthTokenRecursive2']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive2']


class PathModuleIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    path: Union[bool, 'PathArgsFromAuthTokenRecursive3']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive3']


class PathModuleIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    path: Union[bool, 'PathArgsFromAuthTokenRecursive4']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive4']


class PathModuleIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class PathModuleArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyPathModuleArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive1']


class LessonIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive2']


class LessonIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive3']


class LessonIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuthTokenRecursive4']


class LessonIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class LessonArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyLessonArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive1']
    path: Union[bool, 'PathArgsFromAuthTokenRecursive1']


class EnrollmentIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive2']
    path: Union[bool, 'PathArgsFromAuthTokenRecursive2']


class EnrollmentIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive3']
    path: Union[bool, 'PathArgsFromAuthTokenRecursive3']


class EnrollmentIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive4']
    path: Union[bool, 'PathArgsFromAuthTokenRecursive4']


class EnrollmentIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class EnrollmentArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyEnrollmentArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    lesson: Union[bool, 'LessonArgsFromAuthTokenRecursive1']


class LessonProgressIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    lesson: Union[bool, 'LessonArgsFromAuthTokenRecursive2']


class LessonProgressIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    lesson: Union[bool, 'LessonArgsFromAuthTokenRecursive3']


class LessonProgressIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    lesson: Union[bool, 'LessonArgsFromAuthTokenRecursive4']


class LessonProgressIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class LessonProgressArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyLessonProgressArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive1']


class CertificateIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive2']


class CertificateIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive3']


class CertificateIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    module: Union[bool, 'ModuleArgsFromAuthTokenRecursive4']


class CertificateIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class CertificateArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyCertificateArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive1']


class ProjectIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive2']


class ProjectIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive3']


class ProjectIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    owner: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromAuthTokenRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromAuthTokenRecursive4']


class ProjectIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class ProjectArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyProjectArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive1']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class ProposalIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive2']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class ProposalIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive3']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class ProposalIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive4']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class ProposalIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class ProposalArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyProposalArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive1']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    client: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuthTokenRecursive1']


class ContractIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive2']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    client: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuthTokenRecursive2']


class ContractIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive3']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    client: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuthTokenRecursive3']


class ContractIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    project: Union[bool, 'ProjectArgsFromAuthTokenRecursive4']
    freelancer: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    client: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuthTokenRecursive4']


class ContractIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class ContractArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyContractArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    contract: Union[bool, 'ContractArgsFromAuthTokenRecursive1']


class DeliveryIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    contract: Union[bool, 'ContractArgsFromAuthTokenRecursive2']


class DeliveryIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    contract: Union[bool, 'ContractArgsFromAuthTokenRecursive3']


class DeliveryIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    contract: Union[bool, 'ContractArgsFromAuthTokenRecursive4']


class DeliveryIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class DeliveryArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyDeliveryArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class UserSkillIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class UserSkillIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class UserSkillIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class UserSkillIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class UserSkillArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyUserSkillArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive1']


class DatasetIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive2']


class DatasetIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive3']


class DatasetIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuthTokenRecursive4']


class DatasetIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class DatasetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyDatasetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive1']


class DashboardIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive2']


class DashboardIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive3']


class DashboardIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    ownerUser: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuthTokenRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuthTokenRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromAuthTokenRecursive4']


class DashboardIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class DashboardArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyDashboardArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive1']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive1']


class DashboardDatasetIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive2']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive2']


class DashboardDatasetIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive3']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive3']


class DashboardDatasetIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive4']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive4']


class DashboardDatasetIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class DashboardDatasetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyDashboardDatasetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive1']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive1']


class WidgetIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive2']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive2']


class WidgetIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive3']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive3']


class WidgetIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive4']
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive4']


class WidgetIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class WidgetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyWidgetArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive1']
    author: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class InsightIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive2']
    author: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class InsightIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive3']
    author: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class InsightIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dashboard: Union[bool, 'DashboardArgsFromAuthTokenRecursive4']
    author: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class InsightIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class InsightArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyInsightArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive1']
    creator: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class MLModelIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive2']
    creator: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class MLModelIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive3']
    creator: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class MLModelIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    dataset: Union[bool, 'DatasetArgsFromAuthTokenRecursive4']
    creator: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class MLModelIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class MLModelArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyMLModelArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']


class TransactionIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']


class TransactionIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']


class TransactionIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']


class TransactionIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class TransactionArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyTransactionArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive1']


class SubscriptionIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive2']


class SubscriptionIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive3']


class SubscriptionIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuthTokenRecursive4']


class SubscriptionIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class SubscriptionArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManySubscriptionArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class NotificationIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class NotificationIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class NotificationIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class NotificationIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class NotificationArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyNotificationArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class AuthTokenIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class AuthTokenIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class AuthTokenIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    user: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class AuthTokenIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class AuthTokenArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyAuthTokenArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    uploader: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class FileIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    uploader: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class FileIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    uploader: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class FileIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    uploader: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class FileIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class FileArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyFileArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromAuthToken(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    actor: Union[bool, 'UserArgsFromAuthTokenRecursive1']


class AuditLogIncludeFromAuthTokenRecursive1(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    actor: Union[bool, 'UserArgsFromAuthTokenRecursive2']


class AuditLogIncludeFromAuthTokenRecursive2(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    actor: Union[bool, 'UserArgsFromAuthTokenRecursive3']


class AuditLogIncludeFromAuthTokenRecursive3(TypedDict, total=False):
    """Relational arguments for AuthToken"""
    actor: Union[bool, 'UserArgsFromAuthTokenRecursive4']


class AuditLogIncludeFromAuthTokenRecursive4(TypedDict, total=False):
    """Relational arguments for AuthToken"""

    

class AuditLogArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    
    

class FindManyAuditLogArgsFromAuthToken(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromAuthTokenRecursive1(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromAuthTokenRecursive2(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromAuthTokenRecursive3(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromAuthTokenRecursive4(TypedDict, total=False):
    """Arguments for AuthToken"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyAuthTokenArgs = FindManyAuthTokenArgsFromAuthToken
FindFirstAuthTokenArgs = FindManyAuthTokenArgsFromAuthToken


    

class AuthTokenWhereInput(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    token: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeFilter']
    usedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthTokenWhereInputRecursive1', List['AuthTokenWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AuthTokenWhereInputRecursive1']
    OR: List['AuthTokenWhereInputRecursive1']
    NOT: List['AuthTokenWhereInputRecursive1']


class AuthTokenWhereInputRecursive1(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    token: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeFilter']
    usedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthTokenWhereInputRecursive2', List['AuthTokenWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AuthTokenWhereInputRecursive2']
    OR: List['AuthTokenWhereInputRecursive2']
    NOT: List['AuthTokenWhereInputRecursive2']


class AuthTokenWhereInputRecursive2(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    token: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeFilter']
    usedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthTokenWhereInputRecursive3', List['AuthTokenWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AuthTokenWhereInputRecursive3']
    OR: List['AuthTokenWhereInputRecursive3']
    NOT: List['AuthTokenWhereInputRecursive3']


class AuthTokenWhereInputRecursive3(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    token: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeFilter']
    usedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthTokenWhereInputRecursive4', List['AuthTokenWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AuthTokenWhereInputRecursive4']
    OR: List['AuthTokenWhereInputRecursive4']
    NOT: List['AuthTokenWhereInputRecursive4']


class AuthTokenWhereInputRecursive4(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_int, 'types.IntFilter']
    token: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeFilter']
    usedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'



# aggregate AuthToken types


    

class AuthTokenScalarWhereWithAggregatesInput(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuthTokenScalarWhereWithAggregatesInputRecursive1']
    OR: List['AuthTokenScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AuthTokenScalarWhereWithAggregatesInputRecursive1']


class AuthTokenScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuthTokenScalarWhereWithAggregatesInputRecursive2']
    OR: List['AuthTokenScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AuthTokenScalarWhereWithAggregatesInputRecursive2']


class AuthTokenScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuthTokenScalarWhereWithAggregatesInputRecursive3']
    OR: List['AuthTokenScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AuthTokenScalarWhereWithAggregatesInputRecursive3']


class AuthTokenScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuthTokenScalarWhereWithAggregatesInputRecursive4']
    OR: List['AuthTokenScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AuthTokenScalarWhereWithAggregatesInputRecursive4']


class AuthTokenScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """AuthToken arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_int, 'types.IntWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    expiresAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class AuthTokenGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _int
    token: _str
    type: _str
    expiresAt: datetime.datetime
    usedAt: datetime.datetime
    createdAt: datetime.datetime
    _sum: 'AuthTokenSumAggregateOutput'
    _avg: 'AuthTokenAvgAggregateOutput'
    _min: 'AuthTokenMinAggregateOutput'
    _max: 'AuthTokenMaxAggregateOutput'
    _count: 'AuthTokenCountAggregateOutput'


class AuthTokenAvgAggregateOutput(TypedDict, total=False):
    """AuthToken output for aggregating averages"""
    id: float
    userId: float


class AuthTokenSumAggregateOutput(TypedDict, total=False):
    """AuthToken output for aggregating sums"""
    id: _int
    userId: _int


class AuthTokenScalarAggregateOutput(TypedDict, total=False):
    """AuthToken output including scalar fields"""
    id: _int
    userId: _int
    token: _str
    type: _str
    expiresAt: datetime.datetime
    usedAt: datetime.datetime
    createdAt: datetime.datetime


AuthTokenMinAggregateOutput = AuthTokenScalarAggregateOutput
AuthTokenMaxAggregateOutput = AuthTokenScalarAggregateOutput


class AuthTokenMaxAggregateInput(TypedDict, total=False):
    """AuthToken input for aggregating by max"""
    id: bool
    userId: bool
    token: bool
    type: bool
    expiresAt: bool
    usedAt: bool
    createdAt: bool


class AuthTokenMinAggregateInput(TypedDict, total=False):
    """AuthToken input for aggregating by min"""
    id: bool
    userId: bool
    token: bool
    type: bool
    expiresAt: bool
    usedAt: bool
    createdAt: bool


class AuthTokenNumberAggregateInput(TypedDict, total=False):
    """AuthToken input for aggregating numbers"""
    id: bool
    userId: bool


AuthTokenAvgAggregateInput = AuthTokenNumberAggregateInput
AuthTokenSumAggregateInput = AuthTokenNumberAggregateInput


AuthTokenCountAggregateInput = TypedDict(
    'AuthTokenCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'token': bool,
        'type': bool,
        'expiresAt': bool,
        'usedAt': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

AuthTokenCountAggregateOutput = TypedDict(
    'AuthTokenCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'token': int,
        'type': int,
        'expiresAt': int,
        'usedAt': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


AuthTokenKeys = Literal[
    'id',
    'userId',
    'token',
    'type',
    'expiresAt',
    'usedAt',
    'createdAt',
    'user',
]
AuthTokenScalarFieldKeys = Literal[
    'id',
    'userId',
    'token',
    'type',
    'expiresAt',
    'usedAt',
    'createdAt',
]
AuthTokenScalarFieldKeysT = TypeVar('AuthTokenScalarFieldKeysT', bound=AuthTokenScalarFieldKeys)

AuthTokenRelationalFieldKeys = Literal[
        'user',
    ]

# File types

class FileOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the File create method"""
    id: _int
    size: Optional[_int]
    mimeType: Optional[_str]
    uploadedBy: Optional[_int]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    uploader: 'UserCreateNestedWithoutRelationsInput'


class FileCreateInput(FileOptionalCreateInput):
    """Required arguments to the File create method"""
    path: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class FileOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the File create method, without relations"""
    id: _int
    size: Optional[_int]
    mimeType: Optional[_str]
    uploadedBy: Optional[_int]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class FileCreateWithoutRelationsInput(FileOptionalCreateWithoutRelationsInput):
    """Required arguments to the File create method, without relations"""
    path: _str

class FileConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'FileCreateWithoutRelationsInput'
    where: 'FileWhereUniqueInput'

class FileCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'FileCreateWithoutRelationsInput'
    connect: 'FileWhereUniqueInput'
    connect_or_create: 'FileConnectOrCreateWithoutRelationsInput'


class FileCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['FileCreateWithoutRelationsInput', List['FileCreateWithoutRelationsInput']]
    connect: Union['FileWhereUniqueInput', List['FileWhereUniqueInput']]
    connect_or_create: Union['FileConnectOrCreateWithoutRelationsInput', List['FileConnectOrCreateWithoutRelationsInput']]

_FileWhereUnique_id_Input = TypedDict(
    '_FileWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

FileWhereUniqueInput = _FileWhereUnique_id_Input


class FileUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    path: _str
    size: Optional[Union[AtomicIntInput, _int]]
    mimeType: Optional[_str]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]
    uploader: 'UserUpdateOneWithoutRelationsInput'


class FileUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    path: _str
    size: Optional[Union[AtomicIntInput, _int]]
    mimeType: Optional[_str]
    createdAt: datetime.datetime
    deletedAt: Optional[datetime.datetime]


class FileUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['FileCreateWithoutRelationsInput']
    connect: List['FileWhereUniqueInput']
    connect_or_create: List['FileConnectOrCreateWithoutRelationsInput']
    set: List['FileWhereUniqueInput']
    disconnect: List['FileWhereUniqueInput']
    delete: List['FileWhereUniqueInput']

    # TODO
    # update: List['FileUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['FileUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['FileScalarWhereInput']
    # upsert: List['FileUpserteWithWhereUniqueWithoutRelationsInput']


class FileUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'FileCreateWithoutRelationsInput'
    connect: 'FileWhereUniqueInput'
    connect_or_create: 'FileConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'FileUpdateInput'
    # upsert: 'FileUpsertWithoutRelationsInput'


class FileUpsertInput(TypedDict):
    create: 'FileCreateInput'
    update: 'FileUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_File_id_OrderByInput = TypedDict(
    '_File_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_File_path_OrderByInput = TypedDict(
    '_File_path_OrderByInput',
    {
        'path': 'SortOrder',
    },
    total=True
)

_File_size_OrderByInput = TypedDict(
    '_File_size_OrderByInput',
    {
        'size': 'SortOrder',
    },
    total=True
)

_File_mimeType_OrderByInput = TypedDict(
    '_File_mimeType_OrderByInput',
    {
        'mimeType': 'SortOrder',
    },
    total=True
)

_File_uploadedBy_OrderByInput = TypedDict(
    '_File_uploadedBy_OrderByInput',
    {
        'uploadedBy': 'SortOrder',
    },
    total=True
)

_File_createdAt_OrderByInput = TypedDict(
    '_File_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_File_deletedAt_OrderByInput = TypedDict(
    '_File_deletedAt_OrderByInput',
    {
        'deletedAt': 'SortOrder',
    },
    total=True
)

_File_RelevanceInner = TypedDict(
    '_File_RelevanceInner',
    {
        'fields': 'List[FileScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_File_RelevanceOrderByInput = TypedDict(
    '_File_RelevanceOrderByInput',
    {
        '_relevance': '_File_RelevanceInner',
    },
    total=True
)

FileOrderByInput = Union[
    '_File_id_OrderByInput',
    '_File_path_OrderByInput',
    '_File_size_OrderByInput',
    '_File_mimeType_OrderByInput',
    '_File_uploadedBy_OrderByInput',
    '_File_createdAt_OrderByInput',
    '_File_deletedAt_OrderByInput',
    '_File_RelevanceOrderByInput',
]



# recursive File types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

FileRelationFilter = TypedDict(
    'FileRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class FileListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class FileInclude(TypedDict, total=False):
    """File relational arguments"""
    uploader: Union[bool, 'UserArgsFromFile']


    

class UserIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromFileRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromFileRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromFileRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromFileRecursive1']
    files: Union[bool, 'FindManyFileArgsFromFileRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromFileRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFileRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromFileRecursive1']


class UserIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromFileRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromFileRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromFileRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromFileRecursive2']
    files: Union[bool, 'FindManyFileArgsFromFileRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromFileRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFileRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromFileRecursive2']


class UserIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromFileRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromFileRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromFileRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromFileRecursive3']
    files: Union[bool, 'FindManyFileArgsFromFileRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromFileRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFileRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromFileRecursive3']


class UserIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromFileRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromFileRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromFileRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromFileRecursive4']
    files: Union[bool, 'FindManyFileArgsFromFileRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromFileRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromFileRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromFileRecursive4']


class UserIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class UserArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyUserArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromFileRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive1']


class OrganizationIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromFileRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive2']


class OrganizationIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromFileRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive3']


class OrganizationIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromFileRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromFileRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromFileRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromFileRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromFileRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromFileRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromFileRecursive4']


class OrganizationIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class OrganizationArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyOrganizationArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    user: Union[bool, 'UserArgsFromFileRecursive1']
    invitedBy: Union[bool, 'UserArgsFromFileRecursive1']


class OrganizationMemberIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    user: Union[bool, 'UserArgsFromFileRecursive2']
    invitedBy: Union[bool, 'UserArgsFromFileRecursive2']


class OrganizationMemberIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    user: Union[bool, 'UserArgsFromFileRecursive3']
    invitedBy: Union[bool, 'UserArgsFromFileRecursive3']


class OrganizationMemberIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    user: Union[bool, 'UserArgsFromFileRecursive4']
    invitedBy: Union[bool, 'UserArgsFromFileRecursive4']


class OrganizationMemberIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class OrganizationMemberArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyOrganizationMemberArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    modules: Union[bool, 'FindManyPathModuleArgsFromFileRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive1']


class PathIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    modules: Union[bool, 'FindManyPathModuleArgsFromFileRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive2']


class PathIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    modules: Union[bool, 'FindManyPathModuleArgsFromFileRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive3']


class PathIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    modules: Union[bool, 'FindManyPathModuleArgsFromFileRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive4']


class PathIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class PathArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyPathArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    instructor: Union[bool, 'UserArgsFromFileRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromFileRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromFileRecursive1']


class ModuleIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    instructor: Union[bool, 'UserArgsFromFileRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromFileRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromFileRecursive2']


class ModuleIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    instructor: Union[bool, 'UserArgsFromFileRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromFileRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromFileRecursive3']


class ModuleIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    instructor: Union[bool, 'UserArgsFromFileRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromFileRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromFileRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromFileRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromFileRecursive4']


class ModuleIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class ModuleArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyModuleArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    path: Union[bool, 'PathArgsFromFileRecursive1']
    module: Union[bool, 'ModuleArgsFromFileRecursive1']


class PathModuleIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    path: Union[bool, 'PathArgsFromFileRecursive2']
    module: Union[bool, 'ModuleArgsFromFileRecursive2']


class PathModuleIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    path: Union[bool, 'PathArgsFromFileRecursive3']
    module: Union[bool, 'ModuleArgsFromFileRecursive3']


class PathModuleIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    path: Union[bool, 'PathArgsFromFileRecursive4']
    module: Union[bool, 'ModuleArgsFromFileRecursive4']


class PathModuleIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class PathModuleArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyPathModuleArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    module: Union[bool, 'ModuleArgsFromFileRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive1']


class LessonIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    module: Union[bool, 'ModuleArgsFromFileRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive2']


class LessonIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    module: Union[bool, 'ModuleArgsFromFileRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive3']


class LessonIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    module: Union[bool, 'ModuleArgsFromFileRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromFileRecursive4']


class LessonIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class LessonArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyLessonArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']
    module: Union[bool, 'ModuleArgsFromFileRecursive1']
    path: Union[bool, 'PathArgsFromFileRecursive1']


class EnrollmentIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']
    module: Union[bool, 'ModuleArgsFromFileRecursive2']
    path: Union[bool, 'PathArgsFromFileRecursive2']


class EnrollmentIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']
    module: Union[bool, 'ModuleArgsFromFileRecursive3']
    path: Union[bool, 'PathArgsFromFileRecursive3']


class EnrollmentIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']
    module: Union[bool, 'ModuleArgsFromFileRecursive4']
    path: Union[bool, 'PathArgsFromFileRecursive4']


class EnrollmentIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class EnrollmentArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyEnrollmentArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']
    lesson: Union[bool, 'LessonArgsFromFileRecursive1']


class LessonProgressIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']
    lesson: Union[bool, 'LessonArgsFromFileRecursive2']


class LessonProgressIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']
    lesson: Union[bool, 'LessonArgsFromFileRecursive3']


class LessonProgressIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']
    lesson: Union[bool, 'LessonArgsFromFileRecursive4']


class LessonProgressIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class LessonProgressArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyLessonProgressArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']
    module: Union[bool, 'ModuleArgsFromFileRecursive1']


class CertificateIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']
    module: Union[bool, 'ModuleArgsFromFileRecursive2']


class CertificateIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']
    module: Union[bool, 'ModuleArgsFromFileRecursive3']


class CertificateIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']
    module: Union[bool, 'ModuleArgsFromFileRecursive4']


class CertificateIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class CertificateArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyCertificateArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive1']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromFileRecursive1']


class ProjectIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive2']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromFileRecursive2']


class ProjectIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive3']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromFileRecursive3']


class ProjectIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    owner: Union[bool, 'UserArgsFromFileRecursive4']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromFileRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromFileRecursive4']


class ProjectIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class ProjectArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyProjectArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive1']
    freelancer: Union[bool, 'UserArgsFromFileRecursive1']


class ProposalIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive2']
    freelancer: Union[bool, 'UserArgsFromFileRecursive2']


class ProposalIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive3']
    freelancer: Union[bool, 'UserArgsFromFileRecursive3']


class ProposalIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive4']
    freelancer: Union[bool, 'UserArgsFromFileRecursive4']


class ProposalIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class ProposalArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyProposalArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive1']
    freelancer: Union[bool, 'UserArgsFromFileRecursive1']
    client: Union[bool, 'UserArgsFromFileRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromFileRecursive1']


class ContractIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive2']
    freelancer: Union[bool, 'UserArgsFromFileRecursive2']
    client: Union[bool, 'UserArgsFromFileRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromFileRecursive2']


class ContractIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive3']
    freelancer: Union[bool, 'UserArgsFromFileRecursive3']
    client: Union[bool, 'UserArgsFromFileRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromFileRecursive3']


class ContractIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    project: Union[bool, 'ProjectArgsFromFileRecursive4']
    freelancer: Union[bool, 'UserArgsFromFileRecursive4']
    client: Union[bool, 'UserArgsFromFileRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromFileRecursive4']


class ContractIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class ContractArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyContractArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    contract: Union[bool, 'ContractArgsFromFileRecursive1']


class DeliveryIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    contract: Union[bool, 'ContractArgsFromFileRecursive2']


class DeliveryIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    contract: Union[bool, 'ContractArgsFromFileRecursive3']


class DeliveryIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    contract: Union[bool, 'ContractArgsFromFileRecursive4']


class DeliveryIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class DeliveryArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyDeliveryArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']


class UserSkillIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']


class UserSkillIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']


class UserSkillIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']


class UserSkillIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class UserSkillArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyUserSkillArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive1']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive1']


class DatasetIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive2']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive2']


class DatasetIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive3']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive3']


class DatasetIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive4']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromFileRecursive4']


class DatasetIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class DatasetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyDatasetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive1']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive1']


class DashboardIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive2']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive2']


class DashboardIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive3']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive3']


class DashboardIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    ownerUser: Union[bool, 'UserArgsFromFileRecursive4']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromFileRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromFileRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromFileRecursive4']


class DashboardIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class DashboardArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyDashboardArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive1']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive1']


class DashboardDatasetIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive2']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive2']


class DashboardDatasetIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive3']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive3']


class DashboardDatasetIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive4']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive4']


class DashboardDatasetIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class DashboardDatasetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyDashboardDatasetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive1']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive1']


class WidgetIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive2']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive2']


class WidgetIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive3']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive3']


class WidgetIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive4']
    dataset: Union[bool, 'DatasetArgsFromFileRecursive4']


class WidgetIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class WidgetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyWidgetArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive1']
    author: Union[bool, 'UserArgsFromFileRecursive1']


class InsightIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive2']
    author: Union[bool, 'UserArgsFromFileRecursive2']


class InsightIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive3']
    author: Union[bool, 'UserArgsFromFileRecursive3']


class InsightIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    dashboard: Union[bool, 'DashboardArgsFromFileRecursive4']
    author: Union[bool, 'UserArgsFromFileRecursive4']


class InsightIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class InsightArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyInsightArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    dataset: Union[bool, 'DatasetArgsFromFileRecursive1']
    creator: Union[bool, 'UserArgsFromFileRecursive1']


class MLModelIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    dataset: Union[bool, 'DatasetArgsFromFileRecursive2']
    creator: Union[bool, 'UserArgsFromFileRecursive2']


class MLModelIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    dataset: Union[bool, 'DatasetArgsFromFileRecursive3']
    creator: Union[bool, 'UserArgsFromFileRecursive3']


class MLModelIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    dataset: Union[bool, 'DatasetArgsFromFileRecursive4']
    creator: Union[bool, 'UserArgsFromFileRecursive4']


class MLModelIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class MLModelArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyMLModelArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']


class TransactionIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']


class TransactionIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']


class TransactionIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']


class TransactionIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class TransactionArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyTransactionArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive1']


class SubscriptionIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive2']


class SubscriptionIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive3']


class SubscriptionIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']
    organization: Union[bool, 'OrganizationArgsFromFileRecursive4']


class SubscriptionIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class SubscriptionArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManySubscriptionArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']


class NotificationIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']


class NotificationIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']


class NotificationIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']


class NotificationIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class NotificationArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyNotificationArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive1']


class AuthTokenIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive2']


class AuthTokenIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive3']


class AuthTokenIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    user: Union[bool, 'UserArgsFromFileRecursive4']


class AuthTokenIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class AuthTokenArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyAuthTokenArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    uploader: Union[bool, 'UserArgsFromFileRecursive1']


class FileIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    uploader: Union[bool, 'UserArgsFromFileRecursive2']


class FileIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    uploader: Union[bool, 'UserArgsFromFileRecursive3']


class FileIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    uploader: Union[bool, 'UserArgsFromFileRecursive4']


class FileIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class FileArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyFileArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromFile(TypedDict, total=False):
    """Relational arguments for File"""
    actor: Union[bool, 'UserArgsFromFileRecursive1']


class AuditLogIncludeFromFileRecursive1(TypedDict, total=False):
    """Relational arguments for File"""
    actor: Union[bool, 'UserArgsFromFileRecursive2']


class AuditLogIncludeFromFileRecursive2(TypedDict, total=False):
    """Relational arguments for File"""
    actor: Union[bool, 'UserArgsFromFileRecursive3']


class AuditLogIncludeFromFileRecursive3(TypedDict, total=False):
    """Relational arguments for File"""
    actor: Union[bool, 'UserArgsFromFileRecursive4']


class AuditLogIncludeFromFileRecursive4(TypedDict, total=False):
    """Relational arguments for File"""

    

class AuditLogArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    
    

class FindManyAuditLogArgsFromFile(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromFileRecursive1(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromFileRecursive2(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromFileRecursive3(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromFileRecursive4(TypedDict, total=False):
    """Arguments for File"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyFileArgs = FindManyFileArgsFromFile
FindFirstFileArgs = FindManyFileArgsFromFile


    

class FileWhereInput(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    path: Union[_str, 'types.StringFilter']
    size: Union[None, _int, 'types.IntFilter']
    mimeType: Union[None, _str, 'types.StringFilter']
    uploadedBy: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    uploader: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['FileWhereInputRecursive1', List['FileWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['FileWhereInputRecursive1']
    OR: List['FileWhereInputRecursive1']
    NOT: List['FileWhereInputRecursive1']


class FileWhereInputRecursive1(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    path: Union[_str, 'types.StringFilter']
    size: Union[None, _int, 'types.IntFilter']
    mimeType: Union[None, _str, 'types.StringFilter']
    uploadedBy: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    uploader: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['FileWhereInputRecursive2', List['FileWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['FileWhereInputRecursive2']
    OR: List['FileWhereInputRecursive2']
    NOT: List['FileWhereInputRecursive2']


class FileWhereInputRecursive2(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    path: Union[_str, 'types.StringFilter']
    size: Union[None, _int, 'types.IntFilter']
    mimeType: Union[None, _str, 'types.StringFilter']
    uploadedBy: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    uploader: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['FileWhereInputRecursive3', List['FileWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['FileWhereInputRecursive3']
    OR: List['FileWhereInputRecursive3']
    NOT: List['FileWhereInputRecursive3']


class FileWhereInputRecursive3(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    path: Union[_str, 'types.StringFilter']
    size: Union[None, _int, 'types.IntFilter']
    mimeType: Union[None, _str, 'types.StringFilter']
    uploadedBy: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    uploader: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['FileWhereInputRecursive4', List['FileWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['FileWhereInputRecursive4']
    OR: List['FileWhereInputRecursive4']
    NOT: List['FileWhereInputRecursive4']


class FileWhereInputRecursive4(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    path: Union[_str, 'types.StringFilter']
    size: Union[None, _int, 'types.IntFilter']
    mimeType: Union[None, _str, 'types.StringFilter']
    uploadedBy: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    deletedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    uploader: 'UserRelationFilter'



# aggregate File types


    

class FileScalarWhereWithAggregatesInput(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    path: Union[_str, 'types.StringWithAggregatesFilter']
    size: Union[_int, 'types.IntWithAggregatesFilter']
    mimeType: Union[_str, 'types.StringWithAggregatesFilter']
    uploadedBy: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['FileScalarWhereWithAggregatesInputRecursive1']
    OR: List['FileScalarWhereWithAggregatesInputRecursive1']
    NOT: List['FileScalarWhereWithAggregatesInputRecursive1']


class FileScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    path: Union[_str, 'types.StringWithAggregatesFilter']
    size: Union[_int, 'types.IntWithAggregatesFilter']
    mimeType: Union[_str, 'types.StringWithAggregatesFilter']
    uploadedBy: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['FileScalarWhereWithAggregatesInputRecursive2']
    OR: List['FileScalarWhereWithAggregatesInputRecursive2']
    NOT: List['FileScalarWhereWithAggregatesInputRecursive2']


class FileScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    path: Union[_str, 'types.StringWithAggregatesFilter']
    size: Union[_int, 'types.IntWithAggregatesFilter']
    mimeType: Union[_str, 'types.StringWithAggregatesFilter']
    uploadedBy: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['FileScalarWhereWithAggregatesInputRecursive3']
    OR: List['FileScalarWhereWithAggregatesInputRecursive3']
    NOT: List['FileScalarWhereWithAggregatesInputRecursive3']


class FileScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    path: Union[_str, 'types.StringWithAggregatesFilter']
    size: Union[_int, 'types.IntWithAggregatesFilter']
    mimeType: Union[_str, 'types.StringWithAggregatesFilter']
    uploadedBy: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['FileScalarWhereWithAggregatesInputRecursive4']
    OR: List['FileScalarWhereWithAggregatesInputRecursive4']
    NOT: List['FileScalarWhereWithAggregatesInputRecursive4']


class FileScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """File arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    path: Union[_str, 'types.StringWithAggregatesFilter']
    size: Union[_int, 'types.IntWithAggregatesFilter']
    mimeType: Union[_str, 'types.StringWithAggregatesFilter']
    uploadedBy: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    deletedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class FileGroupByOutput(TypedDict, total=False):
    id: _int
    path: _str
    size: _int
    mimeType: _str
    uploadedBy: _int
    createdAt: datetime.datetime
    deletedAt: datetime.datetime
    _sum: 'FileSumAggregateOutput'
    _avg: 'FileAvgAggregateOutput'
    _min: 'FileMinAggregateOutput'
    _max: 'FileMaxAggregateOutput'
    _count: 'FileCountAggregateOutput'


class FileAvgAggregateOutput(TypedDict, total=False):
    """File output for aggregating averages"""
    id: float
    size: float
    uploadedBy: float


class FileSumAggregateOutput(TypedDict, total=False):
    """File output for aggregating sums"""
    id: _int
    size: _int
    uploadedBy: _int


class FileScalarAggregateOutput(TypedDict, total=False):
    """File output including scalar fields"""
    id: _int
    path: _str
    size: _int
    mimeType: _str
    uploadedBy: _int
    createdAt: datetime.datetime
    deletedAt: datetime.datetime


FileMinAggregateOutput = FileScalarAggregateOutput
FileMaxAggregateOutput = FileScalarAggregateOutput


class FileMaxAggregateInput(TypedDict, total=False):
    """File input for aggregating by max"""
    id: bool
    path: bool
    size: bool
    mimeType: bool
    uploadedBy: bool
    createdAt: bool
    deletedAt: bool


class FileMinAggregateInput(TypedDict, total=False):
    """File input for aggregating by min"""
    id: bool
    path: bool
    size: bool
    mimeType: bool
    uploadedBy: bool
    createdAt: bool
    deletedAt: bool


class FileNumberAggregateInput(TypedDict, total=False):
    """File input for aggregating numbers"""
    id: bool
    size: bool
    uploadedBy: bool


FileAvgAggregateInput = FileNumberAggregateInput
FileSumAggregateInput = FileNumberAggregateInput


FileCountAggregateInput = TypedDict(
    'FileCountAggregateInput',
    {
        'id': bool,
        'path': bool,
        'size': bool,
        'mimeType': bool,
        'uploadedBy': bool,
        'createdAt': bool,
        'deletedAt': bool,
        '_all': bool,
    },
    total=False,
)

FileCountAggregateOutput = TypedDict(
    'FileCountAggregateOutput',
    {
        'id': int,
        'path': int,
        'size': int,
        'mimeType': int,
        'uploadedBy': int,
        'createdAt': int,
        'deletedAt': int,
        '_all': int,
    },
    total=False,
)


FileKeys = Literal[
    'id',
    'path',
    'size',
    'mimeType',
    'uploadedBy',
    'createdAt',
    'deletedAt',
    'uploader',
]
FileScalarFieldKeys = Literal[
    'id',
    'path',
    'size',
    'mimeType',
    'uploadedBy',
    'createdAt',
    'deletedAt',
]
FileScalarFieldKeysT = TypeVar('FileScalarFieldKeysT', bound=FileScalarFieldKeys)

FileRelationalFieldKeys = Literal[
        'uploader',
    ]

# AuditLog types

class AuditLogOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the AuditLog create method"""
    id: _int
    actorId: Optional[_int]
    model: Optional[_str]
    recordId: Optional[_str]
    changes: Optional['fields.Json']
    createdAt: datetime.datetime
    actor: 'UserCreateNestedWithoutRelationsInput'


class AuditLogCreateInput(AuditLogOptionalCreateInput):
    """Required arguments to the AuditLog create method"""
    action: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AuditLogOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the AuditLog create method, without relations"""
    id: _int
    actorId: Optional[_int]
    model: Optional[_str]
    recordId: Optional[_str]
    changes: Optional['fields.Json']
    createdAt: datetime.datetime


class AuditLogCreateWithoutRelationsInput(AuditLogOptionalCreateWithoutRelationsInput):
    """Required arguments to the AuditLog create method, without relations"""
    action: _str

class AuditLogConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'AuditLogCreateWithoutRelationsInput'
    where: 'AuditLogWhereUniqueInput'

class AuditLogCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AuditLogCreateWithoutRelationsInput'
    connect: 'AuditLogWhereUniqueInput'
    connect_or_create: 'AuditLogConnectOrCreateWithoutRelationsInput'


class AuditLogCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AuditLogCreateWithoutRelationsInput', List['AuditLogCreateWithoutRelationsInput']]
    connect: Union['AuditLogWhereUniqueInput', List['AuditLogWhereUniqueInput']]
    connect_or_create: Union['AuditLogConnectOrCreateWithoutRelationsInput', List['AuditLogConnectOrCreateWithoutRelationsInput']]

_AuditLogWhereUnique_id_Input = TypedDict(
    '_AuditLogWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

AuditLogWhereUniqueInput = _AuditLogWhereUnique_id_Input


class AuditLogUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    action: _str
    model: Optional[_str]
    recordId: Optional[_str]
    changes: Optional['fields.Json']
    createdAt: datetime.datetime
    actor: 'UserUpdateOneWithoutRelationsInput'


class AuditLogUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    action: _str
    model: Optional[_str]
    recordId: Optional[_str]
    changes: Optional['fields.Json']
    createdAt: datetime.datetime


class AuditLogUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AuditLogCreateWithoutRelationsInput']
    connect: List['AuditLogWhereUniqueInput']
    connect_or_create: List['AuditLogConnectOrCreateWithoutRelationsInput']
    set: List['AuditLogWhereUniqueInput']
    disconnect: List['AuditLogWhereUniqueInput']
    delete: List['AuditLogWhereUniqueInput']

    # TODO
    # update: List['AuditLogUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AuditLogUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AuditLogScalarWhereInput']
    # upsert: List['AuditLogUpserteWithWhereUniqueWithoutRelationsInput']


class AuditLogUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AuditLogCreateWithoutRelationsInput'
    connect: 'AuditLogWhereUniqueInput'
    connect_or_create: 'AuditLogConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AuditLogUpdateInput'
    # upsert: 'AuditLogUpsertWithoutRelationsInput'


class AuditLogUpsertInput(TypedDict):
    create: 'AuditLogCreateInput'
    update: 'AuditLogUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_AuditLog_id_OrderByInput = TypedDict(
    '_AuditLog_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_AuditLog_actorId_OrderByInput = TypedDict(
    '_AuditLog_actorId_OrderByInput',
    {
        'actorId': 'SortOrder',
    },
    total=True
)

_AuditLog_action_OrderByInput = TypedDict(
    '_AuditLog_action_OrderByInput',
    {
        'action': 'SortOrder',
    },
    total=True
)

_AuditLog_model_OrderByInput = TypedDict(
    '_AuditLog_model_OrderByInput',
    {
        'model': 'SortOrder',
    },
    total=True
)

_AuditLog_recordId_OrderByInput = TypedDict(
    '_AuditLog_recordId_OrderByInput',
    {
        'recordId': 'SortOrder',
    },
    total=True
)

_AuditLog_changes_OrderByInput = TypedDict(
    '_AuditLog_changes_OrderByInput',
    {
        'changes': 'SortOrder',
    },
    total=True
)

_AuditLog_createdAt_OrderByInput = TypedDict(
    '_AuditLog_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_AuditLog_RelevanceInner = TypedDict(
    '_AuditLog_RelevanceInner',
    {
        'fields': 'List[AuditLogScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_AuditLog_RelevanceOrderByInput = TypedDict(
    '_AuditLog_RelevanceOrderByInput',
    {
        '_relevance': '_AuditLog_RelevanceInner',
    },
    total=True
)

AuditLogOrderByInput = Union[
    '_AuditLog_id_OrderByInput',
    '_AuditLog_actorId_OrderByInput',
    '_AuditLog_action_OrderByInput',
    '_AuditLog_model_OrderByInput',
    '_AuditLog_recordId_OrderByInput',
    '_AuditLog_changes_OrderByInput',
    '_AuditLog_createdAt_OrderByInput',
    '_AuditLog_RelevanceOrderByInput',
]



# recursive AuditLog types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AuditLogRelationFilter = TypedDict(
    'AuditLogRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AuditLogListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AuditLogInclude(TypedDict, total=False):
    """AuditLog relational arguments"""
    actor: Union[bool, 'UserArgsFromAuditLog']


    

class UserIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive1']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive1']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive1']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuditLogRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive1']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuditLogRecursive1']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuditLogRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive1']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuditLogRecursive1']
    files: Union[bool, 'FindManyFileArgsFromAuditLogRecursive1']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuditLogRecursive1']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive1']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuditLogRecursive1']


class UserIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive2']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive2']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive2']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuditLogRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive2']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuditLogRecursive2']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuditLogRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive2']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuditLogRecursive2']
    files: Union[bool, 'FindManyFileArgsFromAuditLogRecursive2']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuditLogRecursive2']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive2']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuditLogRecursive2']


class UserIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive3']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive3']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive3']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuditLogRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive3']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuditLogRecursive3']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuditLogRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive3']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuditLogRecursive3']
    files: Union[bool, 'FindManyFileArgsFromAuditLogRecursive3']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuditLogRecursive3']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive3']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuditLogRecursive3']


class UserIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    primaryOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    ownedOrganization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    memberships: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive4']
    sentInvites: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive4']
    lessonProgresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive4']
    instructedModules: Union[bool, 'FindManyModuleArgsFromAuditLogRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive4']
    contractsAsFreelancer: Union[bool, 'FindManyContractArgsFromAuditLogRecursive4']
    contractsAsClient: Union[bool, 'FindManyContractArgsFromAuditLogRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive4']
    notifications: Union[bool, 'FindManyNotificationArgsFromAuditLogRecursive4']
    files: Union[bool, 'FindManyFileArgsFromAuditLogRecursive4']
    authTokens: Union[bool, 'FindManyAuthTokenArgsFromAuditLogRecursive4']
    auditLogs: Union[bool, 'FindManyAuditLogArgsFromAuditLogRecursive4']
    skillsDetails: Union[bool, 'FindManyUserSkillArgsFromAuditLogRecursive4']


class UserIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class UserArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyUserArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class OrganizationIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive1']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuditLogRecursive1']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive1']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive1']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive1']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive1']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive1']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive1']


class OrganizationIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive2']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuditLogRecursive2']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive2']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive2']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive2']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive2']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive2']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive2']


class OrganizationIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive3']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuditLogRecursive3']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive3']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive3']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive3']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive3']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive3']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive3']


class OrganizationIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive4']
    primaryUsers: Union[bool, 'FindManyUserArgsFromAuditLogRecursive4']
    members: Union[bool, 'FindManyOrganizationMemberArgsFromAuditLogRecursive4']
    datasets: Union[bool, 'FindManyDatasetArgsFromAuditLogRecursive4']
    dashboards: Union[bool, 'FindManyDashboardArgsFromAuditLogRecursive4']
    projects: Union[bool, 'FindManyProjectArgsFromAuditLogRecursive4']
    transactions: Union[bool, 'FindManyTransactionArgsFromAuditLogRecursive4']
    subscriptions: Union[bool, 'FindManySubscriptionArgsFromAuditLogRecursive4']


class OrganizationIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class OrganizationArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class OrganizationArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class OrganizationArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class OrganizationArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class OrganizationArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyOrganizationArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive1'


class FindManyOrganizationArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive2'


class FindManyOrganizationArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive3'


class FindManyOrganizationArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    include: 'OrganizationIncludeFromOrganizationRecursive4'


class FindManyOrganizationArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationOrderByInput', List['OrganizationOrderByInput']]
    where: 'OrganizationWhereInput'
    cursor: 'OrganizationWhereUniqueInput'
    distinct: List['OrganizationScalarFieldKeys']
    
    

class OrganizationMemberIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    invitedBy: Union[bool, 'UserArgsFromAuditLogRecursive1']


class OrganizationMemberIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    invitedBy: Union[bool, 'UserArgsFromAuditLogRecursive2']


class OrganizationMemberIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    invitedBy: Union[bool, 'UserArgsFromAuditLogRecursive3']


class OrganizationMemberIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    invitedBy: Union[bool, 'UserArgsFromAuditLogRecursive4']


class OrganizationMemberIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class OrganizationMemberArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class OrganizationMemberArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class OrganizationMemberArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class OrganizationMemberArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class OrganizationMemberArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyOrganizationMemberArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive1'


class FindManyOrganizationMemberArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive2'


class FindManyOrganizationMemberArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive3'


class FindManyOrganizationMemberArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    include: 'OrganizationMemberIncludeFromOrganizationMemberRecursive4'


class FindManyOrganizationMemberArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['OrganizationMemberOrderByInput', List['OrganizationMemberOrderByInput']]
    where: 'OrganizationMemberWhereInput'
    cursor: 'OrganizationMemberWhereUniqueInput'
    distinct: List['OrganizationMemberScalarFieldKeys']
    
    

class PathIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive1']


class PathIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive2']


class PathIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive3']


class PathIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    modules: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive4']


class PathIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class PathArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathIncludeFromPathRecursive1'


class PathArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathIncludeFromPathRecursive2'


class PathArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathIncludeFromPathRecursive3'


class PathArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathIncludeFromPathRecursive4'


class PathArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyPathArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive1'


class FindManyPathArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive2'


class FindManyPathArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive3'


class FindManyPathArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    include: 'PathIncludeFromPathRecursive4'


class FindManyPathArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathOrderByInput', List['PathOrderByInput']]
    where: 'PathWhereInput'
    cursor: 'PathWhereUniqueInput'
    distinct: List['PathScalarFieldKeys']
    
    

class ModuleIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    instructor: Union[bool, 'UserArgsFromAuditLogRecursive1']
    lessons: Union[bool, 'FindManyLessonArgsFromAuditLogRecursive1']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive1']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive1']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive1']


class ModuleIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    instructor: Union[bool, 'UserArgsFromAuditLogRecursive2']
    lessons: Union[bool, 'FindManyLessonArgsFromAuditLogRecursive2']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive2']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive2']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive2']


class ModuleIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    instructor: Union[bool, 'UserArgsFromAuditLogRecursive3']
    lessons: Union[bool, 'FindManyLessonArgsFromAuditLogRecursive3']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive3']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive3']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive3']


class ModuleIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    instructor: Union[bool, 'UserArgsFromAuditLogRecursive4']
    lessons: Union[bool, 'FindManyLessonArgsFromAuditLogRecursive4']
    certificates: Union[bool, 'FindManyCertificateArgsFromAuditLogRecursive4']
    enrollments: Union[bool, 'FindManyEnrollmentArgsFromAuditLogRecursive4']
    pathLinks: Union[bool, 'FindManyPathModuleArgsFromAuditLogRecursive4']


class ModuleIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class ModuleArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ModuleIncludeFromModuleRecursive1'


class ModuleArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ModuleIncludeFromModuleRecursive2'


class ModuleArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ModuleIncludeFromModuleRecursive3'


class ModuleArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ModuleIncludeFromModuleRecursive4'


class ModuleArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyModuleArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive1'


class FindManyModuleArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive2'


class FindManyModuleArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive3'


class FindManyModuleArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    include: 'ModuleIncludeFromModuleRecursive4'


class FindManyModuleArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ModuleOrderByInput', List['ModuleOrderByInput']]
    where: 'ModuleWhereInput'
    cursor: 'ModuleWhereUniqueInput'
    distinct: List['ModuleScalarFieldKeys']
    
    

class PathModuleIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    path: Union[bool, 'PathArgsFromAuditLogRecursive1']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive1']


class PathModuleIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    path: Union[bool, 'PathArgsFromAuditLogRecursive2']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive2']


class PathModuleIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    path: Union[bool, 'PathArgsFromAuditLogRecursive3']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive3']


class PathModuleIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    path: Union[bool, 'PathArgsFromAuditLogRecursive4']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive4']


class PathModuleIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class PathModuleArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class PathModuleArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class PathModuleArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class PathModuleArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class PathModuleArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyPathModuleArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive1'


class FindManyPathModuleArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive2'


class FindManyPathModuleArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive3'


class FindManyPathModuleArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    include: 'PathModuleIncludeFromPathModuleRecursive4'


class FindManyPathModuleArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['PathModuleOrderByInput', List['PathModuleOrderByInput']]
    where: 'PathModuleWhereInput'
    cursor: 'PathModuleWhereUniqueInput'
    distinct: List['PathModuleScalarFieldKeys']
    
    

class LessonIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive1']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive1']


class LessonIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive2']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive2']


class LessonIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive3']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive3']


class LessonIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive4']
    progresses: Union[bool, 'FindManyLessonProgressArgsFromAuditLogRecursive4']


class LessonIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class LessonArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonIncludeFromLessonRecursive1'


class LessonArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonIncludeFromLessonRecursive2'


class LessonArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonIncludeFromLessonRecursive3'


class LessonArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonIncludeFromLessonRecursive4'


class LessonArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyLessonArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive1'


class FindManyLessonArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive2'


class FindManyLessonArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive3'


class FindManyLessonArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    include: 'LessonIncludeFromLessonRecursive4'


class FindManyLessonArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonOrderByInput', List['LessonOrderByInput']]
    where: 'LessonWhereInput'
    cursor: 'LessonWhereUniqueInput'
    distinct: List['LessonScalarFieldKeys']
    
    

class EnrollmentIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive1']
    path: Union[bool, 'PathArgsFromAuditLogRecursive1']


class EnrollmentIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive2']
    path: Union[bool, 'PathArgsFromAuditLogRecursive2']


class EnrollmentIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive3']
    path: Union[bool, 'PathArgsFromAuditLogRecursive3']


class EnrollmentIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive4']
    path: Union[bool, 'PathArgsFromAuditLogRecursive4']


class EnrollmentIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class EnrollmentArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class EnrollmentArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class EnrollmentArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class EnrollmentArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class EnrollmentArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyEnrollmentArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive1'


class FindManyEnrollmentArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive2'


class FindManyEnrollmentArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive3'


class FindManyEnrollmentArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    include: 'EnrollmentIncludeFromEnrollmentRecursive4'


class FindManyEnrollmentArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['EnrollmentOrderByInput', List['EnrollmentOrderByInput']]
    where: 'EnrollmentWhereInput'
    cursor: 'EnrollmentWhereUniqueInput'
    distinct: List['EnrollmentScalarFieldKeys']
    
    

class LessonProgressIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    lesson: Union[bool, 'LessonArgsFromAuditLogRecursive1']


class LessonProgressIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    lesson: Union[bool, 'LessonArgsFromAuditLogRecursive2']


class LessonProgressIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    lesson: Union[bool, 'LessonArgsFromAuditLogRecursive3']


class LessonProgressIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    lesson: Union[bool, 'LessonArgsFromAuditLogRecursive4']


class LessonProgressIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class LessonProgressArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class LessonProgressArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class LessonProgressArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class LessonProgressArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class LessonProgressArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyLessonProgressArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive1'


class FindManyLessonProgressArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive2'


class FindManyLessonProgressArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive3'


class FindManyLessonProgressArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    include: 'LessonProgressIncludeFromLessonProgressRecursive4'


class FindManyLessonProgressArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['LessonProgressOrderByInput', List['LessonProgressOrderByInput']]
    where: 'LessonProgressWhereInput'
    cursor: 'LessonProgressWhereUniqueInput'
    distinct: List['LessonProgressScalarFieldKeys']
    
    

class CertificateIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive1']


class CertificateIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive2']


class CertificateIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive3']


class CertificateIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    module: Union[bool, 'ModuleArgsFromAuditLogRecursive4']


class CertificateIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class CertificateArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CertificateIncludeFromCertificateRecursive1'


class CertificateArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CertificateIncludeFromCertificateRecursive2'


class CertificateArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CertificateIncludeFromCertificateRecursive3'


class CertificateArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'CertificateIncludeFromCertificateRecursive4'


class CertificateArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyCertificateArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive1'


class FindManyCertificateArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive2'


class FindManyCertificateArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive3'


class FindManyCertificateArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    include: 'CertificateIncludeFromCertificateRecursive4'


class FindManyCertificateArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['CertificateOrderByInput', List['CertificateOrderByInput']]
    where: 'CertificateWhereInput'
    cursor: 'CertificateWhereUniqueInput'
    distinct: List['CertificateScalarFieldKeys']
    
    

class ProjectIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive1']
    contracts: Union[bool, 'FindManyContractArgsFromAuditLogRecursive1']


class ProjectIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive2']
    contracts: Union[bool, 'FindManyContractArgsFromAuditLogRecursive2']


class ProjectIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive3']
    contracts: Union[bool, 'FindManyContractArgsFromAuditLogRecursive3']


class ProjectIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    owner: Union[bool, 'UserArgsFromAuditLogRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    proposals: Union[bool, 'FindManyProposalArgsFromAuditLogRecursive4']
    contracts: Union[bool, 'FindManyContractArgsFromAuditLogRecursive4']


class ProjectIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class ProjectArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProjectIncludeFromProjectRecursive1'


class ProjectArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProjectIncludeFromProjectRecursive2'


class ProjectArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProjectIncludeFromProjectRecursive3'


class ProjectArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProjectIncludeFromProjectRecursive4'


class ProjectArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyProjectArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive1'


class FindManyProjectArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive2'


class FindManyProjectArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive3'


class FindManyProjectArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    include: 'ProjectIncludeFromProjectRecursive4'


class FindManyProjectArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProjectOrderByInput', List['ProjectOrderByInput']]
    where: 'ProjectWhereInput'
    cursor: 'ProjectWhereUniqueInput'
    distinct: List['ProjectScalarFieldKeys']
    
    

class ProposalIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive1']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive1']


class ProposalIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive2']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive2']


class ProposalIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive3']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive3']


class ProposalIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive4']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive4']


class ProposalIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class ProposalArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProposalIncludeFromProposalRecursive1'


class ProposalArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProposalIncludeFromProposalRecursive2'


class ProposalArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProposalIncludeFromProposalRecursive3'


class ProposalArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ProposalIncludeFromProposalRecursive4'


class ProposalArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyProposalArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive1'


class FindManyProposalArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive2'


class FindManyProposalArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive3'


class FindManyProposalArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    include: 'ProposalIncludeFromProposalRecursive4'


class FindManyProposalArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ProposalOrderByInput', List['ProposalOrderByInput']]
    where: 'ProposalWhereInput'
    cursor: 'ProposalWhereUniqueInput'
    distinct: List['ProposalScalarFieldKeys']
    
    

class ContractIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive1']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive1']
    client: Union[bool, 'UserArgsFromAuditLogRecursive1']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuditLogRecursive1']


class ContractIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive2']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive2']
    client: Union[bool, 'UserArgsFromAuditLogRecursive2']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuditLogRecursive2']


class ContractIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive3']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive3']
    client: Union[bool, 'UserArgsFromAuditLogRecursive3']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuditLogRecursive3']


class ContractIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    project: Union[bool, 'ProjectArgsFromAuditLogRecursive4']
    freelancer: Union[bool, 'UserArgsFromAuditLogRecursive4']
    client: Union[bool, 'UserArgsFromAuditLogRecursive4']
    deliveries: Union[bool, 'FindManyDeliveryArgsFromAuditLogRecursive4']


class ContractIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class ContractArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ContractIncludeFromContractRecursive1'


class ContractArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ContractIncludeFromContractRecursive2'


class ContractArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ContractIncludeFromContractRecursive3'


class ContractArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'ContractIncludeFromContractRecursive4'


class ContractArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyContractArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive1'


class FindManyContractArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive2'


class FindManyContractArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive3'


class FindManyContractArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    include: 'ContractIncludeFromContractRecursive4'


class FindManyContractArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['ContractOrderByInput', List['ContractOrderByInput']]
    where: 'ContractWhereInput'
    cursor: 'ContractWhereUniqueInput'
    distinct: List['ContractScalarFieldKeys']
    
    

class DeliveryIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    contract: Union[bool, 'ContractArgsFromAuditLogRecursive1']


class DeliveryIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    contract: Union[bool, 'ContractArgsFromAuditLogRecursive2']


class DeliveryIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    contract: Union[bool, 'ContractArgsFromAuditLogRecursive3']


class DeliveryIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    contract: Union[bool, 'ContractArgsFromAuditLogRecursive4']


class DeliveryIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class DeliveryArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class DeliveryArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class DeliveryArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class DeliveryArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class DeliveryArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyDeliveryArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive1'


class FindManyDeliveryArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive2'


class FindManyDeliveryArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive3'


class FindManyDeliveryArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    include: 'DeliveryIncludeFromDeliveryRecursive4'


class FindManyDeliveryArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DeliveryOrderByInput', List['DeliveryOrderByInput']]
    where: 'DeliveryWhereInput'
    cursor: 'DeliveryWhereUniqueInput'
    distinct: List['DeliveryScalarFieldKeys']
    
    

class UserSkillIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']


class UserSkillIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']


class UserSkillIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']


class UserSkillIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']


class UserSkillIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class UserSkillArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class UserSkillArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class UserSkillArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class UserSkillArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class UserSkillArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyUserSkillArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive1'


class FindManyUserSkillArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive2'


class FindManyUserSkillArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive3'


class FindManyUserSkillArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    include: 'UserSkillIncludeFromUserSkillRecursive4'


class FindManyUserSkillArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['UserSkillOrderByInput', List['UserSkillOrderByInput']]
    where: 'UserSkillWhereInput'
    cursor: 'UserSkillWhereUniqueInput'
    distinct: List['UserSkillScalarFieldKeys']
    
    

class DatasetIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive1']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive1']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive1']


class DatasetIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive2']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive2']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive2']


class DatasetIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive3']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive3']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive3']


class DatasetIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive4']
    dashboardLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive4']
    mlModels: Union[bool, 'FindManyMLModelArgsFromAuditLogRecursive4']


class DatasetIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class DatasetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DatasetIncludeFromDatasetRecursive1'


class DatasetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DatasetIncludeFromDatasetRecursive2'


class DatasetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DatasetIncludeFromDatasetRecursive3'


class DatasetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DatasetIncludeFromDatasetRecursive4'


class DatasetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyDatasetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive1'


class FindManyDatasetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive2'


class FindManyDatasetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive3'


class FindManyDatasetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    include: 'DatasetIncludeFromDatasetRecursive4'


class FindManyDatasetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DatasetOrderByInput', List['DatasetOrderByInput']]
    where: 'DatasetWhereInput'
    cursor: 'DatasetWhereUniqueInput'
    distinct: List['DatasetScalarFieldKeys']
    
    

class DashboardIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive1']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive1']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive1']


class DashboardIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive2']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive2']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive2']


class DashboardIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive3']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive3']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive3']


class DashboardIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    ownerUser: Union[bool, 'UserArgsFromAuditLogRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']
    widgets: Union[bool, 'FindManyWidgetArgsFromAuditLogRecursive4']
    datasetLinks: Union[bool, 'FindManyDashboardDatasetArgsFromAuditLogRecursive4']
    insights: Union[bool, 'FindManyInsightArgsFromAuditLogRecursive4']


class DashboardIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class DashboardArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardIncludeFromDashboardRecursive1'


class DashboardArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardIncludeFromDashboardRecursive2'


class DashboardArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardIncludeFromDashboardRecursive3'


class DashboardArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardIncludeFromDashboardRecursive4'


class DashboardArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyDashboardArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive1'


class FindManyDashboardArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive2'


class FindManyDashboardArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive3'


class FindManyDashboardArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    include: 'DashboardIncludeFromDashboardRecursive4'


class FindManyDashboardArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardOrderByInput', List['DashboardOrderByInput']]
    where: 'DashboardWhereInput'
    cursor: 'DashboardWhereUniqueInput'
    distinct: List['DashboardScalarFieldKeys']
    
    

class DashboardDatasetIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive1']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive1']


class DashboardDatasetIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive2']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive2']


class DashboardDatasetIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive3']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive3']


class DashboardDatasetIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive4']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive4']


class DashboardDatasetIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class DashboardDatasetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class DashboardDatasetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class DashboardDatasetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class DashboardDatasetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class DashboardDatasetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyDashboardDatasetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive1'


class FindManyDashboardDatasetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive2'


class FindManyDashboardDatasetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive3'


class FindManyDashboardDatasetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    include: 'DashboardDatasetIncludeFromDashboardDatasetRecursive4'


class FindManyDashboardDatasetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['DashboardDatasetOrderByInput', List['DashboardDatasetOrderByInput']]
    where: 'DashboardDatasetWhereInput'
    cursor: 'DashboardDatasetWhereUniqueInput'
    distinct: List['DashboardDatasetScalarFieldKeys']
    
    

class WidgetIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive1']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive1']


class WidgetIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive2']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive2']


class WidgetIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive3']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive3']


class WidgetIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive4']
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive4']


class WidgetIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class WidgetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WidgetIncludeFromWidgetRecursive1'


class WidgetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WidgetIncludeFromWidgetRecursive2'


class WidgetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WidgetIncludeFromWidgetRecursive3'


class WidgetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'WidgetIncludeFromWidgetRecursive4'


class WidgetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyWidgetArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive1'


class FindManyWidgetArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive2'


class FindManyWidgetArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive3'


class FindManyWidgetArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    include: 'WidgetIncludeFromWidgetRecursive4'


class FindManyWidgetArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['WidgetOrderByInput', List['WidgetOrderByInput']]
    where: 'WidgetWhereInput'
    cursor: 'WidgetWhereUniqueInput'
    distinct: List['WidgetScalarFieldKeys']
    
    

class InsightIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive1']
    author: Union[bool, 'UserArgsFromAuditLogRecursive1']


class InsightIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive2']
    author: Union[bool, 'UserArgsFromAuditLogRecursive2']


class InsightIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive3']
    author: Union[bool, 'UserArgsFromAuditLogRecursive3']


class InsightIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dashboard: Union[bool, 'DashboardArgsFromAuditLogRecursive4']
    author: Union[bool, 'UserArgsFromAuditLogRecursive4']


class InsightIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class InsightArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'InsightIncludeFromInsightRecursive1'


class InsightArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'InsightIncludeFromInsightRecursive2'


class InsightArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'InsightIncludeFromInsightRecursive3'


class InsightArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'InsightIncludeFromInsightRecursive4'


class InsightArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyInsightArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive1'


class FindManyInsightArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive2'


class FindManyInsightArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive3'


class FindManyInsightArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    include: 'InsightIncludeFromInsightRecursive4'


class FindManyInsightArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['InsightOrderByInput', List['InsightOrderByInput']]
    where: 'InsightWhereInput'
    cursor: 'InsightWhereUniqueInput'
    distinct: List['InsightScalarFieldKeys']
    
    

class MLModelIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive1']
    creator: Union[bool, 'UserArgsFromAuditLogRecursive1']


class MLModelIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive2']
    creator: Union[bool, 'UserArgsFromAuditLogRecursive2']


class MLModelIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive3']
    creator: Union[bool, 'UserArgsFromAuditLogRecursive3']


class MLModelIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    dataset: Union[bool, 'DatasetArgsFromAuditLogRecursive4']
    creator: Union[bool, 'UserArgsFromAuditLogRecursive4']


class MLModelIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class MLModelArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MLModelIncludeFromMLModelRecursive1'


class MLModelArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MLModelIncludeFromMLModelRecursive2'


class MLModelArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MLModelIncludeFromMLModelRecursive3'


class MLModelArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'MLModelIncludeFromMLModelRecursive4'


class MLModelArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyMLModelArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive1'


class FindManyMLModelArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive2'


class FindManyMLModelArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive3'


class FindManyMLModelArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    include: 'MLModelIncludeFromMLModelRecursive4'


class FindManyMLModelArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['MLModelOrderByInput', List['MLModelOrderByInput']]
    where: 'MLModelWhereInput'
    cursor: 'MLModelWhereUniqueInput'
    distinct: List['MLModelScalarFieldKeys']
    
    

class TransactionIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']


class TransactionIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']


class TransactionIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']


class TransactionIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']


class TransactionIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class TransactionArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TransactionIncludeFromTransactionRecursive1'


class TransactionArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TransactionIncludeFromTransactionRecursive2'


class TransactionArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TransactionIncludeFromTransactionRecursive3'


class TransactionArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'TransactionIncludeFromTransactionRecursive4'


class TransactionArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyTransactionArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive1'


class FindManyTransactionArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive2'


class FindManyTransactionArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive3'


class FindManyTransactionArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    include: 'TransactionIncludeFromTransactionRecursive4'


class FindManyTransactionArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['TransactionOrderByInput', List['TransactionOrderByInput']]
    where: 'TransactionWhereInput'
    cursor: 'TransactionWhereUniqueInput'
    distinct: List['TransactionScalarFieldKeys']
    
    

class SubscriptionIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive1']


class SubscriptionIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive2']


class SubscriptionIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive3']


class SubscriptionIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']
    organization: Union[bool, 'OrganizationArgsFromAuditLogRecursive4']


class SubscriptionIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class SubscriptionArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class SubscriptionArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class SubscriptionArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class SubscriptionArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class SubscriptionArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManySubscriptionArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive1'


class FindManySubscriptionArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive2'


class FindManySubscriptionArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive3'


class FindManySubscriptionArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    include: 'SubscriptionIncludeFromSubscriptionRecursive4'


class FindManySubscriptionArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['SubscriptionOrderByInput', List['SubscriptionOrderByInput']]
    where: 'SubscriptionWhereInput'
    cursor: 'SubscriptionWhereUniqueInput'
    distinct: List['SubscriptionScalarFieldKeys']
    
    

class NotificationIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']


class NotificationIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']


class NotificationIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']


class NotificationIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']


class NotificationIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class NotificationArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'NotificationIncludeFromNotificationRecursive1'


class NotificationArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'NotificationIncludeFromNotificationRecursive2'


class NotificationArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'NotificationIncludeFromNotificationRecursive3'


class NotificationArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'NotificationIncludeFromNotificationRecursive4'


class NotificationArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyNotificationArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive1'


class FindManyNotificationArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive2'


class FindManyNotificationArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive3'


class FindManyNotificationArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    include: 'NotificationIncludeFromNotificationRecursive4'


class FindManyNotificationArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['NotificationOrderByInput', List['NotificationOrderByInput']]
    where: 'NotificationWhereInput'
    cursor: 'NotificationWhereUniqueInput'
    distinct: List['NotificationScalarFieldKeys']
    
    

class AuthTokenIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive1']


class AuthTokenIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive2']


class AuthTokenIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive3']


class AuthTokenIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    user: Union[bool, 'UserArgsFromAuditLogRecursive4']


class AuthTokenIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class AuthTokenArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class AuthTokenArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class AuthTokenArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class AuthTokenArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class AuthTokenArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyAuthTokenArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive1'


class FindManyAuthTokenArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive2'


class FindManyAuthTokenArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive3'


class FindManyAuthTokenArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    include: 'AuthTokenIncludeFromAuthTokenRecursive4'


class FindManyAuthTokenArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuthTokenOrderByInput', List['AuthTokenOrderByInput']]
    where: 'AuthTokenWhereInput'
    cursor: 'AuthTokenWhereUniqueInput'
    distinct: List['AuthTokenScalarFieldKeys']
    
    

class FileIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    uploader: Union[bool, 'UserArgsFromAuditLogRecursive1']


class FileIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    uploader: Union[bool, 'UserArgsFromAuditLogRecursive2']


class FileIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    uploader: Union[bool, 'UserArgsFromAuditLogRecursive3']


class FileIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    uploader: Union[bool, 'UserArgsFromAuditLogRecursive4']


class FileIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class FileArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FileIncludeFromFileRecursive1'


class FileArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FileIncludeFromFileRecursive2'


class FileArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FileIncludeFromFileRecursive3'


class FileArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'FileIncludeFromFileRecursive4'


class FileArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyFileArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive1'


class FindManyFileArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive2'


class FindManyFileArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive3'


class FindManyFileArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    include: 'FileIncludeFromFileRecursive4'


class FindManyFileArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['FileOrderByInput', List['FileOrderByInput']]
    where: 'FileWhereInput'
    cursor: 'FileWhereUniqueInput'
    distinct: List['FileScalarFieldKeys']
    
    

class AuditLogIncludeFromAuditLog(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    actor: Union[bool, 'UserArgsFromAuditLogRecursive1']


class AuditLogIncludeFromAuditLogRecursive1(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    actor: Union[bool, 'UserArgsFromAuditLogRecursive2']


class AuditLogIncludeFromAuditLogRecursive2(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    actor: Union[bool, 'UserArgsFromAuditLogRecursive3']


class AuditLogIncludeFromAuditLogRecursive3(TypedDict, total=False):
    """Relational arguments for AuditLog"""
    actor: Union[bool, 'UserArgsFromAuditLogRecursive4']


class AuditLogIncludeFromAuditLogRecursive4(TypedDict, total=False):
    """Relational arguments for AuditLog"""

    

class AuditLogArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class AuditLogArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class AuditLogArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class AuditLogArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class AuditLogArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    
    

class FindManyAuditLogArgsFromAuditLog(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive1'


class FindManyAuditLogArgsFromAuditLogRecursive1(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive2'


class FindManyAuditLogArgsFromAuditLogRecursive2(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive3'


class FindManyAuditLogArgsFromAuditLogRecursive3(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    include: 'AuditLogIncludeFromAuditLogRecursive4'


class FindManyAuditLogArgsFromAuditLogRecursive4(TypedDict, total=False):
    """Arguments for AuditLog"""
    take: int
    skip: int
    order_by: Union['AuditLogOrderByInput', List['AuditLogOrderByInput']]
    where: 'AuditLogWhereInput'
    cursor: 'AuditLogWhereUniqueInput'
    distinct: List['AuditLogScalarFieldKeys']
    


FindManyAuditLogArgs = FindManyAuditLogArgsFromAuditLog
FindFirstAuditLogArgs = FindManyAuditLogArgsFromAuditLog


    

class AuditLogWhereInput(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    actorId: Union[None, _int, 'types.IntFilter']
    action: Union[_str, 'types.StringFilter']
    model: Union[None, _str, 'types.StringFilter']
    recordId: Union[None, _str, 'types.StringFilter']
    changes: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    actor: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive1', List['AuditLogWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive1']
    OR: List['AuditLogWhereInputRecursive1']
    NOT: List['AuditLogWhereInputRecursive1']


class AuditLogWhereInputRecursive1(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    actorId: Union[None, _int, 'types.IntFilter']
    action: Union[_str, 'types.StringFilter']
    model: Union[None, _str, 'types.StringFilter']
    recordId: Union[None, _str, 'types.StringFilter']
    changes: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    actor: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive2', List['AuditLogWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive2']
    OR: List['AuditLogWhereInputRecursive2']
    NOT: List['AuditLogWhereInputRecursive2']


class AuditLogWhereInputRecursive2(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    actorId: Union[None, _int, 'types.IntFilter']
    action: Union[_str, 'types.StringFilter']
    model: Union[None, _str, 'types.StringFilter']
    recordId: Union[None, _str, 'types.StringFilter']
    changes: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    actor: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive3', List['AuditLogWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive3']
    OR: List['AuditLogWhereInputRecursive3']
    NOT: List['AuditLogWhereInputRecursive3']


class AuditLogWhereInputRecursive3(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    actorId: Union[None, _int, 'types.IntFilter']
    action: Union[_str, 'types.StringFilter']
    model: Union[None, _str, 'types.StringFilter']
    recordId: Union[None, _str, 'types.StringFilter']
    changes: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    actor: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuditLogWhereInputRecursive4', List['AuditLogWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AuditLogWhereInputRecursive4']
    OR: List['AuditLogWhereInputRecursive4']
    NOT: List['AuditLogWhereInputRecursive4']


class AuditLogWhereInputRecursive4(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    actorId: Union[None, _int, 'types.IntFilter']
    action: Union[_str, 'types.StringFilter']
    model: Union[None, _str, 'types.StringFilter']
    recordId: Union[None, _str, 'types.StringFilter']
    changes: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    actor: 'UserRelationFilter'



# aggregate AuditLog types


    

class AuditLogScalarWhereWithAggregatesInput(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    actorId: Union[_int, 'types.IntWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    model: Union[_str, 'types.StringWithAggregatesFilter']
    recordId: Union[_str, 'types.StringWithAggregatesFilter']
    changes: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive1']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive1']


class AuditLogScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    actorId: Union[_int, 'types.IntWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    model: Union[_str, 'types.StringWithAggregatesFilter']
    recordId: Union[_str, 'types.StringWithAggregatesFilter']
    changes: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive2']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive2']


class AuditLogScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    actorId: Union[_int, 'types.IntWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    model: Union[_str, 'types.StringWithAggregatesFilter']
    recordId: Union[_str, 'types.StringWithAggregatesFilter']
    changes: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive3']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive3']


class AuditLogScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    actorId: Union[_int, 'types.IntWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    model: Union[_str, 'types.StringWithAggregatesFilter']
    recordId: Union[_str, 'types.StringWithAggregatesFilter']
    changes: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AuditLogScalarWhereWithAggregatesInputRecursive4']
    OR: List['AuditLogScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AuditLogScalarWhereWithAggregatesInputRecursive4']


class AuditLogScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """AuditLog arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    actorId: Union[_int, 'types.IntWithAggregatesFilter']
    action: Union[_str, 'types.StringWithAggregatesFilter']
    model: Union[_str, 'types.StringWithAggregatesFilter']
    recordId: Union[_str, 'types.StringWithAggregatesFilter']
    changes: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class AuditLogGroupByOutput(TypedDict, total=False):
    id: _int
    actorId: _int
    action: _str
    model: _str
    recordId: _str
    changes: 'fields.Json'
    createdAt: datetime.datetime
    _sum: 'AuditLogSumAggregateOutput'
    _avg: 'AuditLogAvgAggregateOutput'
    _min: 'AuditLogMinAggregateOutput'
    _max: 'AuditLogMaxAggregateOutput'
    _count: 'AuditLogCountAggregateOutput'


class AuditLogAvgAggregateOutput(TypedDict, total=False):
    """AuditLog output for aggregating averages"""
    id: float
    actorId: float


class AuditLogSumAggregateOutput(TypedDict, total=False):
    """AuditLog output for aggregating sums"""
    id: _int
    actorId: _int


class AuditLogScalarAggregateOutput(TypedDict, total=False):
    """AuditLog output including scalar fields"""
    id: _int
    actorId: _int
    action: _str
    model: _str
    recordId: _str
    changes: 'fields.Json'
    createdAt: datetime.datetime


AuditLogMinAggregateOutput = AuditLogScalarAggregateOutput
AuditLogMaxAggregateOutput = AuditLogScalarAggregateOutput


class AuditLogMaxAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating by max"""
    id: bool
    actorId: bool
    action: bool
    model: bool
    recordId: bool
    changes: bool
    createdAt: bool


class AuditLogMinAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating by min"""
    id: bool
    actorId: bool
    action: bool
    model: bool
    recordId: bool
    changes: bool
    createdAt: bool


class AuditLogNumberAggregateInput(TypedDict, total=False):
    """AuditLog input for aggregating numbers"""
    id: bool
    actorId: bool


AuditLogAvgAggregateInput = AuditLogNumberAggregateInput
AuditLogSumAggregateInput = AuditLogNumberAggregateInput


AuditLogCountAggregateInput = TypedDict(
    'AuditLogCountAggregateInput',
    {
        'id': bool,
        'actorId': bool,
        'action': bool,
        'model': bool,
        'recordId': bool,
        'changes': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

AuditLogCountAggregateOutput = TypedDict(
    'AuditLogCountAggregateOutput',
    {
        'id': int,
        'actorId': int,
        'action': int,
        'model': int,
        'recordId': int,
        'changes': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


AuditLogKeys = Literal[
    'id',
    'actorId',
    'action',
    'model',
    'recordId',
    'changes',
    'createdAt',
    'actor',
]
AuditLogScalarFieldKeys = Literal[
    'id',
    'actorId',
    'action',
    'model',
    'recordId',
    'changes',
    'createdAt',
]
AuditLogScalarFieldKeysT = TypeVar('AuditLogScalarFieldKeysT', bound=AuditLogScalarFieldKeys)

AuditLogRelationalFieldKeys = Literal[
        'actor',
    ]



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields