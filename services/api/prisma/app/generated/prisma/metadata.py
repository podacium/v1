from __future__ import annotations
# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# fmt: off
# -- template metadata.py.jinja --


PRISMA_MODELS: set[str] = {
    'User',
    'Organization',
    'OrganizationMember',
    'Path',
    'Module',
    'PathModule',
    'Lesson',
    'Enrollment',
    'LessonProgress',
    'Certificate',
    'Project',
    'Proposal',
    'Contract',
    'Delivery',
    'UserSkill',
    'Dataset',
    'Dashboard',
    'DashboardDataset',
    'Widget',
    'Insight',
    'MLModel',
    'Transaction',
    'Subscription',
    'Notification',
    'AuthToken',
    'File',
    'AuditLog',
}

RELATIONAL_FIELD_MAPPINGS: dict[str, dict[str, str]] = {
    'User': {
        'primaryOrganization': 'Organization',
        'ownedOrganization': 'Organization',
        'memberships': 'OrganizationMember',
        'sentInvites': 'OrganizationMember',
        'enrollments': 'Enrollment',
        'lessonProgresses': 'LessonProgress',
        'certificates': 'Certificate',
        'instructedModules': 'Module',
        'projects': 'Project',
        'proposals': 'Proposal',
        'contractsAsFreelancer': 'Contract',
        'contractsAsClient': 'Contract',
        'datasets': 'Dataset',
        'dashboards': 'Dashboard',
        'insights': 'Insight',
        'mlModels': 'MLModel',
        'transactions': 'Transaction',
        'subscriptions': 'Subscription',
        'notifications': 'Notification',
        'files': 'File',
        'authTokens': 'AuthToken',
        'auditLogs': 'AuditLog',
        'skillsDetails': 'UserSkill',
    },
    'Organization': {
        'owner': 'User',
        'primaryUsers': 'User',
        'members': 'OrganizationMember',
        'datasets': 'Dataset',
        'dashboards': 'Dashboard',
        'projects': 'Project',
        'transactions': 'Transaction',
        'subscriptions': 'Subscription',
    },
    'OrganizationMember': {
        'organization': 'Organization',
        'user': 'User',
        'invitedBy': 'User',
    },
    'Path': {
        'modules': 'PathModule',
        'enrollments': 'Enrollment',
    },
    'Module': {
        'instructor': 'User',
        'lessons': 'Lesson',
        'certificates': 'Certificate',
        'enrollments': 'Enrollment',
        'pathLinks': 'PathModule',
    },
    'PathModule': {
        'path': 'Path',
        'module': 'Module',
    },
    'Lesson': {
        'module': 'Module',
        'progresses': 'LessonProgress',
    },
    'Enrollment': {
        'user': 'User',
        'module': 'Module',
        'path': 'Path',
    },
    'LessonProgress': {
        'user': 'User',
        'lesson': 'Lesson',
    },
    'Certificate': {
        'user': 'User',
        'module': 'Module',
    },
    'Project': {
        'owner': 'User',
        'organization': 'Organization',
        'proposals': 'Proposal',
        'contracts': 'Contract',
    },
    'Proposal': {
        'project': 'Project',
        'freelancer': 'User',
    },
    'Contract': {
        'project': 'Project',
        'freelancer': 'User',
        'client': 'User',
        'deliveries': 'Delivery',
    },
    'Delivery': {
        'contract': 'Contract',
    },
    'UserSkill': {
        'user': 'User',
    },
    'Dataset': {
        'ownerUser': 'User',
        'organization': 'Organization',
        'widgets': 'Widget',
        'dashboardLinks': 'DashboardDataset',
        'mlModels': 'MLModel',
    },
    'Dashboard': {
        'ownerUser': 'User',
        'organization': 'Organization',
        'widgets': 'Widget',
        'datasetLinks': 'DashboardDataset',
        'insights': 'Insight',
    },
    'DashboardDataset': {
        'dashboard': 'Dashboard',
        'dataset': 'Dataset',
    },
    'Widget': {
        'dashboard': 'Dashboard',
        'dataset': 'Dataset',
    },
    'Insight': {
        'dashboard': 'Dashboard',
        'author': 'User',
    },
    'MLModel': {
        'dataset': 'Dataset',
        'creator': 'User',
    },
    'Transaction': {
        'user': 'User',
        'organization': 'Organization',
    },
    'Subscription': {
        'user': 'User',
        'organization': 'Organization',
    },
    'Notification': {
        'user': 'User',
    },
    'AuthToken': {
        'user': 'User',
    },
    'File': {
        'uploader': 'User',
    },
    'AuditLog': {
        'actor': 'User',
    },
}

# fmt: on